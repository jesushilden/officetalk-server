{"version":3,"sources":["Views/Office/components/Dots/Dots.js","Views/Login/Login.js","Views/Office/components/Navbar/Navbar.js","Views/Office/components/Chat/Message/Message.js","Views/Office/components/Chat/Chat.js","Views/Office/components/rooms/Room/Room.js","Views/Office/components/rooms/Hallway/Hallway.js","Views/Office/components/Avatar/Avatar.js","Views/Office/components/Furniture/Furniture.js","Views/Office/components/rooms/Rooms.js","Views/Office/components/Loading/Loading.js","Views/Office/components/CoWorkers/CoWorkers.js","Views/Office/components/Settings/Settings.js","Views/Office/Office.js","App.js","Services/Organization.js","Services/Message.js","Stores/OfficeStore.js","Hooks/Mover.js","Services/Socket.js","Stores/SocketStore.js","Services/Employee.js","Services/SignIn.js","Stores/UserStore.js","Stores/MediaStore.js","index.js","Stores/RootStore.js"],"names":["Dots","props","className","white","data-title","Login","userStore","rootstore","socketStore","useState","username","setUsername","password","setPassword","loading","setLoading","loginType","setLoginType","isActive","tab","signIn","a","alert","response","connectToOffice","token","user","organization","navigateTo","console","log","onClick","size","placeholder","value","onChange","event","target","type","style","background","Navbar","observer","officeStore","src","logo","name","users","find","employeeId","_id","roomId","position","room","office","rooms","getCurrentRoom","setTo","muted","setMuted","emitMuted","toggleMic","color","silenced","setSilenced","emitSilenced","toggleVolume","setShowSettings","backgroundImage","avatar","signOut","disconnectSocket","Message","message","author","myMessage","content","Chat","setMessage","sending","setSending","activeChat","setActiveChat","sendMessage","window","marginRight","messages","roomMessages","map","key","sendRoomMessage","Room","first","last","bottomRoom","id","onDoubleClick","document","getElementById","getBoundingClientRect","coordinates","x","clientX","left","y","clientY","top","emitPosition","move","Hallway","e","Avatar","getIcon","employeeInfo","employees","empl","transition","transitionTime","border","getUserAvatar","backgroundColor","Furniture","furniture","height","width","Rooms","roomsCount","length","index","furnitures","furnitureId","Loading","CoWorkers","isOnline","employee","right","show","close","Settings","setBackground","unsaved","setUnsaved","JSON","parse","stringify","setUser","saveing","setSaveing","useEffect","changeValue","property","save","updateUser","margin","cursor","Office","mediaStore","showCoWorkers","setShowCoWorkers","showSettings","fetchOffice","fetchOrganization","peerAudios","peerAudio","playsInline","url","stream","playing","App","page","setPage","checkSignIn","checkLogin","renderPage","services","getOrganization","axios","get","data","sendOfficeMessage","post","OfficeStore","rootStore","direction","Organization","runInAction","setEmployeeStates","addEmployeeState","employeeState","concat","removeEmployeeState","filter","emitRoomMessage","msg","officeClone","unshift","receiveMessage","muteEmployee","usersClone","silenceEmployee","changePosition","receiveRoomMessage","clearRoomChat","this","makeObservable","observable","action","delay","ms","Promise","res","setTimeout","X","Y","roomToHall","hallToRoom","roomToRoom","moveInsideRoom","duration","moveToDoor","duration2","positionX","positionY","calcTravelTime","targetRoom","doorElement","doorX","offsetLeft","doorY","offsetTop","oldX","oldY","newX","newY","travelX","Math","abs","travelY","hypot","baseUrl","updateState","put","addRoomMessage","sendSignal","signal","returnSignal","SocketStore","socket","io","connect","auth","on","employeeStates","iceServers","connectToPeers","targetUser","roomMessage","disconnect","myId","state","Socket","emitStartCall","startCall","updateEmployee","signInWithToken","signInEmployee","credentials","signInOrganization","SignOut","UserStore","SignIn","endAllConnections","userValues","Employee","MediaStore","peers","navigator","mediaDevices","getUserMedia","audio","video","then","getRoomUsers","forEach","createPeer","addPeer","peer","Peer","initiator","trickle","config","endPeerConnection","err","myRoom","roomUsers","destroy","audios","makeAutoObservable","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.07b46c09.chunk.js","sourcesContent":["import './Dots.css'\n\nconst Dots = (props) => {\n    return (\n        <div className={`dots ${props.white && 'white'}`}>\n            <div className=\"snippet\" data-title=\".dot-hourglass\">\n                <div className=\"stage\">\n                    <div className=\"dot-flashing\"></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dots\n","import { useState } from 'react';\nimport './Login.css';\nimport { rootstore } from '../../index'\nimport Dots from '../Office/components/Dots/Dots'\nimport { AiOutlineUser, AiOutlineShop } from 'react-icons/ai'\n\nfunction Login(props) {\n    const { userStore, socketStore } = rootstore\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [loginType, setLoginType] = useState('user')\n\n    const isActive = (tab) => {\n        if (tab === 'user' && loginType === 'user') {\n            return 'user-active'\n        }\n        if (tab === 'organization' && loginType === 'organization') {\n            return 'organization-active'\n        }\n        return ''\n    }\n\n    const signIn = async () => {\n        if (username === '' || password === '') {\n            alert('username and password required')\n            return\n        }\n\n        try {\n            setLoading(true)\n            const response = await userStore.signIn(username, password)\n            socketStore.connectToOffice(response.token, response.user.organization)\n            props.navigateTo('office')\n            setLoading(false)\n\n        } catch (error) {\n            setLoading(false)\n            setPassword('')\n            alert('could not signin')\n            console.log(error)\n        }\n    }\n\n    return (\n        <div className=\"login\">\n            <div className=\"login-title\">\n                Sign in to OfficeTalk\n            </div>\n            <div className=\"login-card block-shadow\">\n                <div className=\"login-card-tabs\">\n                    <div className={`login-card-tab ${isActive('user')}`} onClick={() => setLoginType('user')}>\n                        <AiOutlineUser size={20} />\n                        <div className=\"login-tab-text\">User</div>\n                    </div>\n                    <div className={`login-card-tab ${isActive('organization')}`} onClick={() => setLoginType('organization')}>\n                        <AiOutlineShop size={20} />\n                        <div className=\"login-tab-text\">Organization</div>\n                    </div>\n                </div>\n                <div className=\"login-input-row\">\n                    <div className=\"login-input-title\">\n                    </div>\n                    <input\n                        placeholder={'Email'}\n                        value={username}\n                        onChange={(event) => setUsername(event.target.value)}\n                    />\n                </div>\n                <div className=\"login-input-row\">\n                    <div className=\"login-input-title\">\n                    </div>\n                    <input\n                        placeholder={'Password'}\n                        value={password}\n                        type={'password'}\n                        onChange={(event) => setPassword(event.target.value)}\n                    />\n                </div>\n                <div className=\"login-input-row\">\n                    <div className=\"OTButton\" style={{ background: loginType === 'organization' && '#F74040' }} onClick={() => signIn()}>\n                        {loading ?\n                            <Dots white />\n                            :\n                            `Sign in`\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","import './Navbar.css'\nimport { observer } from 'mobx-react'\nimport { rootstore } from '../../../../index'\nimport { FiSettings, FiMic, FiVolume2, FiMicOff, FiVolumeX } from 'react-icons/fi'\n\nconst Navbar = observer((props) => {\n    const { userStore, socketStore, officeStore } = rootstore\n\n    const toggleMic = () => {\n        const setTo = !userStore.muted\n        userStore.setMuted(setTo)\n        socketStore.emitMuted(setTo)\n    }\n\n    const toggleVolume = () => {\n        const setTo = !userStore.silenced\n        userStore.setSilenced(setTo)\n        socketStore.emitSilenced(setTo)\n    }\n\n    const signOut = () => {\n        userStore.signOut()\n        socketStore.disconnectSocket()\n        props.navigateTo('login')\n    }\n\n    const getCurrentRoom = () => {\n        const user = officeStore.users.find(user => user.employeeId === userStore.user._id)\n        if (!user) {\n            return 'loading...'\n        }\n        const roomId = user.position.room\n\n        if (roomId === -1) {\n            return \"Hallway\"\n        } else {\n            return officeStore.office.rooms.find(room => room._id === roomId).name\n        }\n    }\n\n    return (\n        <div className=\"navbar block-shadow\">\n            <div className=\"navbar-logo\">\n                <img className=\"navbar-logo-image\" src={officeStore.organization.logo}>\n                </img>\n                <div className=\"navbar-office-name\">\n                    {officeStore.organization.name}\n                </div>\n            </div>\n            <div className=\"navbar-controls\">\n                <div className=\"navbar-controls-border\"></div>\n                <div className=\"navbar-room\">\n                    <div className=\"navbar-room-name\">{getCurrentRoom()}</div>\n                    <div className=\"navbar-room-title\">current room</div>\n                </div>\n                <div className=\"navbar-voice\" onClick={() => toggleMic()} >\n                    {!userStore.muted ?\n                        <FiMic size={22} className=\"navbar-voice-microphone\" color={'#1CBF73'} />\n                        :\n                        <FiMicOff size={22} className=\"navbar-voice-microphone\" color={'#F74040'} />\n                    }\n                    <div className=\"navbar-room-title\">microphone</div>\n                </div>\n                <div className=\"navbar-voice\" onClick={() => toggleVolume()}>\n                    {!userStore.silenced ?\n                        <FiVolume2 size={22} className=\"navbar-voice-volume\" color={'#1CBF73'} />\n                        :\n                        <FiVolumeX size={22} className=\"navbar-voice-volume\" color={'#F74040'} />\n                    }\n                    <div className=\"navbar-room-title\">volume</div>\n                </div>\n                <div className=\"navbar-settings\" onClick={() => props.setShowSettings(true)}>\n                    <FiSettings size={22} className=\"navbar-settings-cog\" color={'#404145'} />\n                    <div className=\"navbar-room-title\">settings</div>\n                </div>\n                <div className=\"navbar-controls-border\"></div>\n            </div>\n            <div className=\"navbar-user\">\n                {userStore.user.name}\n                <div className=\"navbar-user-avatar\" style={{ backgroundImage: `url(${userStore.user.avatar})` }}>\n                </div>\n                <div className=\"navbar-sign-out\" onClick={() => signOut()}>\n                    Sign out\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default Navbar","import './Message.css'\nimport { observer } from 'mobx-react'\nimport { rootstore } from '../../../../../index'\n\nconst Message = observer((props) => {\n    const userStore = rootstore.userStore\n\n    const myMessage = () => {\n        if (props.message.author._id === userStore.user._id) {\n            return ' my-message'\n        }\n    }\n\n    return (\n        <div className={`message ${myMessage()}`}>\n            <div className=\"message-buble\">\n                <div className=\"message-author\">\n                    {props.message.author.name}\n                </div>\n                <div className=\"message-content\">\n                    {props.message.content}\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default Message","import { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport './Chat.css';\nimport Message from './Message/Message'\nimport { rootstore } from '../../../../index'\nimport Dots from '../Dots/Dots'\nimport { AiOutlineSend, AiOutlineInfoCircle } from 'react-icons/ai'\n\nconst Chat = observer((props) => {\n    const [message, setMessage] = useState('')\n    const [sending, setSending] = useState(false)\n    const [activeChat, setActiveChat] = useState('office')\n    const { officeStore, userStore } = rootstore\n\n    const sendMessage = async () => {\n        setSending(true)\n        const response = await officeStore.sendMessage(message)\n        setSending(false)\n        setMessage('')\n        if (!response) {\n            window.alert('sending message failed')\n        }\n    }\n\n    const sendRoomMessage = () => {\n        setSending(true)\n        officeStore.sendRoomMessage(message)\n        setSending(false)\n        setMessage('')\n    }\n\n    const getCurrentRoom = () => {\n        const user = officeStore.users.find(user => user.employeeId === userStore.user._id)\n        if (!user) {\n            return 'loading...'\n        }\n        const roomId = user.position.room\n\n        if (roomId === -1) {\n            return \"Hallway\"\n        } else {\n            return officeStore.office.rooms.find(room => room._id === roomId).name\n        }\n    }\n\n    const messagesToDisplay = () => {\n        return activeChat === 'office' ? officeStore.office.messages : officeStore.roomMessages\n    }\n\n    return (\n        <div className=\"chat block-shadow\">\n            <div className=\"chat-tabs block-shadow\">\n                <div className={`chat-tab ${activeChat === 'office' && 'chat-tab-active'}`} onClick={() => setActiveChat('office')}>Office</div>\n                <div className={`chat-tab ${activeChat === 'room' && 'chat-tab-active'}`} onClick={() => setActiveChat('room')}>{getCurrentRoom()}</div>\n            </div>\n            {activeChat === 'room' &&\n                <div className=\"chat-messages-warning\">\n                    <AiOutlineInfoCircle style={{marginRight: '5px'}} size={18}/>Message history is not saved in rooms.\n            </div>}\n            <div className=\"chat-messages\">\n                {messagesToDisplay().map((message, key) =>\n                    <Message key={key} message={message} />\n                )}\n            </div>\n            <div className=\"chat-controls\">\n                <div className=\"chat-input-container\">\n                    <input\n                        value={message}\n                        placeholder={'Say something'}\n                        onChange={(event) => setMessage(event.target.value)}\n                    />\n                    <div className=\"chat-send\" onClick={activeChat === 'office' ? sendMessage : sendRoomMessage}>\n                        {sending ?\n                            <Dots />\n                            :\n                            <AiOutlineSend size={30} />\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default Chat","import { observer } from 'mobx-react'\nimport { rootstore } from '../../../../..'\nimport './Room.css'\n\nconst Room = observer((props) => {\n    const { socketStore } = rootstore\n\n    const move = (event) => {\n        const rooms = document.getElementById('rooms').getBoundingClientRect()\n        const position = {\n            room: props.room._id,\n            coordinates: {\n                x: event.clientX - rooms.left,\n                y: event.clientY - rooms.top\n            }\n        }\n        socketStore.emitPosition(position)\n    }\n\n    return (\n        <div className={`room ${props.first && 'first-block'} ${props.last && 'last-block'} ${props.bottomRoom && 'bottom-room'}`} id={`room${props.room._id}`}>\n            <div className=\"room-top\">\n                {props.room.name}\n            </div>\n            <div className=\"room-content\" onDoubleClick={(event) => move(event)}>\n            </div>\n            <div className=\"room-bottom\">\n                <div className=\"room-door\" id={`door${props.room._id}`}></div>\n            </div>\n        </div>\n    )\n})\n\nexport default Room;","import './Hallway.css'\nimport { observer } from 'mobx-react'\nimport { rootstore } from '../../../../..'\n\nconst Hallway = observer((props) => {\n    const { socketStore } = rootstore\n\n    const move = (event) => {\n        const rooms = document.getElementById('rooms').getBoundingClientRect()\n        const position = {\n            room: -1,\n            coordinates: {\n                x: event.clientX - rooms.left,\n                y: event.clientY - rooms.top\n            }\n        }\n        socketStore.emitPosition(position)\n    }\n    return (\n        <div className={`hallway ${props.first && 'first-block'} ${props.last && 'last-block'}`} onDoubleClick={(e) => move(e)}>\n        </div>\n    );\n})\n\nexport default Hallway","import './Avatar.css'\nimport { observer } from 'mobx-react'\nimport { rootstore } from '../../../../index'\nimport { FiMicOff, FiVolumeX } from 'react-icons/fi'\n\n\nconst Avatar = observer((props) => {\n    const officeStore = rootstore.officeStore\n    const userStore = rootstore.userStore\n\n    const getUserAvatar = () => {\n        const user = officeStore.organization.employees.find(empl => empl._id === props.user.employeeId)\n        if (!user) {\n            return 'laoding...'\n        } else {\n            return user.avatar\n        }\n    }\n\n    const getIcon = () => {\n        if(props.user.silenced) {\n            return <FiVolumeX size={22} className=\"avatar-voice-volume\" color={'#F74040'} />\n        }else if (props.user.muted) {\n            return <FiMicOff size={22} className=\"avatar-voice-microphone\" color={'#F74040'} />\n        }else {\n            return false\n        }\n    }\n\n    const employeeInfo = officeStore.organization.employees.find(empl => empl._id === props.user.employeeId)\n\n    return (\n        <div className=\"avatar\" style={{\n            top: props.user.position.coordinates.y,\n            left: props.user.position.coordinates.x,\n            transition: `all ${props.user.transitionTime}s linear`,\n            border: `${props.user.employeeId === userStore.user._id ? '2' : '1'}px solid ${props.user.employeeId === userStore.user._id ? '#1CBF73' : 'black'}`,\n            backgroundImage: `url(${getUserAvatar()})`\n        }}>\n            <div className=\"avatar-shadow\" style={{backgroundColor: getIcon() ? '#00000041': 'transparent'}}>\n            {getIcon()}\n            </div>\n            <div className=\"avatar-info\">\n                <div className=\"avatar-info-name\">\n                    {employeeInfo.name}\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default Avatar","import './Furniture.css'\nimport { observer } from 'mobx-react'\n\nconst Furniture = observer((props) => {\n\n    return (\n        <div className={`furniture ${props.furniture.type}`} style={{\n            top: props.furniture.position.y,\n            left: props.furniture.position.x,\n            height: props.furniture.height,\n            width: props.furniture.width\n        }}>\n        </div>\n    )\n})\n\nexport default Furniture","import './Rooms.css'\nimport { observer, } from 'mobx-react'\nimport { rootstore } from '../../../../index'\nimport Room from './Room/Room'\nimport Hallway from './Hallway/Hallway'\nimport Avatar from '../Avatar/Avatar'\nimport Furniture from '../Furniture/Furniture'\n\nconst Rooms = observer(() => {\n    const officeStore = rootstore.officeStore\n    const roomsCount = officeStore.office.rooms.length\n\n    return (\n        <div className=\"rooms\" id=\"rooms\">\n            <div className=\"rooms-row\">\n                {officeStore.office.rooms.map((room, index) => {\n                    if (index % 2 === 0) {\n                        return (\n                            <Room\n                                room={room}\n                                first={index === 0}\n                            />\n                        )\n                    } return null\n                })}\n            </div>\n            <Hallway/>\n            <div className=\"rooms-row\">\n                {officeStore.office.rooms.map((room, index) => {\n                    if (index % 2 === 1) {\n                        return (\n                            <Room\n                                room={room}\n                                bottomRoom\n                                first={index === 1}\n                            />\n\n                        )\n                    } else return null\n                })}\n                {roomsCount % 2 === 1 &&\n                    <div className=\"room-block-empty\"></div>\n                }\n            </div>\n            <div className=\"furniture-layer\">\n                {officeStore.furnitures.map(furniture => <Furniture key={furniture.furnitureId} furniture={furniture} />)}\n            </div>\n            <div className=\"user-layer\">\n                {officeStore.users.map(user => <Avatar key={user.employeeId} user={user} />)}\n            </div>\n        </div>\n    )\n})\n\nexport default Rooms","import Dots from '../Dots/Dots';\nimport './Loading.css';\n\nconst Loading = (props) => {\n    return (\n        <div className=\"loading\">\n            <div className=\"loading-text\">Loading Office</div>\n            <Dots />\n        </div>\n    )\n}\n\nexport default Loading","import './CoWorkers.css'\nimport { observer } from 'mobx-react'\nimport { rootstore } from '../../../../index'\nimport { FiChevronsRight } from 'react-icons/fi'\n\n\nconst CoWorkers = observer((props) => {\n    const officeStore = rootstore.officeStore\n\n    const isOnline = (employee) => {\n        return officeStore.users.find(user => user.employeeId === employee._id)\n    }\n\n    return (\n        <div className=\"coworkers block-shadow\" style={{ right: props.show ? '0px' : '-250px' }}>\n            <div className=\"coworkers-header\">\n                Co-workers\n            </div>\n            <div className=\"coworkers-header-back\" onClick={() => props.close()}>\n                <FiChevronsRight size={25} />\n            </div>\n            <div className=\"coworkers-names\">\n                {officeStore.organization.employees.map(employee => {\n                    return (\n                        <div className=\"coworkers-user\">\n                            <div className=\"coworkers-user-avatar\" style={{backgroundImage: `url(${employee.avatar})`}}></div>\n                            <div className={`coworkers-user-name ${isOnline(employee) && 'user-online'}`}> {employee.name} </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n})\n\nexport default CoWorkers;","import './Settings.css'\nimport { observer } from 'mobx-react'\nimport { rootstore } from '../../../../index'\nimport { FiX } from 'react-icons/fi'\nimport { useEffect, useState } from 'react'\nimport Dots from '../Dots/Dots'\n\nconst Settings = observer((props) => {\n    const userStore = rootstore.userStore\n    const officeStore = rootstore.officeStore\n    const [background, setBackground] = useState('transparent')\n    const [unsaved, setUnsaved] = useState(false)\n    const [user, setUser] = useState(JSON.parse(JSON.stringify(userStore.user)))\n    const [saveing, setSaveing] = useState(false)\n\n    useEffect(() => {\n        setBackground('rgba(64, 65, 69, 0.5)')\n    }, [])\n\n    const changeValue = (property, event) => {\n        if (!unsaved) {\n            setUnsaved(true)\n        }\n        setUser({ ...user, [property]: event.target.value })\n    }\n\n    const save = async () => {\n        if (!unsaved) return\n\n        setSaveing(true)\n        const response = await userStore.updateUser(user)\n        setSaveing(false)\n\n        if (response) {\n            setUnsaved(false)\n        } else {\n            alert('could not save user')\n        }\n    }\n\n    return (\n        <div className=\"settings-background\" style={{ background: background }}>\n            <div className=\"settings-modal block-shadow\">\n                <div className=\"settings-top-row\">\n                    <FiX size={25} style={{ margin: '10px', cursor: 'pointer' }} color={'#404145'} onClick={() => props.setShowSettings(false)} />\n                </div>\n                <div className=\"settings-content\">\n                    <div className=\"settings-content-row\">\n                        <div className=\"settings-avatar\" style={{ backgroundImage: `url(${user.avatar})` }}></div>\n                    </div>\n                    <div className=\"settings-content-row\">\n                        <div className=\"settings-input-row\">\n                            <div className=\"settings-input-label\">Avatar url</div>\n                            <input\n                                value={user.avatar}\n                                onChange={(event) => changeValue('avatar', event)}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"settings-content-row\">\n                        <div className=\"settings-input-row\">\n                            <div className=\"settings-input-label\">Name</div>\n                            <input\n                                value={user.name}\n                                onChange={(event) => changeValue('name', event)}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"settings-bottom-row\">\n                    <div className={`settings-save-button ${unsaved && 'unsaved-changes'}`} onClick={() => save()}>\n                        {saveing ?\n                            <Dots white />\n                            :\n                            'Save'\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default Settings","import { useEffect, useState } from 'react'\nimport './Office.css'\nimport { observer } from 'mobx-react'\nimport Navbar from './components/Navbar/Navbar'\nimport Chat from './components/Chat/Chat'\nimport Rooms from './components/rooms/Rooms'\nimport { rootstore } from '../../index'\nimport Loading from './components/Loading/Loading'\nimport CoWorkers from './components/CoWorkers/CoWorkers'\nimport Settings from './components/Settings/Settings'\nimport { FiUsers } from 'react-icons/fi'\nimport Player from 'react-player'\n\nconst Office = observer((props) => {\n    const { officeStore, userStore, mediaStore } = rootstore\n    const [showCoWorkers, setShowCoWorkers] = useState(false)\n    const [showSettings, setShowSettings] = useState(false)\n\n    useEffect(() => {\n        const fetchOrganization = async () => {\n            await officeStore.fetchOffice(userStore.user.organization)\n        }\n        fetchOrganization()\n    }, [officeStore, userStore])\n\n    if (!officeStore.office) {\n        return <Loading />\n    }\n\n    console.log('peerAudios in mediaStore:', mediaStore.peerAudios)\n    return (\n        <div className=\"office\">\n            <Navbar\n                navigateTo={props.navigateTo}\n                setShowSettings={setShowSettings}\n            />\n            <div className=\"office-body\">\n                <Chat />\n                <div className=\"office-body-scrollable\">\n                    <Rooms />\n                </div>\n            </div>\n            <div className=\"office-toggle-coworkers\" onClick={() => setShowCoWorkers(!showCoWorkers)}>\n                <FiUsers style={{ marginRight: '3px' }} size={18} />\n                {`Co-workers (${officeStore.organization.employees.length})`}\n            </div>\n            <CoWorkers show={showCoWorkers} close={() => setShowCoWorkers(false)} />\n            {showSettings && <Settings setShowSettings={setShowSettings} />}\n            {mediaStore.peerAudios.map(peerAudio =>\n                <Player playsInline url={peerAudio.stream} playing={true} style={{ height: '0px' }} height={'0px'} width={'0px'} />\n            )}\n        </div>\n    )\n})\n\nexport default Office","import { useEffect, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport { rootstore } from './index'\nimport Login from './Views/Login/Login'\nimport Office from './Views/Office/Office'\nimport './App.css'\n\nconst App = observer(() => {\n  const userStore = rootstore.userStore\n  const socketStore = rootstore.socketStore\n  const [page, setPage] = useState('login')\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      const response = await userStore.checkSignIn()\n      response.user && setPage('office')\n      socketStore.connectToOffice(response.token, response.user.organization)\n    }\n\n    checkLogin()\n  }, [userStore, socketStore])\n\n  const renderPage = () => {\n    switch (page) {\n      case 'login':\n        return <Login navigateTo={setPage} />\n      case 'office':\n        return <Office navigateTo={setPage} />\n      case 'controlPanel':\n        return <Login navigateTo={setPage} />\n      default:\n        return <Login navigateTo={setPage} />\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {renderPage()}\n    </div>\n  )\n})\n\nexport default App;\n","import axios from 'axios'\nconst baseUrl = '/api/organizations'\n\nconst getOrganization = async (id) => {\n    const response = await axios.get(`${baseUrl}/${id}`)\n    return response.data\n}\n\nconst services = { getOrganization }\nexport default services","import axios from 'axios'\nconst baseUrl = '/api/messages'\n\nconst sendOfficeMessage = async (content) => {\n    const response = await axios.post(`${baseUrl}`, content)\n    return response.data\n}\n\nconst services = { sendOfficeMessage }\nexport default services","import { makeObservable, observable, action, runInAction } from 'mobx'\nimport Organization from '../Services/Organization'\nimport Message from '../Services/Message'\n\nclass OfficeStore {\n    rootStore = null\n    office = null\n    organization = null\n    roomMessages = []\n\n    users = []\n\n    furnitures = [\n        {\n            type: 'meeting-table',\n            height: '150px',\n            width: '85px',\n            position: {x: 108, y: 85},\n            direction: 'right'\n        },\n        {\n            type: 'meeting-chair',\n            height: '45px',\n            width: '45px',\n            position: {x: 198, y: 168},\n            direction: 'right'\n        },\n        {\n            type: 'meeting-chair',\n            height: '45px',\n            width: '45px',\n            position: {x: 198, y: 103},\n            direction: 'right'\n        },\n        {\n            type: 'meeting-chair',\n            height: '45px',\n            width: '45px',\n            position: {x: 58, y: 168},\n            direction: 'right'\n        },\n        {\n            type: 'meeting-chair',\n            height: '45px',\n            width: '45px',\n            position: {x: 58, y: 103},\n            direction: 'right'\n        },\n    ]\n\n    constructor(rootStore) {\n        this.rootStore = rootStore\n        makeObservable(this, {\n            rootStore: observable,\n            office: observable,\n            organization: observable,\n            users: observable,\n            roomMessages: observable,\n            furnitures: observable,\n            receiveMessage: action,\n            changePosition: action,\n            sendMessage: action,\n            fetchOffice: action,\n            setEmployeeStates: action,\n            addEmployeeState: action,\n            removeEmployeeState: action,\n            receiveRoomMessage: action,\n            sendRoomMessage: action,\n            clearRoomChat: action\n        })\n    }\n\n    fetchOffice = async (id) => {\n        const organization = await Organization.getOrganization(id)\n\n        runInAction(() => {\n            this.organization = organization\n        })\n\n        runInAction(() => {\n            this.office = organization.office\n        })\n\n        console.log('current organization:', this.organization)\n        return organization\n    }\n\n    setEmployeeStates = (employees) => {\n        runInAction(() => {\n            this.users = employees\n        })\n    }\n\n    addEmployeeState = (employeeState) => {\n        this.users = this.users.concat(employeeState)\n    }\n\n    removeEmployeeState = (employeeState) => {\n        this.users = this.users.filter(user => user.employeeId !== employeeState.employeeId)\n    }\n\n    sendRoomMessage = (content) => {\n        this.rootStore.socketStore.emitRoomMessage(content)\n    }\n\n    sendMessage = async (content) => {\n        try {\n            const response = await Message.sendOfficeMessage({ content: content })\n            if (response) {\n                if (!this.office.messages.find(msg => msg._id === response._id)) {\n                    let officeClone = JSON.parse(JSON.stringify(this.office))\n                    officeClone.messages.unshift(response)\n                    runInAction(() => {\n                        this.office = officeClone\n                    })\n                }\n                return response\n            }\n        } catch {\n            return null\n        }\n    }\n\n    receiveMessage = (message) => {\n        if (!this.office.messages.find(msg => msg._id === message._id)) {\n            const officeClone = JSON.parse(JSON.stringify(this.office))\n            officeClone.messages.unshift(message)\n            runInAction(() => {\n                this.office = officeClone\n            })\n        }\n    }\n\n    muteEmployee = (id, value) => {\n        let usersClone = JSON.parse(JSON.stringify(this.users))\n        usersClone.find(user => user.employeeId === id).muted = value\n        runInAction(() => {\n            this.users = usersClone\n        })\n    }\n\n    silenceEmployee = (id, value) => {\n        let usersClone = JSON.parse(JSON.stringify(this.users))\n        usersClone.find(user => user.employeeId === id).silenced = value\n        runInAction(() => {\n            this.users = usersClone\n        })\n    }\n\n    changePosition = (id, position, transitionTime) => {\n        let usersClone = JSON.parse(JSON.stringify(this.users))\n        usersClone.find(user => user.employeeId === id).position = position\n        usersClone.find(user => user.employeeId === id).transitionTime = transitionTime\n        runInAction(() => {\n            this.users = usersClone\n        })\n    }\n\n    receiveRoomMessage = (message) => {\n        if (!this.roomMessages.find(msg => msg._id === message._id)) {\n            runInAction(() => {\n                this.roomMessages = [message].concat(this.roomMessages)\n            })\n        }\n    }\n\n    clearRoomChat = () => {\n        runInAction(() => {\n            this.roomMessages = []\n        })\n    }\n}\n\nexport default OfficeStore","import { rootstore } from '../index'\n\nconst delay = ms => new Promise(res => setTimeout(res, ms));\n\nconst move = async (X, Y, roomId, employeeId) => {\n    const user = rootstore.officeStore.users.find(user => user.employeeId === employeeId)\n\n    if (roomId !== user.position.room) {\n        if (roomId === -1) {\n            await roomToHall(user, X, Y, roomId, employeeId)\n        } else if (user.position.room === -1) {\n            await hallToRoom(user, X, Y, roomId, employeeId)\n        } else {\n            await roomToRoom(user, X, Y, roomId)\n        }\n    } else {\n        await moveInsideRoom(employeeId, X, Y, roomId)\n    }\n}\n\nconst roomToHall = async (user, X, Y, roomId, employeeId) => {\n    const duration = moveToDoor(employeeId, user.position.room)\n    await delay(duration * 1000)\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.officeStore.clearRoomChat()\n    moveInsideRoom(employeeId, X, Y, roomId)\n}\n\nconst hallToRoom = async (user, X, Y, roomId) => {\n    const duration = moveToDoor(user.employeeId, roomId)\n    await delay(duration * 1000)\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.officeStore.clearRoomChat()\n    moveInsideRoom(user.employeeId, X, Y, roomId)\n}\n\nconst roomToRoom = async (user, X, Y, roomId) => {\n    const duration = moveToDoor(user.employeeId, user.position.room)\n    await delay(duration * 1000)\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.officeStore.clearRoomChat()\n    const duration2 = moveToDoor(user.employeeId, roomId)\n    await delay(duration2 * 1000)\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.officeStore.clearRoomChat()\n    moveInsideRoom(user.employeeId, X, Y, roomId)\n}\n\nconst moveInsideRoom = (employeeId, X, Y, roomId ) => {\n    const user = rootstore.officeStore.users.find(user => user.employeeId === employeeId)\n    const positionX = X \n    const positionY = Y \n    const transitionTime = calcTravelTime(user.position.coordinates.x, user.position.coordinates.y, positionX, positionY)\n    rootstore.officeStore.changePosition(employeeId, { room: roomId, coordinates: { x: positionX, y: positionY } }, transitionTime)\n    return transitionTime\n}\n\nconst moveToDoor = (employeeId, targetRoom) => {\n    const user = rootstore.officeStore.users.find(user => user.employeeId === employeeId)\n    const doorElement = document.getElementById(`door${targetRoom}`)\n\n    const doorX = doorElement.offsetLeft + 30\n    const doorY = doorElement.offsetTop\n    const transitionTime = calcTravelTime(user.position.coordinates.x, user.position.coordinates.y, doorX, doorY)\n    rootstore.officeStore.changePosition(employeeId, { room: user.position.room, coordinates: { x: doorX, y: doorY } }, transitionTime)\n    return transitionTime\n}\n\nconst calcTravelTime = (oldX, oldY, newX, newY) => {\n    const travelX = Math.abs(oldX - newX)\n    const travelY = Math.abs(oldY - newY)\n    const TravelLength = Math.hypot(travelX, travelY)\n    return TravelLength * 0.01\n}\n\nexport default move","import axios from 'axios'\nconst baseUrl = '/api/sockets'\n\nconst updateState = async (employeeState) => {\n    const response = await axios.put(`${baseUrl}/employeeState`, employeeState)\n    return response.data\n}\n\nconst addRoomMessage = async (content) => {\n    const response = await axios.post(`${baseUrl}/roomMessage`, content)\n    return response.data\n}\n\nconst sendSignal = async (employeeId, signal) => {\n    const response = await axios.post(`${baseUrl}/sendSignal`, { employeeId, signal })\n    return response.data\n}\n\nconst returnSignal = async (employeeId, signal) => {\n    const response = await axios.post(`${baseUrl}/returnSignal`, { employeeId, signal })\n    return response.data\n}\n\nconst services = { updateState, addRoomMessage, sendSignal, returnSignal }\nexport default services","import { makeObservable, observable, action } from 'mobx'\nimport { io } from 'socket.io-client'\nimport { rootstore } from '..'\nimport move from '../Hooks/Mover'\nimport Socket from '../Services/Socket'\n\nclass SocketStore {\n    rootStore = null\n    socket = null\n\n    constructor(rootStore) {\n        this.rootStore = rootStore\n        makeObservable(this, {\n            rootStore: observable,\n            socket: observable,\n            connectToOffice: action,\n            disconnectSocket: action,\n            emitPosition: action,\n            emitMuted: action,\n            emitSilenced: action\n        })\n    }\n\n    connectToOffice = (token, organization) => {\n        this.socket = io.connect(`/`, {\n            auth: {\n                token\n            }\n        })\n\n        this.socket.on('message', (message) => {\n            this.rootStore.officeStore.receiveMessage(message)\n        })\n\n        this.socket.on('initialData', ({ employeeStates, iceServers }) => {\n            this.rootStore.officeStore.setEmployeeStates(employeeStates)\n            this.rootStore.mediaStore.connectToPeers(iceServers)\n        })\n\n        this.socket.on('addEmployeeState', (employeeState) => {\n            this.rootStore.officeStore.addEmployeeState(employeeState)\n        })\n\n        this.socket.on('removeEmployeeState', (employeeState) => {\n            this.rootStore.officeStore.removeEmployeeState(employeeState)\n        })\n\n        this.socket.on('updateEmployeeState', (employeeState) => {\n            const targetUser = rootstore.officeStore.users.find(user => user.employeeId === employeeState.employeeId)\n            if (targetUser.muted !== employeeState.muted) {\n                rootstore.officeStore.muteEmployee(employeeState.employeeId, employeeState.muted)\n            }\n            if (targetUser.silenced !== employeeState.silenced) {\n                rootstore.officeStore.silenceEmployee(employeeState.employeeId, employeeState.silenced)\n            }\n            if (targetUser.position !== employeeState.position) {\n                move(\n                    employeeState.position.coordinates.x,\n                    employeeState.position.coordinates.y,\n                    employeeState.position.room,\n                    employeeState.employeeId\n                )\n            }\n        })\n\n        this.socket.on('roomMessage', (roomMessage) => {\n            this.rootStore.officeStore.receiveRoomMessage(roomMessage)\n        })\n    }\n\n    disconnectSocket = () => {\n        this.socket.disconnect()\n    }\n\n    emitPosition = (position) => {\n        const myId = rootstore.userStore.user._id\n        const state = JSON.parse(JSON.stringify(this.rootStore.officeStore.users.find(user => user.employeeId === myId)))\n        Socket.updateState({ ...state, position: position })\n    }\n\n    emitMuted = (muted) => {\n        const myId = rootstore.userStore.user._id\n        const state = JSON.parse(JSON.stringify(this.rootStore.officeStore.users.find(user => user.employeeId === myId)))\n        Socket.updateState({ ...state, muted })\n    }\n\n    emitSilenced = (silenced) => {\n        const myId = rootstore.userStore.user._id\n        const state = JSON.parse(JSON.stringify(this.rootStore.officeStore.users.find(user => user.employeeId === myId)))\n        Socket.updateState({ ...state, silenced })\n    }\n\n    emitRoomMessage = (content) => {\n        Socket.addRoomMessage({ content })\n    }\n\n    emitStartCall = (data) => {\n        Socket.startCall(data)\n    }\n}\n\nexport default SocketStore","import axios from 'axios'\nconst baseUrl = '/api/employees'\n\nconst updateEmployee = async (employee) => {\n    const response = await axios.put(`${baseUrl}/${employee._id}`, employee)\n    return response.data\n}\n\nconst services = { updateEmployee }\nexport default services","import axios from 'axios'\nconst baseUrl = '/api/signin'\n\nconst signInWithToken = async () => {\n    const response = await axios.post(baseUrl)\n    return response.data\n}\n\nconst signInEmployee = async (credentials) => {\n    const response = await axios.post(`${baseUrl}/employee`, credentials)\n    return response.data\n}\n\nconst signInOrganization = async (credentials) => {\n    const response = await axios.post(`${baseUrl}/organization`, credentials)\n    return response.data\n}\n\nconst SignOut = async () => {\n    const response = await axios.post(`${baseUrl}/signout`)\n    return response.data\n}\n\nconst services = { signInWithToken, signInEmployee, signInOrganization, SignOut }\nexport default services","import { makeObservable, observable, action, runInAction } from 'mobx'\nimport Employee from '../Services/Employee'\nimport SignIn from '../Services/SignIn'\n\n\nclass UserStore {\n    rootStore = null\n    user = null\n    muted = false\n    silenced = false\n\n    constructor(rootStore) {\n        this.rootStore = rootStore\n        makeObservable(this, {\n            rootStore: observable,\n            user: observable,\n            muted: observable,\n            silenced: observable,\n            signIn: action,\n            checkSignIn: action,\n            signOut: action,\n            updateUser: action,\n            setMuted: action,\n            setSilenced: action\n        })\n    }\n\n    signIn = async (username, password) => {\n        const response = await SignIn.signInEmployee({ username, password })\n        this.user = response.user\n        console.log('current user:', this.user)\n        return response\n    }\n\n    checkSignIn = async () => {\n        const response = await SignIn.signInWithToken()\n        runInAction(() => {\n            this.user = response.user\n        })\n        return response\n    }\n\n    signOut = async () => {\n        await SignIn.SignOut()\n        this.rootStore.mediaStore.endAllConnections()\n        runInAction(() => {\n            this.user = null\n        })\n    }\n\n    updateUser = async (userValues) => {\n        try {\n            const response = await Employee.updateEmployee(userValues)\n            this.user = response\n            return response\n        } catch {\n            return null\n        }\n    }\n\n    setMuted = (value) => {\n        this.muted = value\n    }\n\n    setSilenced = (value) => {\n        this.silenced = value\n    }\n}\n\nexport default UserStore;","import { makeObservable, observable, action, runInAction } from 'mobx'\nimport Peer from 'simple-peer'\nimport socket from '../Services/Socket'\n\nclass MediaStore {\n    rootStore = null\n    stream = null\n    peers = []\n    peerAudios = []\n\n    constructor(rootStore) {\n        this.rootStore = rootStore\n        makeObservable(this, {\n            rootStore: observable,\n            stream: observable,\n            peerAudios: observable,\n            peers: observable,\n            connectToPeers: action,\n            endAllConnections: action\n        })\n    }\n\n    connectToPeers = async (iceServers) => {\n        await navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(stream => {\n            this.stream = stream\n\n            if (this.getRoomUsers().length > 1) {\n                this.rootStore.officeStore.users.forEach(employee => {\n                    if (employee.employeeId !== this.rootStore.userStore.user._id) {\n                        console.log('createPeer')\n                        this.createPeer(employee.employeeId, iceServers)\n                    }\n                })\n            }\n\n            this.rootStore.socketStore.socket.on('sendSignal', ({ signal, employeeId }) => {\n                console.log('sendSignal received')\n                this.addPeer(signal, employeeId, iceServers)\n            })\n\n            this.rootStore.socketStore.socket.on('returnSignal', ({ signal, employeeId }) => {\n                console.log('returnSignal received')\n                const peer = this.peers.find(peer => peer.employeeId === employeeId)\n                peer.peer.signal(signal)\n            })\n        })\n    }\n\n    addPeer = (signal, employeeId, iceServers) => {\n        const peer = new Peer({ initiator: false, trickle: false, stream: this.stream, config: { iceServers } })\n        peer.signal(signal)\n\n        peer.on('signal', signal => {\n            console.log('returnSignal sent')\n            socket.returnSignal(employeeId, signal)\n        })\n\n        peer.on('stream', stream => {\n            console.log('stream received')\n            runInAction(() => {\n                this.peerAudios = [...this.peerAudios, { stream: stream, employeeId: employeeId }]\n            })\n        })\n\n        peer.on('close', () => {\n            console.log('connection closed')\n            this.endPeerConnection(employeeId)\n        })\n\n        peer.on('error', (err) => {\n            console.log('Peer error: ', err)\n        })\n\n        runInAction(() => {\n            this.peers = [...this.peers, { peer: peer, employeeId: employeeId }]\n        })\n    }\n\n    createPeer = (employeeId, iceServers) => {\n        const peer = new Peer({ initiator: true, trickle: false, stream: this.stream, config: { iceServers } })\n\n        peer.on('signal', signal => {\n            console.log('sendSignal sent')\n            socket.sendSignal(employeeId, signal)\n        })\n\n        peer.on('stream', stream => {\n            console.log('stream received')\n            runInAction(() => {\n                this.peerAudios = [...this.peerAudios, { stream: stream, employeeId: employeeId }]\n            })\n        })\n\n        peer.on('close', () => {\n            console.log('connection closed')\n            this.endPeerConnection(employeeId)\n        })\n\n        peer.on('error', (err) => {\n            console.log('Peer error: ', err)\n        })\n\n        runInAction(() => {\n            this.peers = [...this.peers, { peer: peer, employeeId: employeeId }]\n        })\n    }\n\n    getRoomUsers = () => {\n        const myId = this.rootStore.userStore.user._id\n        const myState = this.rootStore.officeStore.users.find(user => user.employeeId === myId)\n        const myRoom = myState.position.room\n        const roomUsers = this.rootStore.officeStore.users.filter(user => user.position.room === myRoom)\n        console.log('Users in the room:', roomUsers)\n        return roomUsers\n    }\n\n    endAllConnections = () => {\n        console.log('ending all connections')\n        this.peers.forEach(peer => peer.peer.destroy())\n        runInAction(() => {\n            this.peers = []\n            this.peerAudios = []\n        })\n    }\n\n    endPeerConnection = (employeeId) => {\n        const peers = this.peers.filter(user => user.employeeId !== employeeId)\n        const audios = this.peerAudios.filter(user => user.employeeId !== employeeId)\n\n        runInAction(() => {\n            this.peers = peers\n            this.peerAudios = audios\n            console.log('after signout', this.peerAudios)\n        })\n    }\n}\n\nexport default MediaStore","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport rootStore from './Stores/RootStore'\n\nexport const rootstore = new rootStore()\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n)","import { makeAutoObservable } from 'mobx'\nimport OfficeStore from \"./OfficeStore\"\nimport SocketStore from './SocketStore'\nimport UserStore from \"./UserStore\"\nimport MediaStore from './MediaStore'\n\nclass RootStore {\n    officeStore\n    userStore\n    socketStore\n    mediaStore\n\n    constructor() {\n        this.officeStore = new OfficeStore(this)\n        this.userStore = new UserStore(this)\n        this.socketStore = new SocketStore(this)\n        this.mediaStore = new MediaStore(this)\n        makeAutoObservable(this)\n    }\n}\n\nexport default RootStore"],"sourceRoot":""}