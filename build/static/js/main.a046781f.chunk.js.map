{"version":3,"sources":["Views/Office/components/Dots/Dots.js","Views/Login/Login.js","Views/Office/components/Navbar/Navbar.js","Views/Office/components/Chat/Message/Message.js","Views/Office/components/Chat/Chat.js","Views/Office/components/rooms/Room/Room.js","Views/Office/components/rooms/Hallway/Hallway.js","Views/Office/components/Avatar/Avatar.js","Views/Office/components/rooms/Rooms.js","Views/Office/components/Loading/Loading.js","Views/Office/components/CoWorkers/CoWorkers.js","Views/Office/components/Settings/Settings.js","Views/Office/Office.js","App.js","Services/Organization.js","Services/Message.js","Stores/OfficeStore.js","Hooks/Mover.js","Stores/SocketStore.js","Services/Employee.js","Services/SignIn.js","Stores/UserStore.js","index.js","Stores/RootStore.js"],"names":["Dots","props","className","white","data-title","Login","userStore","rootstore","socketStore","useState","username","setUsername","password","setPassword","loading","setLoading","loginType","setLoginType","isActive","tab","signIn","a","alert","response","connectToOffice","token","user","organization","navigateTo","console","log","onClick","size","placeholder","value","onChange","event","target","type","style","background","Navbar","observer","officeStore","src","logo","name","users","find","userId","_id","roomId","position","room","office","rooms","getCurrentRoom","setMuted","muted","emitMuted","color","silenced","setSilenced","emitSilenced","setShowSettings","backgroundImage","avatar","signOut","disconnectSocket","Message","message","author","myMessage","content","Chat","setMessage","sending","setSending","activeChat","setActiveChat","sendMessage","window","messages","roomMessages","map","key","sendRoomMessage","Room","first","last","bottomRoom","id","onDoubleClick","document","getElementById","getBoundingClientRect","coordinates","x","clientX","left","y","clientY","top","emitPosition","move","Hallway","e","Avatar","transition","transitionTime","border","employees","empl","getUserAvatar","Rooms","roomsCount","length","index","Loading","CoWorkers","isOnline","employee","right","show","close","Settings","setBackground","unsaved","setUnsaved","JSON","parse","stringify","setUser","saveing","setSaveing","useEffect","changeValue","property","save","updateUser","margin","cursor","Office","showCoWorkers","setShowCoWorkers","showSettings","peerAudio","useRef","fetchOrganization","fetchOffice","navigator","mediaDevices","getUserMedia","audio","video","then","stream","peer1","Peer","initiator","trickle","socket","on","signal","data","emit","current","srcObject","marginRight","playsInline","ref","autoPlay","height","App","page","setPage","checkSignIn","checkLogin","renderPage","getOrganization","axios","get","sendOfficeMessage","post","OfficeStore","rootStore","Organization","setEmployeeStates","emitRoomMessage","msg","officeClone","unshift","receiveMessage","muteEmployee","usersClone","silenceEmployee","changePosition","receiveRoomMessage","concat","this","makeObservable","observable","action","delay","ms","Promise","res","setTimeout","X","Y","roomToHall","hallToRoom","roomToRoom","moveInsideRoom","duration","moveToDoor","duration2","positionX","positionY","calcTravelTime","targetRoom","doorElement","doorX","offsetLeft","doorY","offsetTop","oldX","oldY","newX","newY","travelX","Math","abs","travelY","hypot","SocketStore","io","connect","auth","targetUser","roomMessage","disconnect","myId","state","employeeState","updateEmployee","put","baseUrl","signInWithToken","signInEmployee","credentials","signInOrganization","SignOut","UserStore","SignIn","userValues","Employee","makeAutoObservable","ReactDOM","render","StrictMode"],"mappings":"ilBAceA,G,cAZF,SAACC,GACV,OACI,qBAAKC,UAAS,eAAUD,EAAME,OAAS,SAAvC,SACI,qBAAKD,UAAU,UAAUE,aAAW,iBAApC,SACI,qBAAKF,UAAU,QAAf,SACI,qBAAKA,UAAU,yB,QCsFpBG,MAvFf,SAAeJ,GAAQ,IACXK,EAA2BC,GAA3BD,UAAWE,EAAgBD,GAAhBC,YADD,EAEcC,mBAAS,IAFvB,mBAEXC,EAFW,KAEDC,EAFC,OAGcF,mBAAS,IAHvB,mBAGXG,EAHW,KAGDC,EAHC,OAIYJ,oBAAS,GAJrB,mBAIXK,EAJW,KAIFC,EAJE,OAKgBN,mBAAS,QALzB,mBAKXO,EALW,KAKAC,EALA,KAOZC,EAAW,SAACC,GACd,MAAY,SAARA,GAAgC,SAAdH,EACX,cAEC,iBAARG,GAAwC,iBAAdH,EACnB,sBAEJ,IAGLI,EAAM,uCAAG,4BAAAC,EAAA,yDACM,KAAbX,GAAgC,KAAbE,EADZ,uBAEPU,MAAM,kCAFC,0CAOPP,GAAW,GAPJ,SAQgBT,EAAUc,OAAOV,EAAUE,GAR3C,OAQDW,EARC,OASPf,EAAYgB,gBAAgBD,EAASE,MAAOF,EAASG,KAAKC,cAC1D1B,EAAM2B,WAAW,UACjBb,GAAW,GAXJ,kDAcPA,GAAW,GACXF,EAAY,IACZS,MAAM,oBACNO,QAAQC,IAAR,MAjBO,0DAAH,qDAqBZ,OACI,sBAAK5B,UAAU,QAAf,UACI,qBAAKA,UAAU,cAAf,mCAGA,sBAAKA,UAAU,0BAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAS,yBAAoBgB,EAAS,SAAWa,QAAS,kBAAMd,EAAa,SAAlF,UACI,cAAC,IAAD,CAAee,KAAM,KACrB,qBAAK9B,UAAU,iBAAf,qBAEJ,sBAAKA,UAAS,yBAAoBgB,EAAS,iBAAmBa,QAAS,kBAAMd,EAAa,iBAA1F,UACI,cAAC,IAAD,CAAee,KAAM,KACrB,qBAAK9B,UAAU,iBAAf,gCAGR,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,sBAEf,uBACI+B,YAAa,QACbC,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OAAWzB,EAAYyB,EAAMC,OAAOH,aAGtD,sBAAKhC,UAAU,kBAAf,UACI,qBAAKA,UAAU,sBAEf,uBACI+B,YAAa,WACbC,MAAOtB,EACP0B,KAAM,WACNH,SAAU,SAACC,GAAD,OAAWvB,EAAYuB,EAAMC,OAAOH,aAGtD,qBAAKhC,UAAU,kBAAf,SACI,qBAAKA,UAAU,WAAWqC,MAAO,CAAEC,WAA0B,iBAAdxB,GAAgC,WAAae,QAAS,kBAAMX,KAA3G,SACKN,EACG,cAAC,EAAD,CAAMX,OAAK,IADP,qB,uBCejBsC,EA3FAC,aAAS,SAACzC,GAAW,IACxBK,EAAwCC,GAAxCD,UAAWE,EAA6BD,GAA7BC,YAAamC,EAAgBpC,GAAhBoC,YAyChC,OACI,sBAAKzC,UAAU,sBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,oBAAoB0C,IAAKD,EAAYhB,aAAakB,OAEjE,qBAAK3C,UAAU,qBAAf,SACKyC,EAAYhB,aAAamB,UAGlC,sBAAK5C,UAAU,kBAAf,UACI,qBAAKA,UAAU,2BACf,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,mBAAf,SA1BO,WACnB,IAAMwB,EAAOiB,EAAYI,MAAMC,MAAK,SAAAtB,GAAI,OAAIA,EAAKuB,SAAW3C,EAAUoB,KAAKwB,OAC3E,IAAKxB,EACD,MAAO,aAEX,IAAMyB,EAASzB,EAAK0B,SAASC,KAE7B,OAAgB,IAAZF,EACO,UAEAR,EAAYW,OAAOC,MAAMP,MAAK,SAAAK,GAAI,OAAIA,EAAKH,MAAQC,KAAQL,KAgBvBU,KACnC,qBAAKtD,UAAU,oBAAf,6BAEJ,sBAAKA,UAAU,eAAe6B,QAAS,kBArD/CzB,EAAUmD,UAAUnD,EAAUoD,YAC9BlD,EAAYmD,WAAWrD,EAAUoD,QAoDzB,UACMpD,EAAUoD,MAGR,cAAC,IAAD,CAAU1B,KAAM,GAAI9B,UAAU,0BAA0B0D,MAAO,YAF/D,cAAC,IAAD,CAAO5B,KAAM,GAAI9B,UAAU,0BAA0B0D,MAAO,YAIhE,qBAAK1D,UAAU,oBAAf,2BAEJ,sBAAKA,UAAU,eAAe6B,QAAS,WAxD1CzB,EAAUuD,UAQXvD,EAAUwD,aAAY,GACtBtD,EAAYuD,cAAa,KAPzBzD,EAAUwD,aAAY,GACtBxD,EAAUmD,UAAS,GAEnBjD,EAAYuD,cAAa,GACzBvD,EAAYmD,WAAU,KAkDlB,UACMrD,EAAUuD,SAGR,cAAC,IAAD,CAAW7B,KAAM,GAAI9B,UAAU,sBAAsB0D,MAAO,YAF5D,cAAC,IAAD,CAAW5B,KAAM,GAAI9B,UAAU,sBAAsB0D,MAAO,YAIhE,qBAAK1D,UAAU,oBAAf,uBAEJ,sBAAKA,UAAU,kBAAkB6B,QAAS,kBAAM9B,EAAM+D,iBAAgB,IAAtE,UACI,cAAC,IAAD,CAAYhC,KAAM,GAAI9B,UAAU,sBAAsB0D,MAAO,YAC7D,qBAAK1D,UAAU,oBAAf,yBAEJ,qBAAKA,UAAU,8BAEnB,sBAAKA,UAAU,cAAf,UACKI,EAAUoB,KAAKoB,KAChB,qBAAK5C,UAAU,qBAAqBqC,MAAO,CAAE0B,gBAAgB,OAAD,OAAS3D,EAAUoB,KAAKwC,OAAxB,QAE5D,qBAAKhE,UAAU,kBAAkB6B,QAAS,kBA5DlDzB,EAAU6D,UACV3D,EAAY4D,wBACZnE,EAAM2B,WAAW,UA0DT,+BC7DDyC,G,cAvBC3B,aAAS,SAACzC,GACtB,IAAMK,EAAYC,GAAUD,UAQ5B,OACI,qBAAKJ,UAAS,kBAPA,WACd,GAAID,EAAMqE,QAAQC,OAAOrB,MAAQ5C,EAAUoB,KAAKwB,IAC5C,MAAO,cAKgBsB,IAA3B,SACI,sBAAKtE,UAAU,gBAAf,UACI,qBAAKA,UAAU,iBAAf,SACKD,EAAMqE,QAAQC,OAAOzB,OAE1B,qBAAK5C,UAAU,kBAAf,SACKD,EAAMqE,QAAQG,mBC4DpBC,EAxEFhC,aAAS,SAACzC,GAAW,IAAD,EACCQ,mBAAS,IADV,mBACtB6D,EADsB,KACbK,EADa,OAEClE,oBAAS,GAFV,mBAEtBmE,EAFsB,KAEbC,EAFa,OAGOpE,mBAAS,UAHhB,mBAGtBqE,EAHsB,KAGVC,EAHU,KAIrBpC,EAA2BpC,GAA3BoC,YAAarC,EAAcC,GAAdD,UAEf0E,EAAW,uCAAG,4BAAA3D,EAAA,6DAChBwD,GAAW,GADK,SAEOlC,EAAYqC,YAAYV,GAF/B,OAEV/C,EAFU,OAGhBsD,GAAW,GACXF,EAAW,IACNpD,GACD0D,OAAO3D,MAAM,0BAND,2CAAH,qDAmCjB,OACI,sBAAKpB,UAAU,oBAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAS,mBAA6B,WAAf4E,GAA2B,mBAAqB/C,QAAS,kBAAMgD,EAAc,WAAzG,oBACA,qBAAK7E,UAAS,mBAA6B,SAAf4E,GAAyB,mBAAqB/C,QAAS,kBAAMgD,EAAc,SAAvG,SAtBW,WACnB,IAAMrD,EAAOiB,EAAYI,MAAMC,MAAK,SAAAtB,GAAI,OAAIA,EAAKuB,SAAW3C,EAAUoB,KAAKwB,OAC3E,IAAKxB,EACD,MAAO,aAEX,IAAMyB,EAASzB,EAAK0B,SAASC,KAE7B,OAAgB,IAAZF,EACO,UAEAR,EAAYW,OAAOC,MAAMP,MAAK,SAAAK,GAAI,OAAIA,EAAKH,MAAQC,KAAQL,KAYmDU,QAErH,qBAAKtD,UAAU,gBAAf,UATkB,WAAf4E,EAA0BnC,EAAYW,OAAO4B,SAAWvC,EAAYwC,cAU9CC,KAAI,SAACd,EAASe,GAAV,OACrB,cAAC,EAAD,CAAmBf,QAASA,GAAde,QAGtB,qBAAKnF,UAAU,gBAAf,SACI,sBAAKA,UAAU,uBAAf,UACI,uBACIgC,MAAOoC,EACPrC,YAAa,gBACbE,SAAU,SAACC,GAAD,OAAWuC,EAAWvC,EAAMC,OAAOH,UAEjD,qBAAKhC,UAAU,YAAY6B,QAAwB,WAAf+C,EAA0BE,EA3CtD,WACpBH,GAAW,GACXlC,EAAY2C,gBAAgBhB,GAC5BO,GAAW,GACXF,EAAW,KAuCC,SACKC,EACG,cAAC,EAAD,IAEA,cAAC,IAAD,CAAe5C,KAAM,kBCtClCuD,G,cA7BF7C,aAAS,SAACzC,GAAW,IACtBO,EAAgBD,GAAhBC,YAcR,OACI,sBAAKN,UAAS,eAAUD,EAAMuF,OAAS,cAAzB,YAA0CvF,EAAMwF,MAAQ,aAAxD,YAAwExF,EAAMyF,YAAc,eAAiBC,GAAE,cAAS1F,EAAMoD,KAAKH,KAAjJ,UACI,qBAAKhD,UAAU,WAAf,SACKD,EAAMoD,KAAKP,OAEhB,qBAAK5C,UAAU,eAAe0F,cAAe,SAACxD,GAAD,OAjBxC,SAACA,GACV,IAAMmB,EAAQsC,SAASC,eAAe,SAASC,wBACzC3C,EAAW,CACbC,KAAMpD,EAAMoD,KAAKH,IACjB8C,YAAa,CACTC,EAAG7D,EAAM8D,QAAU3C,EAAM4C,KACzBC,EAAGhE,EAAMiE,QAAU9C,EAAM+C,MAGjC9F,EAAY+F,aAAanD,GAQmCoD,CAAKpE,MAE7D,qBAAKlC,UAAU,cAAf,SACI,qBAAKA,UAAU,YAAYyF,GAAE,cAAS1F,EAAMoD,KAAKH,gBCHlDuD,G,OApBC/D,aAAS,SAACzC,GAAW,IACzBO,EAAgBD,GAAhBC,YAaR,OACI,qBAAKN,UAAS,kBAAaD,EAAMuF,OAAS,cAA5B,YAA6CvF,EAAMwF,MAAQ,cAAgBG,cAAe,SAACc,GAAD,OAZ/F,SAACtE,GACV,IAAMmB,EAAQsC,SAASC,eAAe,SAASC,wBACzC3C,EAAW,CACbC,MAAO,EACP2C,YAAa,CACTC,EAAG7D,EAAM8D,QAAU3C,EAAM4C,KACzBC,EAAGhE,EAAMiE,QAAU9C,EAAM+C,MAGjC9F,EAAY+F,aAAanD,GAGsFoD,CAAKE,UCuB7GC,G,OApCAjE,aAAS,SAACzC,GACrB,IAAM0C,EAAcpC,GAAUoC,YACxBrC,EAAYC,GAAUD,UAqB5B,OACI,qBAAKJ,UAAU,SAASqC,MAAO,CAC3B+D,IAAKrG,EAAMyB,KAAK0B,SAAS4C,YAAYI,EACrCD,KAAMlG,EAAMyB,KAAK0B,SAAS4C,YAAYC,EACtCW,WAAW,OAAD,OAAS3G,EAAMyB,KAAKmF,eAApB,YACVC,OAAO,GAAD,OAAK7G,EAAMyB,KAAKuB,SAAW3C,EAAUoB,KAAKwB,IAAM,IAAM,IAAtD,oBAAqEjD,EAAMyB,KAAKuB,SAAW3C,EAAUoB,KAAKwB,IAAM,UAAY,SAClIe,gBAAgB,OAAD,OAzBD,WAClB,IAAMvC,EAAOiB,EAAYhB,aAAaoF,UAAU/D,MAAK,SAAAgE,GAAI,OAAIA,EAAK9D,MAAQjD,EAAMyB,KAAKuB,UACrF,OAAKvB,EAGMA,EAAKwC,OAFL,aAsBiB+C,GAAT,MALnB,SAVGhH,EAAMyB,KAAKmC,SACH,cAAC,IAAD,CAAW7B,KAAM,GAAI9B,UAAU,sBAAsB0D,MAAO,YAC7D3D,EAAMyB,KAAKgC,MACV,cAAC,IAAD,CAAU1B,KAAM,GAAI9B,UAAU,0BAA0B0D,MAAO,iBAEtE,QCyBGsD,EA3CDxE,aAAS,WACnB,IAAMC,EAAcpC,GAAUoC,YACxBwE,EAAaxE,EAAYW,OAAOC,MAAM6D,OAE5C,OACI,sBAAKlH,UAAU,QAAQyF,GAAG,QAA1B,UACI,qBAAKzF,UAAU,YAAf,SACKyC,EAAYW,OAAOC,MAAM6B,KAAI,SAAC/B,EAAMgE,GACjC,OAAIA,EAAQ,IAAM,EAEV,cAAC,EAAD,CACIhE,KAAMA,EACNmC,MAAiB,IAAV6B,IAGV,UAGjB,cAAC,EAAD,IACA,sBAAKnH,UAAU,YAAf,UACKyC,EAAYW,OAAOC,MAAM6B,KAAI,SAAC/B,EAAMgE,GACjC,OAAIA,EAAQ,IAAM,EAEV,cAAC,EAAD,CACIhE,KAAMA,EACNqC,YAAU,EACVF,MAAiB,IAAV6B,IAIL,QAEjBF,EAAa,IAAM,GAChB,qBAAKjH,UAAU,wBAGvB,qBAAKA,UAAU,aAAf,SACKyC,EAAYI,MAAMqC,KAAI,SAAA1D,GAAI,OAAI,cAAC,EAAD,CAA0BA,KAAMA,GAAnBA,EAAKuB,mBChClDqE,G,OATC,SAACrH,GACb,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKA,UAAU,eAAf,4BACA,cAAC,EAAD,SC4BGqH,G,OA7BG7E,aAAS,SAACzC,GACxB,IAAM0C,EAAcpC,GAAUoC,YAExB6E,EAAW,SAACC,GACd,OAAO9E,EAAYI,MAAMC,MAAK,SAAAtB,GAAI,OAAIA,EAAKuB,SAAWwE,EAASvE,QAGnE,OACI,sBAAKhD,UAAU,yBAAyBqC,MAAO,CAAEmF,MAAOzH,EAAM0H,KAAO,MAAQ,UAA7E,UACI,qBAAKzH,UAAU,mBAAf,wBAGA,qBAAKA,UAAU,wBAAwB6B,QAAS,kBAAM9B,EAAM2H,SAA5D,SACI,cAAC,IAAD,CAAiB5F,KAAM,OAE3B,qBAAK9B,UAAU,kBAAf,SACKyC,EAAYhB,aAAaoF,UAAU3B,KAAI,SAAAqC,GACpC,OACI,sBAAKvH,UAAU,iBAAf,UACI,qBAAKA,UAAU,wBAAwBqC,MAAO,CAAC0B,gBAAgB,OAAD,OAASwD,EAASvD,OAAlB,QAC9D,sBAAKhE,UAAS,8BAAyBsH,EAASC,IAAa,eAA7D,cAAgFA,EAAS3E,KAAzF,sB,gBCyDb+E,G,OA5EEnF,aAAS,SAACzC,GACvB,IAAMK,EAAYC,GAAUD,UADK,GAEbC,GAAUoC,YACMlC,mBAAS,gBAHZ,mBAG1B+B,EAH0B,KAGdsF,EAHc,OAIHrH,oBAAS,GAJN,mBAI1BsH,EAJ0B,KAIjBC,EAJiB,OAKTvH,mBAASwH,KAAKC,MAAMD,KAAKE,UAAU7H,EAAUoB,QALpC,mBAK1BA,EAL0B,KAKpB0G,EALoB,OAMH3H,oBAAS,GANN,mBAM1B4H,EAN0B,KAMjBC,EANiB,KAQjCC,qBAAU,WACNT,EAAc,2BACf,IAEH,IAAMU,EAAc,SAACC,EAAUrG,GACtB2F,GACDC,GAAW,GAEfI,EAAQ,2BAAK1G,GAAN,kBAAa+G,EAAWrG,EAAMC,OAAOH,UAG1CwG,EAAI,uCAAG,4BAAArH,EAAA,yDACJ0G,EADI,wDAGTO,GAAW,GAHF,SAIchI,EAAUqI,WAAWjH,GAJnC,OAIHH,EAJG,OAKT+G,GAAW,GAEP/G,EACAyG,GAAW,GAEX1G,MAAM,uBAVD,2CAAH,qDAcV,OACI,qBAAKpB,UAAU,sBAAsBqC,MAAO,CAAEC,WAAYA,GAA1D,SACI,sBAAKtC,UAAU,8BAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,cAAC,IAAD,CAAK8B,KAAM,GAAIO,MAAO,CAAEqG,OAAQ,OAAQC,OAAQ,WAAajF,MAAO,UAAW7B,QAAS,kBAAM9B,EAAM+D,iBAAgB,QAExH,sBAAK9D,UAAU,mBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,kBAAkBqC,MAAO,CAAE0B,gBAAgB,OAAD,OAASvC,EAAKwC,OAAd,UAE7D,qBAAKhE,UAAU,uBAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,uBAAf,wBACA,uBACIgC,MAAOR,EAAKwC,OACZ/B,SAAU,SAACC,GAAD,OAAWoG,EAAY,SAAUpG,WAIvD,qBAAKlC,UAAU,uBAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,uBAAf,kBACA,uBACIgC,MAAOR,EAAKoB,KACZX,SAAU,SAACC,GAAD,OAAWoG,EAAY,OAAQpG,cAKzD,qBAAKlC,UAAU,sBAAf,SACI,qBAAKA,UAAS,+BAA0B6H,GAAW,mBAAqBhG,QAAS,kBAAM2G,KAAvF,SACKL,EACG,cAAC,EAAD,CAAMlI,OAAK,IAEX,oB,iBCEb2I,EA/DApG,aAAS,SAACzC,GAAW,IACxB0C,EAAwCpC,GAAxCoC,YAAarC,EAA2BC,GAA3BD,UAAWE,EAAgBD,GAAhBC,YADD,EAEWC,oBAAS,GAFpB,mBAExBsI,EAFwB,KAETC,EAFS,OAGSvI,oBAAS,GAHlB,mBAGxBwI,EAHwB,KAGVjF,EAHU,KAKzBkF,EAAYC,mBA+BlB,OA7BAZ,qBAAU,WACN,IAAMa,EAAiB,uCAAG,sBAAA/H,EAAA,sEAChBsB,EAAY0G,YAAY/I,EAAUoB,KAAKC,cADvB,2CAAH,qDAIvB2H,UAAUC,aAAaC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IAASC,MAAK,SAAAC,GACpE,IAAMC,EAAQ,IAAIC,IAAK,CAAEC,WAAW,EAAMC,SAAS,EAAOJ,OAAQA,IAElEpJ,EAAYyJ,OAAOC,GAAG,gBAAgB,SAAAC,GAClCtI,QAAQC,IAAI,eACZ+H,EAAMM,OAAOA,MAGjBN,EAAMK,GAAG,UAAU,SAAAE,GACfvI,QAAQC,IAAI,kBACZtB,EAAYyJ,OAAOI,KAAK,YAAaD,MAGzCP,EAAMK,GAAG,UAAU,SAAAN,GACf/H,QAAQC,IAAI,mBACRoH,EAAUoB,UACVpB,EAAUoB,QAAQC,UAAYX,SAK1CR,MACD,CAACzG,EAAarC,IAEZqC,EAAYW,OAKb,sBAAKpD,UAAU,SAAf,UACI,cAAC,EAAD,CACI0B,WAAY3B,EAAM2B,WAClBoC,gBAAiBA,IAErB,sBAAK9D,UAAU,cAAf,UACI,cAAC,EAAD,IACA,qBAAKA,UAAU,yBAAf,SACI,cAAC,EAAD,SAGR,sBAAKA,UAAU,0BAA0B6B,QAAS,kBAAMiH,GAAkBD,IAA1E,UACI,cAAC,IAAD,CAASxG,MAAO,CAACiI,YAAa,OAAQxI,KAAM,KADhD,sBAEoBW,EAAYhB,aAAaoF,UAAUK,OAFvD,QAIA,cAAC,EAAD,CAAWO,KAAMoB,EAAenB,MAAO,kBAAMoB,GAAiB,MAC7DC,GAAgB,cAAC,EAAD,CAAUjF,gBAAiBA,IAC5C,uBAAOyG,aAAW,EAACC,IAAKxB,EAAWyB,UAAQ,EAACpI,MAAO,CAACqI,OAAQ,YArBzD,cAAC,EAAD,OCPAC,G,OAnCHnI,aAAS,WACnB,IAAMpC,EAAYC,GAAUD,UACtBE,EAAcD,GAAUC,YAFL,EAGDC,mBAAS,SAHR,mBAGlBqK,EAHkB,KAGZC,EAHY,KAKzBxC,qBAAU,YACQ,uCAAG,4BAAAlH,EAAA,sEACMf,EAAU0K,cADhB,QACXzJ,EADW,QAERG,MAAQqJ,EAAQ,UACzBvK,EAAYgB,gBAAgBD,EAASE,MAAOF,EAASG,KAAKC,cAHzC,2CAAH,qDAMhBsJ,KACC,CAAC3K,IAeJ,OACE,qBAAKJ,UAAU,MAAf,SAdiB,WACjB,OAAQ4K,GACN,IAAK,QACH,OAAO,cAAC,EAAD,CAAOlJ,WAAYmJ,IAC5B,IAAK,SACH,OAAO,cAAC,EAAD,CAAQnJ,WAAYmJ,IAC7B,IAAK,eAEL,QACE,OAAO,cAAC,EAAD,CAAOnJ,WAAYmJ,KAM3BG,S,gCC9BQ,GAAEC,gBALI,uCAAG,WAAOxF,GAAP,eAAAtE,EAAA,sEACG+J,IAAMC,IAAN,UAHX,qBAGW,YAAwB1F,IAD3B,cACdpE,EADc,yBAEbA,EAAS6I,MAFI,2CAAH,uDCKN,GAAEkB,kBALM,uCAAG,WAAO7G,GAAP,eAAApD,EAAA,sEACC+J,IAAMG,KAAN,UAHX,iBAGoC9G,GAD1B,cAChBlD,EADgB,yBAEfA,EAAS6I,MAFM,2CAAH,uDC6FRoB,EApFX,WAAYC,GAAY,IAAD,gCAPvBA,UAAY,KAOW,KANvBnI,OAAS,KAMc,KALvB3B,aAAe,KAKQ,KAJvBwD,aAAe,GAIQ,KAFvBpC,MAAQ,GAEe,KAkBvBsG,YAlBuB,uCAkBT,WAAO1D,GAAP,eAAAtE,EAAA,sEACiBqK,EAAaP,gBAAgBxF,GAD9C,cACJhE,EADI,OAEV,EAAKA,aAAeA,EACpB,EAAK2B,OAAS3B,EAAa2B,OAC3BzB,QAAQC,IAAI,wBAAyB,EAAKH,cAJhC,kBAKHA,GALG,2CAlBS,2DA0BvBgK,kBAAoB,SAAC5E,GACjB,EAAKhE,MAAQgE,GA3BM,KA8BvBzB,gBAAkB,SAACb,GACf,EAAKgH,UAAUjL,YAAYoL,gBAAgBnH,IA/BxB,KAkCvBO,YAlCuB,uCAkCT,WAAOP,GAAP,iBAAApD,EAAA,+EAEiBgD,EAAQiH,kBAAkB,CAAE7G,QAASA,IAFtD,YAEAlD,EAFA,+BAIG,EAAK+B,OAAO4B,SAASlC,MAAK,SAAA6I,GAAG,OAAIA,EAAI3I,MAAQ3B,EAAS2B,UACnD4I,EAAc7D,KAAKC,MAAMD,KAAKE,UAAU,EAAK7E,UACrC4B,SAAS6G,QAAQxK,GAC7B,EAAK+B,OAASwI,GAPhB,kBASKvK,GATL,gFAYC,MAZD,yDAlCS,2DAkDvByK,eAAiB,SAAC1H,GACd,IAAK,EAAKhB,OAAO4B,SAASlC,MAAK,SAAA6I,GAAG,OAAIA,EAAI3I,MAAQoB,EAAQpB,OAAM,CAC5D,IAAM4I,EAAc7D,KAAKC,MAAMD,KAAKE,UAAU,EAAK7E,SACnDwI,EAAY5G,SAAS6G,QAAQzH,GAC7B,EAAKhB,OAASwI,IAtDC,KA0DvBG,aAAe,SAACtG,EAAIzD,GAChB,IAAIgK,EAAajE,KAAKC,MAAMD,KAAKE,UAAU,EAAKpF,QAChDmJ,EAAWlJ,MAAK,SAAAtB,GAAI,OAAIA,EAAKuB,SAAW0C,KAAIjC,MAAQxB,EACpD,EAAKa,MAAQmJ,GA7DM,KAgEvBC,gBAAkB,SAACxG,EAAIzD,GACnB,IAAIgK,EAAajE,KAAKC,MAAMD,KAAKE,UAAU,EAAKpF,QAChDmJ,EAAWlJ,MAAK,SAAAtB,GAAI,OAAIA,EAAKuB,SAAW0C,KAAI9B,SAAW3B,EACvD,EAAKa,MAAQmJ,GAnEM,KAsEvBE,eAAiB,SAACzG,EAAIvC,EAAUyD,GAC5B,IAAIqF,EAAajE,KAAKC,MAAMD,KAAKE,UAAU,EAAKpF,QAChDmJ,EAAWlJ,MAAK,SAAAtB,GAAI,OAAIA,EAAKuB,SAAW0C,KAAIvC,SAAWA,EACvD8I,EAAWlJ,MAAK,SAAAtB,GAAI,OAAIA,EAAKuB,SAAW0C,KAAIkB,eAAiBA,EAC7D,EAAK9D,MAAQmJ,GA1EM,KA6EvBG,mBAAqB,SAAC/H,GACb,EAAKa,aAAanC,MAAK,SAAA6I,GAAG,OAAIA,EAAI3I,MAAQoB,EAAQpB,SACnD,EAAKiC,aAAe,CAACb,GAASgI,OAAO,EAAKnH,gBA9E9CoH,KAAKd,UAAYA,EACjBe,YAAeD,KAAM,CACjBd,UAAWgB,IACXnJ,OAAQmJ,IACR9K,aAAc8K,IACd1J,MAAO0J,IACPtH,aAAcsH,IACdT,eAAgBU,IAChBN,eAAgBM,IAChB1H,YAAa0H,IACbrD,YAAaqD,IACbf,kBAAmBe,IACnBL,mBAAoBK,IACpBpH,gBAAiBoH,OCxBvBC,EAAQ,SAAAC,GAAE,OAAI,IAAIC,SAAQ,SAAAC,GAAG,OAAIC,WAAWD,EAAKF,OAEjDpG,EAAI,uCAAG,WAAOwG,EAAGC,EAAG9J,EAAQF,GAArB,eAAA5B,EAAA,yDACHK,EAAOnB,GAAUoC,YAAYI,MAAMC,MAAK,SAAAtB,GAAI,OAAIA,EAAKuB,SAAWA,KAElEE,IAAWzB,EAAK0B,SAASC,KAHpB,qBAIW,IAAZF,EAJC,gCAKK+J,EAAWxL,EAAMsL,EAAGC,EAAG9J,EAAQF,GALpC,kCAM8B,IAAxBvB,EAAK0B,SAASC,KANpB,kCAOK8J,EAAWzL,EAAMsL,EAAGC,EAAG9J,EAAQF,GAPpC,iDASKmK,EAAW1L,EAAMsL,EAAGC,EAAG9J,GAT5B,iDAYCkK,EAAepK,EAAQ+J,EAAGC,EAAG9J,GAZ9B,4CAAH,4DAgBJ+J,EAAU,uCAAG,WAAOxL,EAAMsL,EAAGC,EAAG9J,EAAQF,GAA3B,eAAA5B,EAAA,6DACTiM,EAAWC,EAAWtK,EAAQvB,EAAK0B,SAASC,MADnC,SAETsJ,EAAiB,IAAXW,GAFG,OAGfD,EAAepK,EAAQ+J,EAAGC,EAAG9J,GAHd,2CAAH,8DAMVgK,EAAU,uCAAG,WAAOzL,EAAMsL,EAAGC,EAAG9J,GAAnB,eAAA9B,EAAA,6DACTiM,EAAWC,EAAW7L,EAAKuB,OAAQE,GAD1B,SAETwJ,EAAiB,IAAXW,GAFG,OAGfD,EAAe3L,EAAKuB,OAAQ+J,EAAGC,EAAG9J,GAHnB,2CAAH,4DAMViK,EAAU,uCAAG,WAAO1L,EAAMsL,EAAGC,EAAG9J,GAAnB,iBAAA9B,EAAA,6DACTiM,EAAWC,EAAW7L,EAAKuB,OAAQvB,EAAK0B,SAASC,MADxC,SAETsJ,EAAiB,IAAXW,GAFG,cAGTE,EAAYD,EAAW7L,EAAKuB,OAAQE,GAH3B,SAITwJ,EAAkB,IAAZa,GAJG,OAKfH,EAAe3L,EAAKuB,OAAQ+J,EAAGC,EAAG9J,GALnB,2CAAH,4DAQVkK,EAAiB,SAACpK,EAAQ+J,EAAGC,EAAG9J,GAClC,IAAMzB,EAAOnB,GAAUoC,YAAYI,MAAMC,MAAK,SAAAtB,GAAI,OAAIA,EAAKuB,SAAWA,KAEhEwK,GADQ5H,SAASC,eAAe,SACpBkH,GACZU,EAAYT,EACZpG,EAAiB8G,EAAejM,EAAK0B,SAAS4C,YAAYC,EAAGvE,EAAK0B,SAAS4C,YAAYI,EAAGqH,EAAWC,GAE3G,OADAnN,GAAUoC,YAAYyJ,eAAenJ,EAAQ,CAAEI,KAAMF,EAAQ6C,YAAa,CAAEC,EAAGwH,EAAWrH,EAAGsH,IAAe7G,GACrGA,GAGL0G,EAAa,SAACtK,EAAQ2K,GACxB,IAAMlM,EAAOnB,GAAUoC,YAAYI,MAAMC,MAAK,SAAAtB,GAAI,OAAIA,EAAKuB,SAAWA,KAChE4K,EAAchI,SAASC,eAAT,cAA+B8H,IAE7CE,EAAQD,EAAYE,WAAa,GACjCC,EAAQH,EAAYI,UACpBpH,EAAiB8G,EAAejM,EAAK0B,SAAS4C,YAAYC,EAAGvE,EAAK0B,SAAS4C,YAAYI,EAAG0H,EAAOE,GAEvG,OADAzN,GAAUoC,YAAYyJ,eAAenJ,EAAQ,CAAEI,KAAM3B,EAAK0B,SAASC,KAAM2C,YAAa,CAAEC,EAAG6H,EAAO1H,EAAG4H,IAAWnH,GACzGA,GAGL8G,EAAiB,SAACO,EAAMC,EAAMC,EAAMC,GACtC,IAAMC,EAAUC,KAAKC,IAAIN,EAAOE,GAC1BK,EAAUF,KAAKC,IAAIL,EAAOE,GAEhC,MAAsB,IADDE,KAAKG,MAAMJ,EAASG,IAI9BjI,ICmBAmI,EA9EX,WAAYlD,GAAY,IAAD,gCAHvBA,UAAY,KAGW,KAFvBxB,OAAS,KAEc,KAavBzI,gBAAkB,SAACC,EAAOE,GACtB,EAAKsI,OAAS2E,KAAGC,QAAH,WAAelN,GAAgB,CACzCmN,KAAM,CACFrN,WAIR,EAAKwI,OAAOC,GAAG,WAAW,SAAC5F,GACvB,EAAKmH,UAAU9I,YAAYqJ,eAAe1H,MAG9C,EAAK2F,OAAOC,GAAG,aAAa,SAACnD,GACzB,EAAK0E,UAAU9I,YAAYgJ,kBAAkB5E,MAGjD,EAAKkD,OAAOC,GAAG,iBAAiB,SAACzC,GAC7B,IAAMsH,EAAaxO,GAAUoC,YAAYI,MAAMC,MAAK,SAAAtB,GAAI,OAAIA,EAAKuB,SAAWwE,EAASxE,UACjF8L,EAAWrL,QAAU+D,EAAS/D,OAC9BnD,GAAUoC,YAAYsJ,aAAaxE,EAASxE,OAAQwE,EAAS/D,OAE7DqL,EAAWlL,WAAa4D,EAAS5D,UACjCtD,GAAUoC,YAAYwJ,gBAAgB1E,EAASxE,OAAQwE,EAAS5D,UAEhEkL,EAAW3L,WAAaqE,EAASrE,UACjCoD,EACIiB,EAASrE,SAAS4C,YAAYC,EAC9BwB,EAASrE,SAAS4C,YAAYI,EAC9BqB,EAASrE,SAASC,KAClBoE,EAASxE,WAKrB,EAAKgH,OAAOC,GAAG,eAAe,SAAC8E,GAC3B,EAAKvD,UAAU9I,YAAY0J,mBAAmB2C,OA/C/B,KAmDvB5K,iBAAmB,WACf,EAAK6F,OAAOgF,cApDO,KAuDvB1I,aAAe,SAACnD,GACZ,IAAM8L,EAAO3O,GAAUD,UAAUoB,KAAKwB,IAChCiM,EAAQlH,KAAKC,MAAMD,KAAKE,UAAU,EAAKsD,UAAU9I,YAAYI,MAAMC,MAAK,SAAAtB,GAAI,OAAIA,EAAKuB,SAAWiM,OACtG,EAAKjF,OAAOI,KAAK,gBAAiB,CAAE+E,cAAc,2BAAMD,GAAP,IAAc/L,SAAUA,OA1DtD,KA6DvBO,UAAY,SAACD,GACT,IAAMwL,EAAO3O,GAAUD,UAAUoB,KAAKwB,IAChCiM,EAAQlH,KAAKC,MAAMD,KAAKE,UAAU,EAAKsD,UAAU9I,YAAYI,MAAMC,MAAK,SAAAtB,GAAI,OAAIA,EAAKuB,SAAWiM,OACtG,EAAKjF,OAAOI,KAAK,gBAAiB,CAAE+E,cAAc,2BAAMD,GAAP,IAAczL,MAAOA,OAhEnD,KAmEvBK,aAAe,SAACF,GACZ,IAAMqL,EAAO3O,GAAUD,UAAUoB,KAAKwB,IAChCiM,EAAQlH,KAAKC,MAAMD,KAAKE,UAAU,EAAKsD,UAAU9I,YAAYI,MAAMC,MAAK,SAAAtB,GAAI,OAAIA,EAAKuB,SAAWiM,OACtG,EAAKjF,OAAOI,KAAK,gBAAiB,CAAE+E,cAAc,2BAAMD,GAAP,IAActL,SAAUA,OAtEtD,KAyEvB+H,gBAAkB,SAACnH,GACf,EAAKwF,OAAOI,KAAK,cAAe,CAAE5F,aAzElC8H,KAAKd,UAAYA,EACjBe,YAAeD,KAAM,CACjBd,UAAWgB,IACXxC,OAAQwC,IACRjL,gBAAiBkL,IACjBtI,iBAAkBsI,IAClBnG,aAAcmG,IACd/I,UAAW+I,IACX3I,aAAc2I,OCVX,GAAE2C,eALG,uCAAG,WAAO5H,GAAP,eAAApG,EAAA,sEACI+J,IAAMkE,IAAN,UAHX,iBAGW,YAAwB7H,EAASvE,KAAOuE,GAD5C,cACblG,EADa,yBAEZA,EAAS6I,MAFG,2CAAH,uDCFdmF,EAAU,cAsBD,GAAEC,gBApBI,uCAAG,4BAAAnO,EAAA,sEACG+J,IAAMG,KAAKgE,GADd,cACdhO,EADc,yBAEbA,EAAS6I,MAFI,2CAAH,qDAoBaqF,eAfd,uCAAG,WAAOC,GAAP,eAAArO,EAAA,sEACI+J,IAAMG,KAAN,UAAcgE,EAAd,aAAkCG,GADtC,cACbnO,EADa,yBAEZA,EAAS6I,MAFG,2CAAH,sDAe8BuF,mBAV1B,uCAAG,WAAOD,GAAP,eAAArO,EAAA,sEACA+J,IAAMG,KAAN,UAAcgE,EAAd,iBAAsCG,GADtC,cACjBnO,EADiB,yBAEhBA,EAAS6I,MAFO,2CAAH,sDAU8CwF,QALzD,uCAAG,4BAAAvO,EAAA,sEACW+J,IAAMG,KAAN,UAAcgE,EAAd,aADX,cACNhO,EADM,yBAELA,EAAS6I,MAFJ,2CAAH,sDC8CEyF,GArDX,WAAYpE,GAAY,IAAD,gCALvBA,UAAY,KAKW,KAJvB/J,KAAO,KAIgB,KAHvBgC,OAAQ,EAGe,KAFvBG,UAAW,EAEY,KAgBvBzC,OAhBuB,uCAgBd,WAAOV,EAAUE,GAAjB,eAAAS,EAAA,sEACkByO,EAAOL,eAAe,CAAE/O,WAAUE,aADpD,cACCW,EADD,OAEL,EAAKG,KAAOH,EAASG,KACrBG,QAAQC,IAAI,gBAAiB,EAAKJ,MAH7B,kBAIEH,GAJF,2CAhBc,6DAuBvByJ,YAvBuB,sBAuBT,4BAAA3J,EAAA,sEACayO,EAAON,kBADpB,cACJjO,EADI,OAEV,EAAKG,KAAOH,EAASG,KAFX,kBAGHH,GAHG,2CAvBS,KA6BvB4C,QA7BuB,sBA6Bb,sBAAA9C,EAAA,sEACAyO,EAAOF,UADP,OAEN,EAAKlO,KAAO,KAFN,2CA7Ba,KAkCvBiH,WAlCuB,uCAkCV,WAAOoH,GAAP,eAAA1O,EAAA,+EAEkB2O,EAASX,eAAeU,GAF1C,cAECxO,EAFD,OAGL,EAAKG,KAAOH,EAHP,kBAIEA,GAJF,yDAME,MANF,yDAlCU,2DA4CvBkC,SAAW,SAACvB,GACR,EAAKwB,MAAQxB,GA7CM,KAgDvB4B,YAAc,SAAC5B,GACX,EAAK2B,SAAW3B,GAhDhBqK,KAAKd,UAAYA,EACjBe,YAAeD,KAAM,CACjBd,UAAWgB,IACX/K,KAAM+K,IACN/I,MAAO+I,IACP5I,SAAU4I,IACVrL,OAAQsL,IACR1B,YAAa0B,IACbvI,QAASuI,IACT/D,WAAY+D,IACZjJ,SAAUiJ,IACV5I,YAAa4I,OCjBZnM,GAAY,ICIrB,aAAe,oBACXgM,KAAK5J,YAAc,IAAI6I,EAAYe,MACnCA,KAAKjM,UAAY,IAAIuP,GAAUtD,MAC/BA,KAAK/L,YAAc,IAAImO,EAAYpC,MACnC0D,YAAmB1D,ODN3B2D,IAASC,OACL,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEJvK,SAASC,eAAe,U","file":"static/js/main.a046781f.chunk.js","sourcesContent":["import './Dots.css'\r\n\r\nconst Dots = (props) => {\r\n    return (\r\n        <div className={`dots ${props.white && 'white'}`}>\r\n            <div className=\"snippet\" data-title=\".dot-hourglass\">\r\n                <div className=\"stage\">\r\n                    <div className=\"dot-flashing\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dots\r\n","import { useState } from 'react';\r\nimport './Login.css';\r\nimport { rootstore } from '../../index'\r\nimport Dots from '../Office/components/Dots/Dots'\r\nimport { AiOutlineUser, AiOutlineShop } from 'react-icons/ai'\r\n\r\nfunction Login(props) {\r\n    const { userStore, socketStore } = rootstore\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [loginType, setLoginType] = useState('user')\r\n\r\n    const isActive = (tab) => {\r\n        if (tab === 'user' && loginType === 'user') {\r\n            return 'user-active'\r\n        }\r\n        if (tab === 'organization' && loginType === 'organization') {\r\n            return 'organization-active'\r\n        }\r\n        return ''\r\n    }\r\n\r\n    const signIn = async () => {\r\n        if (username === '' || password === '') {\r\n            alert('username and password required')\r\n            return\r\n        }\r\n\r\n        try {\r\n            setLoading(true)\r\n            const response = await userStore.signIn(username, password)\r\n            socketStore.connectToOffice(response.token, response.user.organization)\r\n            props.navigateTo('office')\r\n            setLoading(false)\r\n\r\n        } catch (error) {\r\n            setLoading(false)\r\n            setPassword('')\r\n            alert('could not signin')\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login-title\">\r\n                Sign in to OfficeTalk\r\n            </div>\r\n            <div className=\"login-card block-shadow\">\r\n                <div className=\"login-card-tabs\">\r\n                    <div className={`login-card-tab ${isActive('user')}`} onClick={() => setLoginType('user')}>\r\n                        <AiOutlineUser size={20} />\r\n                        <div className=\"login-tab-text\">User</div>\r\n                    </div>\r\n                    <div className={`login-card-tab ${isActive('organization')}`} onClick={() => setLoginType('organization')}>\r\n                        <AiOutlineShop size={20} />\r\n                        <div className=\"login-tab-text\">Organization</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"login-input-row\">\r\n                    <div className=\"login-input-title\">\r\n                    </div>\r\n                    <input\r\n                        placeholder={'Email'}\r\n                        value={username}\r\n                        onChange={(event) => setUsername(event.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"login-input-row\">\r\n                    <div className=\"login-input-title\">\r\n                    </div>\r\n                    <input\r\n                        placeholder={'Password'}\r\n                        value={password}\r\n                        type={'password'}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"login-input-row\">\r\n                    <div className=\"OTButton\" style={{ background: loginType === 'organization' && '#F74040' }} onClick={() => signIn()}>\r\n                        {loading ?\r\n                            <Dots white />\r\n                            :\r\n                            `Sign in`\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import './Navbar.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport { FiSettings, FiMic, FiVolume2, FiMicOff, FiVolumeX } from 'react-icons/fi'\r\n\r\nconst Navbar = observer((props) => {\r\n    const { userStore, socketStore, officeStore } = rootstore\r\n\r\n    const toggleMic = () => {\r\n        userStore.setMuted(!userStore.muted)\r\n        socketStore.emitMuted(!userStore.muted)\r\n    }\r\n\r\n    const toggleVolume = () => {\r\n        if (!userStore.silenced) {\r\n            \r\n            userStore.setSilenced(true)\r\n            userStore.setMuted(true)\r\n\r\n            socketStore.emitSilenced(true)\r\n            socketStore.emitMuted(true)\r\n        } else {\r\n            userStore.setSilenced(false)\r\n            socketStore.emitSilenced(false)\r\n        }\r\n    }\r\n\r\n    const signOut = () => {\r\n        userStore.signOut()\r\n        socketStore.disconnectSocket()\r\n        props.navigateTo('login')\r\n    }\r\n\r\n    const getCurrentRoom = () => {\r\n        const user = officeStore.users.find(user => user.userId === userStore.user._id)\r\n        if (!user) {\r\n            return 'loading...'\r\n        }\r\n        const roomId = user.position.room\r\n\r\n        if (roomId === -1) {\r\n            return \"Hallway\"\r\n        } else {\r\n            return officeStore.office.rooms.find(room => room._id === roomId).name\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar block-shadow\">\r\n            <div className=\"navbar-logo\">\r\n                <img className=\"navbar-logo-image\" src={officeStore.organization.logo}>\r\n                </img>\r\n                <div className=\"navbar-office-name\">\r\n                    {officeStore.organization.name}\r\n                </div>\r\n            </div>\r\n            <div className=\"navbar-controls\">\r\n                <div className=\"navbar-controls-border\"></div>\r\n                <div className=\"navbar-room\">\r\n                    <div className=\"navbar-room-name\">{getCurrentRoom()}</div>\r\n                    <div className=\"navbar-room-title\">current room</div>\r\n                </div>\r\n                <div className=\"navbar-voice\" onClick={() => toggleMic()} >\r\n                    {!userStore.muted ?\r\n                        <FiMic size={22} className=\"navbar-voice-microphone\" color={'#1CBF73'} />\r\n                        :\r\n                        <FiMicOff size={22} className=\"navbar-voice-microphone\" color={'#F74040'} />\r\n                    }\r\n                    <div className=\"navbar-room-title\">microphone</div>\r\n                </div>\r\n                <div className=\"navbar-voice\" onClick={() => toggleVolume()}>\r\n                    {!userStore.silenced ?\r\n                        <FiVolume2 size={22} className=\"navbar-voice-volume\" color={'#1CBF73'} />\r\n                        :\r\n                        <FiVolumeX size={22} className=\"navbar-voice-volume\" color={'#F74040'} />\r\n                    }\r\n                    <div className=\"navbar-room-title\">volume</div>\r\n                </div>\r\n                <div className=\"navbar-settings\" onClick={() => props.setShowSettings(true)}>\r\n                    <FiSettings size={22} className=\"navbar-settings-cog\" color={'#404145'} />\r\n                    <div className=\"navbar-room-title\">settings</div>\r\n                </div>\r\n                <div className=\"navbar-controls-border\"></div>\r\n            </div>\r\n            <div className=\"navbar-user\">\r\n                {userStore.user.name}\r\n                <div className=\"navbar-user-avatar\" style={{ backgroundImage: `url(${userStore.user.avatar})` }}>\r\n                </div>\r\n                <div className=\"navbar-sign-out\" onClick={() => signOut()}>\r\n                    Sign out\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Navbar","import './Message.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../../index'\r\n\r\nconst Message = observer((props) => {\r\n    const userStore = rootstore.userStore\r\n\r\n    const myMessage = () => {\r\n        if (props.message.author._id === userStore.user._id) {\r\n            return ' my-message'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`message ${myMessage()}`}>\r\n            <div className=\"message-buble\">\r\n                <div className=\"message-author\">\r\n                    {props.message.author.name}\r\n                </div>\r\n                <div className=\"message-content\">\r\n                    {props.message.content}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Message","import { useState } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './Chat.css';\r\nimport Message from './Message/Message'\r\nimport { rootstore } from '../../../../index'\r\nimport Dots from '../Dots/Dots'\r\nimport { AiOutlineSend } from 'react-icons/ai'\r\n\r\nconst Chat = observer((props) => {\r\n    const [message, setMessage] = useState('')\r\n    const [sending, setSending] = useState(false)\r\n    const [activeChat, setActiveChat] = useState('office')\r\n    const { officeStore, userStore } = rootstore\r\n\r\n    const sendMessage = async () => {\r\n        setSending(true)\r\n        const response = await officeStore.sendMessage(message)\r\n        setSending(false)\r\n        setMessage('')\r\n        if (!response) {\r\n            window.alert('sending message failed')\r\n        }\r\n    }\r\n\r\n    const sendRoomMessage = () => {\r\n        setSending(true)\r\n        officeStore.sendRoomMessage(message)\r\n        setSending(false)\r\n        setMessage('')\r\n    }\r\n\r\n    const getCurrentRoom = () => {\r\n        const user = officeStore.users.find(user => user.userId === userStore.user._id)\r\n        if (!user) {\r\n            return 'loading...'\r\n        }\r\n        const roomId = user.position.room\r\n\r\n        if (roomId === -1) {\r\n            return \"Hallway\"\r\n        } else {\r\n            return officeStore.office.rooms.find(room => room._id === roomId).name\r\n        }\r\n    }\r\n\r\n    const messagesToDisplay = () => {\r\n        return activeChat === 'office' ? officeStore.office.messages : officeStore.roomMessages\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat block-shadow\">\r\n            <div className=\"chat-tabs block-shadow\">\r\n                <div className={`chat-tab ${activeChat === 'office' && 'chat-tab-active'}`} onClick={() => setActiveChat('office')}>Office</div>\r\n                <div className={`chat-tab ${activeChat === 'room' && 'chat-tab-active'}`} onClick={() => setActiveChat('room')}>{getCurrentRoom()}</div>\r\n            </div>\r\n            <div className=\"chat-messages\">\r\n                {messagesToDisplay().map((message, key) =>\r\n                    <Message key={key} message={message} />\r\n                )}\r\n            </div>\r\n            <div className=\"chat-controls\">\r\n                <div className=\"chat-input-container\">\r\n                    <input\r\n                        value={message}\r\n                        placeholder={'Say something'}\r\n                        onChange={(event) => setMessage(event.target.value)}\r\n                    />\r\n                    <div className=\"chat-send\" onClick={activeChat === 'office' ? sendMessage : sendRoomMessage}>\r\n                        {sending ?\r\n                            <Dots />\r\n                            :\r\n                            <AiOutlineSend size={30} />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Chat","import { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../..'\r\nimport './Room.css'\r\n\r\nconst Room = observer((props) => {\r\n    const { socketStore } = rootstore\r\n\r\n    const move = (event) => {\r\n        const rooms = document.getElementById('rooms').getBoundingClientRect()\r\n        const position = {\r\n            room: props.room._id,\r\n            coordinates: {\r\n                x: event.clientX - rooms.left,\r\n                y: event.clientY - rooms.top\r\n            }\r\n        }\r\n        socketStore.emitPosition(position)\r\n    }\r\n\r\n    return (\r\n        <div className={`room ${props.first && 'first-block'} ${props.last && 'last-block'} ${props.bottomRoom && 'bottom-room'}`} id={`room${props.room._id}`}>\r\n            <div className=\"room-top\">\r\n                {props.room.name}\r\n            </div>\r\n            <div className=\"room-content\" onDoubleClick={(event) => move(event)}>\r\n            </div>\r\n            <div className=\"room-bottom\">\r\n                <div className=\"room-door\" id={`door${props.room._id}`}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Room;","import './Hallway.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../..'\r\n\r\nconst Hallway = observer((props) => {\r\n    const { socketStore } = rootstore\r\n\r\n    const move = (event) => {\r\n        const rooms = document.getElementById('rooms').getBoundingClientRect()\r\n        const position = {\r\n            room: -1,\r\n            coordinates: {\r\n                x: event.clientX - rooms.left,\r\n                y: event.clientY - rooms.top\r\n            }\r\n        }\r\n        socketStore.emitPosition(position)\r\n    }\r\n    return (\r\n        <div className={`hallway ${props.first && 'first-block'} ${props.last && 'last-block'}`} onDoubleClick={(e) => move(e)}>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Hallway","import './Avatar.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport { FiMicOff, FiVolumeX } from 'react-icons/fi'\r\n\r\n\r\nconst Avatar = observer((props) => {\r\n    const officeStore = rootstore.officeStore\r\n    const userStore = rootstore.userStore\r\n\r\n    const getUserAvatar = () => {\r\n        const user = officeStore.organization.employees.find(empl => empl._id === props.user.userId)\r\n        if (!user) {\r\n            return 'laoding...'\r\n        } else {\r\n            return user.avatar\r\n        }\r\n    }\r\n\r\n    const getIcon = () => {\r\n        if(props.user.silenced) {\r\n            return <FiVolumeX size={22} className=\"navbar-voice-volume\" color={'#F74040'} />\r\n        }else if (props.user.muted) {\r\n            return <FiMicOff size={22} className=\"navbar-voice-microphone\" color={'#F74040'} />\r\n        }else {\r\n            return \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"avatar\" style={{\r\n            top: props.user.position.coordinates.y,\r\n            left: props.user.position.coordinates.x,\r\n            transition: `all ${props.user.transitionTime}s linear`,\r\n            border: `${props.user.userId === userStore.user._id ? '2' : '1'}px solid ${props.user.userId === userStore.user._id ? '#1CBF73' : 'black'}`,\r\n            backgroundImage: `url(${getUserAvatar()})`\r\n        }}>\r\n            {getIcon()}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Avatar","import './Rooms.css'\r\nimport { observer, } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport Room from './Room/Room'\r\nimport Hallway from './Hallway/Hallway'\r\nimport Avatar from '../Avatar/Avatar'\r\n\r\nconst Rooms = observer(() => {\r\n    const officeStore = rootstore.officeStore\r\n    const roomsCount = officeStore.office.rooms.length\r\n\r\n    return (\r\n        <div className=\"rooms\" id=\"rooms\">\r\n            <div className=\"rooms-row\">\r\n                {officeStore.office.rooms.map((room, index) => {\r\n                    if (index % 2 === 0) {\r\n                        return (\r\n                            <Room\r\n                                room={room}\r\n                                first={index === 0}\r\n                            />\r\n                        )\r\n                    } return null\r\n                })}\r\n            </div>\r\n            <Hallway/>\r\n            <div className=\"rooms-row\">\r\n                {officeStore.office.rooms.map((room, index) => {\r\n                    if (index % 2 === 1) {\r\n                        return (\r\n                            <Room\r\n                                room={room}\r\n                                bottomRoom\r\n                                first={index === 1}\r\n                            />\r\n\r\n                        )\r\n                    } else return null\r\n                })}\r\n                {roomsCount % 2 === 1 &&\r\n                    <div className=\"room-block-empty\"></div>\r\n                }\r\n            </div>\r\n            <div className=\"user-layer\">\r\n                {officeStore.users.map(user => <Avatar key={user.userId} user={user} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Rooms","import Dots from '../Dots/Dots';\r\nimport './Loading.css';\r\n\r\nconst Loading = (props) => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <div className=\"loading-text\">Loading Office</div>\r\n            <Dots />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import './CoWorkers.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport { FiChevronsRight } from 'react-icons/fi'\r\n\r\n\r\nconst CoWorkers = observer((props) => {\r\n    const officeStore = rootstore.officeStore\r\n\r\n    const isOnline = (employee) => {\r\n        return officeStore.users.find(user => user.userId === employee._id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"coworkers block-shadow\" style={{ right: props.show ? '0px' : '-250px' }}>\r\n            <div className=\"coworkers-header\">\r\n                Co-workers\r\n            </div>\r\n            <div className=\"coworkers-header-back\" onClick={() => props.close()}>\r\n                <FiChevronsRight size={25} />\r\n            </div>\r\n            <div className=\"coworkers-names\">\r\n                {officeStore.organization.employees.map(employee => {\r\n                    return (\r\n                        <div className=\"coworkers-user\">\r\n                            <div className=\"coworkers-user-avatar\" style={{backgroundImage: `url(${employee.avatar})`}}></div>\r\n                            <div className={`coworkers-user-name ${isOnline(employee) && 'user-online'}`}> {employee.name} </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default CoWorkers;","import './Settings.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport { FiX } from 'react-icons/fi'\r\nimport { useEffect, useState } from 'react'\r\nimport Dots from '../Dots/Dots'\r\n\r\nconst Settings = observer((props) => {\r\n    const userStore = rootstore.userStore\r\n    const officeStore = rootstore.officeStore\r\n    const [background, setBackground] = useState('transparent')\r\n    const [unsaved, setUnsaved] = useState(false)\r\n    const [user, setUser] = useState(JSON.parse(JSON.stringify(userStore.user)))\r\n    const [saveing, setSaveing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setBackground('rgba(64, 65, 69, 0.5)')\r\n    }, [])\r\n\r\n    const changeValue = (property, event) => {\r\n        if (!unsaved) {\r\n            setUnsaved(true)\r\n        }\r\n        setUser({ ...user, [property]: event.target.value })\r\n    }\r\n\r\n    const save = async () => {\r\n        if (!unsaved) return\r\n\r\n        setSaveing(true)\r\n        const response = await userStore.updateUser(user)\r\n        setSaveing(false)\r\n\r\n        if (response) {\r\n            setUnsaved(false)\r\n        } else {\r\n            alert('could not save user')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings-background\" style={{ background: background }}>\r\n            <div className=\"settings-modal block-shadow\">\r\n                <div className=\"settings-top-row\">\r\n                    <FiX size={25} style={{ margin: '10px', cursor: 'pointer' }} color={'#404145'} onClick={() => props.setShowSettings(false)} />\r\n                </div>\r\n                <div className=\"settings-content\">\r\n                    <div className=\"settings-content-row\">\r\n                        <div className=\"settings-avatar\" style={{ backgroundImage: `url(${user.avatar})` }}></div>\r\n                    </div>\r\n                    <div className=\"settings-content-row\">\r\n                        <div className=\"settings-input-row\">\r\n                            <div className=\"settings-input-label\">Avatar url</div>\r\n                            <input\r\n                                value={user.avatar}\r\n                                onChange={(event) => changeValue('avatar', event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"settings-content-row\">\r\n                        <div className=\"settings-input-row\">\r\n                            <div className=\"settings-input-label\">Name</div>\r\n                            <input\r\n                                value={user.name}\r\n                                onChange={(event) => changeValue('name', event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"settings-bottom-row\">\r\n                    <div className={`settings-save-button ${unsaved && 'unsaved-changes'}`} onClick={() => save()}>\r\n                        {saveing ?\r\n                            <Dots white />\r\n                            :\r\n                            'Save'\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Settings","import { useEffect, useState, useRef } from 'react'\r\nimport './Office.css'\r\nimport { observer } from 'mobx-react'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Chat from './components/Chat/Chat'\r\nimport Rooms from './components/rooms/Rooms'\r\nimport { rootstore } from '../../index'\r\nimport Loading from './components/Loading/Loading'\r\nimport CoWorkers from './components/CoWorkers/CoWorkers'\r\nimport Settings from './components/Settings/Settings'\r\nimport { FiUsers } from 'react-icons/fi'\r\nimport Peer from 'simple-peer'\r\n\r\nconst Office = observer((props) => {\r\n    const { officeStore, userStore, socketStore } = rootstore\r\n    const [showCoWorkers, setShowCoWorkers] = useState(false)\r\n    const [showSettings, setShowSettings] = useState(false)\r\n\r\n    const peerAudio = useRef()\r\n\r\n    useEffect(() => {\r\n        const fetchOrganization = async () => {\r\n            await officeStore.fetchOffice(userStore.user.organization)\r\n        }\r\n\r\n        navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(stream => {            \r\n            const peer1 = new Peer({ initiator: true, trickle: false, stream: stream })\r\n            \r\n            socketStore.socket.on('callAccepted', signal => {\r\n                console.log('accept call')\r\n                peer1.signal(signal)\r\n            })\r\n    \r\n            peer1.on('signal', data => {\r\n                console.log('emiting signal')\r\n                socketStore.socket.emit('startCall', data)\r\n            })\r\n    \r\n            peer1.on('stream', stream => {\r\n                console.log('stream received')\r\n                if (peerAudio.current) {\r\n                    peerAudio.current.srcObject = stream\r\n                }\r\n            })\r\n        })\r\n\r\n        fetchOrganization()\r\n    }, [officeStore, userStore])\r\n\r\n    if (!officeStore.office) {\r\n        return <Loading />\r\n    }\r\n\r\n    return (\r\n        <div className=\"office\">\r\n            <Navbar\r\n                navigateTo={props.navigateTo}\r\n                setShowSettings={setShowSettings}\r\n            />\r\n            <div className=\"office-body\">\r\n                <Chat />\r\n                <div className=\"office-body-scrollable\">\r\n                    <Rooms />\r\n                </div>\r\n            </div>\r\n            <div className=\"office-toggle-coworkers\" onClick={() => setShowCoWorkers(!showCoWorkers)}>\r\n                <FiUsers style={{marginRight: '3px'}} size={18}/>\r\n                {`Co-workers (${officeStore.organization.employees.length})`}\r\n            </div>\r\n            <CoWorkers show={showCoWorkers} close={() => setShowCoWorkers(false)}/>\r\n            {showSettings && <Settings setShowSettings={setShowSettings} />}\r\n            <video playsInline ref={peerAudio} autoPlay style={{height: '0px'}}/>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Office","import { useEffect, useState, useRef } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from './index'\r\nimport { io } from 'socket.io-client'\r\nimport Login from './Views/Login/Login'\r\nimport Office from './Views/Office/Office'\r\nimport './App.css'\r\n\r\nconst App = observer(() => {\r\n  const userStore = rootstore.userStore\r\n  const socketStore = rootstore.socketStore\r\n  const [page, setPage] = useState('login')\r\n\r\n  useEffect(() => {\r\n    const checkLogin = async () => {\r\n      const response = await userStore.checkSignIn()\r\n      response.user && setPage('office')\r\n      socketStore.connectToOffice(response.token, response.user.organization)\r\n    }\r\n\r\n    checkLogin()\r\n  }, [userStore])\r\n\r\n  const renderPage = () => {\r\n    switch (page) {\r\n      case 'login':\r\n        return <Login navigateTo={setPage} />\r\n      case 'office':\r\n        return <Office navigateTo={setPage} />\r\n      case 'controlPanel':\r\n        return <Login navigateTo={setPage} />\r\n      default:\r\n        return <Login navigateTo={setPage} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {renderPage()}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default App;\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/organizations'\r\n\r\nconst getOrganization = async (id) => {\r\n    const response = await axios.get(`${baseUrl}/${id}`)\r\n    return response.data\r\n}\r\n\r\nexport default { getOrganization }","import axios from 'axios'\r\nconst baseUrl = '/api/messages'\r\n\r\nconst sendOfficeMessage = async (content) => {\r\n    const response = await axios.post(`${baseUrl}`, content)\r\n    return response.data\r\n}\r\n\r\nexport default { sendOfficeMessage }","import { makeObservable, observable, action } from 'mobx'\r\nimport Organization from '../Services/Organization'\r\nimport Message from '../Services/Message'\r\n\r\nclass OfficeStore {\r\n    rootStore = null\r\n    office = null\r\n    organization = null\r\n    roomMessages = []\r\n\r\n    users = []\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n        makeObservable(this, {\r\n            rootStore: observable,\r\n            office: observable,\r\n            organization: observable,\r\n            users: observable,\r\n            roomMessages: observable,\r\n            receiveMessage: action,\r\n            changePosition: action,\r\n            sendMessage: action,\r\n            fetchOffice: action,\r\n            setEmployeeStates: action,\r\n            receiveRoomMessage: action,\r\n            sendRoomMessage: action\r\n        })\r\n    }\r\n\r\n    fetchOffice = async (id) => {\r\n        const organization = await Organization.getOrganization(id)\r\n        this.organization = organization\r\n        this.office = organization.office\r\n        console.log('current organization:', this.organization)\r\n        return organization\r\n    }\r\n\r\n    setEmployeeStates = (employees) => {\r\n        this.users = employees\r\n    }\r\n\r\n    sendRoomMessage = (content) => {\r\n        this.rootStore.socketStore.emitRoomMessage(content)\r\n    }\r\n\r\n    sendMessage = async (content) => {\r\n        try {\r\n            const response = await Message.sendOfficeMessage({ content: content })\r\n            if (response) {\r\n                if (!this.office.messages.find(msg => msg._id === response._id)) {\r\n                    let officeClone = JSON.parse(JSON.stringify(this.office))\r\n                    officeClone.messages.unshift(response)\r\n                    this.office = officeClone\r\n                }\r\n                return response\r\n            }\r\n        } catch {\r\n            return null\r\n        }\r\n    }\r\n\r\n    receiveMessage = (message) => {\r\n        if (!this.office.messages.find(msg => msg._id === message._id)) {\r\n            const officeClone = JSON.parse(JSON.stringify(this.office))\r\n            officeClone.messages.unshift(message)\r\n            this.office = officeClone\r\n        }\r\n    }\r\n\r\n    muteEmployee = (id, value) => {\r\n        let usersClone = JSON.parse(JSON.stringify(this.users))\r\n        usersClone.find(user => user.userId === id).muted = value\r\n        this.users = usersClone\r\n    }\r\n\r\n    silenceEmployee = (id, value) => {\r\n        let usersClone = JSON.parse(JSON.stringify(this.users))\r\n        usersClone.find(user => user.userId === id).silenced = value\r\n        this.users = usersClone\r\n    }\r\n\r\n    changePosition = (id, position, transitionTime) => {\r\n        let usersClone = JSON.parse(JSON.stringify(this.users))\r\n        usersClone.find(user => user.userId === id).position = position\r\n        usersClone.find(user => user.userId === id).transitionTime = transitionTime\r\n        this.users = usersClone\r\n    }\r\n\r\n    receiveRoomMessage = (message) => {\r\n        if (!this.roomMessages.find(msg => msg._id === message._id)) {\r\n            this.roomMessages = [message].concat(this.roomMessages)\r\n        }\r\n    }\r\n}\r\n\r\nexport default OfficeStore","import { rootstore } from '../index'\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nconst move = async (X, Y, roomId, userId) => {\r\n    const user = rootstore.officeStore.users.find(user => user.userId === userId)\r\n\r\n    if (roomId !== user.position.room) {\r\n        if (roomId === -1) {\r\n            await roomToHall(user, X, Y, roomId, userId)\r\n        } else if (user.position.room === -1) {\r\n            await hallToRoom(user, X, Y, roomId, userId)\r\n        } else {\r\n            await roomToRoom(user, X, Y, roomId)\r\n        }\r\n    } else {\r\n        await moveInsideRoom(userId, X, Y, roomId)\r\n    }\r\n}\r\n\r\nconst roomToHall = async (user, X, Y, roomId, userId) => {\r\n    const duration = moveToDoor(userId, user.position.room)\r\n    await delay(duration * 1000)\r\n    moveInsideRoom(userId, X, Y, roomId)\r\n}\r\n\r\nconst hallToRoom = async (user, X, Y, roomId) => {\r\n    const duration = moveToDoor(user.userId, roomId)\r\n    await delay(duration * 1000)\r\n    moveInsideRoom(user.userId, X, Y, roomId)\r\n}\r\n\r\nconst roomToRoom = async (user, X, Y, roomId) => {\r\n    const duration = moveToDoor(user.userId, user.position.room)\r\n    await delay(duration * 1000)\r\n    const duration2 = moveToDoor(user.userId, roomId)\r\n    await delay(duration2 * 1000)\r\n    moveInsideRoom(user.userId, X, Y, roomId)\r\n}\r\n\r\nconst moveInsideRoom = (userId, X, Y, roomId ) => {\r\n    const user = rootstore.officeStore.users.find(user => user.userId === userId)\r\n    const rooms = document.getElementById('rooms')\r\n    const positionX = X \r\n    const positionY = Y \r\n    const transitionTime = calcTravelTime(user.position.coordinates.x, user.position.coordinates.y, positionX, positionY)\r\n    rootstore.officeStore.changePosition(userId, { room: roomId, coordinates: { x: positionX, y: positionY } }, transitionTime)\r\n    return transitionTime\r\n}\r\n\r\nconst moveToDoor = (userId, targetRoom) => {\r\n    const user = rootstore.officeStore.users.find(user => user.userId === userId)\r\n    const doorElement = document.getElementById(`door${targetRoom}`)\r\n\r\n    const doorX = doorElement.offsetLeft + 30\r\n    const doorY = doorElement.offsetTop\r\n    const transitionTime = calcTravelTime(user.position.coordinates.x, user.position.coordinates.y, doorX, doorY)\r\n    rootstore.officeStore.changePosition(userId, { room: user.position.room, coordinates: { x: doorX, y: doorY } }, transitionTime)\r\n    return transitionTime\r\n}\r\n\r\nconst calcTravelTime = (oldX, oldY, newX, newY) => {\r\n    const travelX = Math.abs(oldX - newX)\r\n    const travelY = Math.abs(oldY - newY)\r\n    const TravelLength = Math.hypot(travelX, travelY)\r\n    return TravelLength * 0.01\r\n}\r\n\r\nexport default move","import { makeObservable, observable, action } from 'mobx'\r\nimport { io } from 'socket.io-client'\r\nimport { rootstore } from '..'\r\nimport move from '../Hooks/Mover'\r\n\r\nclass SocketStore {\r\n    rootStore = null\r\n    socket = null\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n        makeObservable(this, {\r\n            rootStore: observable,\r\n            socket: observable,\r\n            connectToOffice: action,\r\n            disconnectSocket: action,\r\n            emitPosition: action,\r\n            emitMuted: action,\r\n            emitSilenced: action\r\n        })\r\n    }\r\n\r\n    connectToOffice = (token, organization) => {\r\n        this.socket = io.connect(`/${organization}`, {\r\n            auth: {\r\n                token\r\n            }\r\n        })\r\n\r\n        this.socket.on('message', (message) => {\r\n            this.rootStore.officeStore.receiveMessage(message)\r\n        })\r\n\r\n        this.socket.on('employees', (employees) => {\r\n            this.rootStore.officeStore.setEmployeeStates(employees)\r\n        })\r\n\r\n        this.socket.on('employeeState', (employee) => {\r\n            const targetUser = rootstore.officeStore.users.find(user => user.userId === employee.userId)\r\n            if (targetUser.muted !== employee.muted) {\r\n                rootstore.officeStore.muteEmployee(employee.userId, employee.muted)\r\n            }\r\n            if (targetUser.silenced !== employee.silenced) {\r\n                rootstore.officeStore.silenceEmployee(employee.userId, employee.silenced)\r\n            }\r\n            if (targetUser.position !== employee.position) {\r\n                move(\r\n                    employee.position.coordinates.x,\r\n                    employee.position.coordinates.y,\r\n                    employee.position.room,\r\n                    employee.userId\r\n                )\r\n            }\r\n        })\r\n\r\n        this.socket.on('roomMessage', (roomMessage) => {\r\n            this.rootStore.officeStore.receiveRoomMessage(roomMessage)\r\n        })\r\n    }\r\n\r\n    disconnectSocket = () => {\r\n        this.socket.disconnect()\r\n    }\r\n\r\n    emitPosition = (position) => {\r\n        const myId = rootstore.userStore.user._id\r\n        const state = JSON.parse(JSON.stringify(this.rootStore.officeStore.users.find(user => user.userId === myId)))\r\n        this.socket.emit('employeeState', { employeeState: { ...state, position: position } })\r\n    }\r\n\r\n    emitMuted = (muted) => {\r\n        const myId = rootstore.userStore.user._id\r\n        const state = JSON.parse(JSON.stringify(this.rootStore.officeStore.users.find(user => user.userId === myId)))\r\n        this.socket.emit('employeeState', { employeeState: { ...state, muted: muted } })\r\n    }\r\n\r\n    emitSilenced = (silenced) => {\r\n        const myId = rootstore.userStore.user._id\r\n        const state = JSON.parse(JSON.stringify(this.rootStore.officeStore.users.find(user => user.userId === myId)))\r\n        this.socket.emit('employeeState', { employeeState: { ...state, silenced: silenced } })\r\n    }\r\n\r\n    emitRoomMessage = (content) => {\r\n        this.socket.emit('roomMessage', { content })\r\n    }\r\n}\r\n\r\nexport default SocketStore","import axios from 'axios'\r\nconst baseUrl = '/api/employees'\r\n\r\nconst updateEmployee = async (employee) => {\r\n    const response = await axios.put(`${baseUrl}/${employee._id}`, employee)\r\n    return response.data\r\n}\r\n\r\nexport default { updateEmployee }","import axios from 'axios'\r\nconst baseUrl = '/api/signin'\r\n\r\nconst signInWithToken = async () => {\r\n    const response = await axios.post(baseUrl)\r\n    return response.data\r\n}\r\n\r\nconst signInEmployee = async (credentials) => {\r\n    const response = await axios.post(`${baseUrl}/employee`, credentials)\r\n    return response.data\r\n}\r\n\r\nconst signInOrganization = async (credentials) => {\r\n    const response = await axios.post(`${baseUrl}/organization`, credentials)\r\n    return response.data\r\n}\r\n\r\nconst SignOut = async () => {\r\n    const response = await axios.post(`${baseUrl}/signout`)\r\n    return response.data\r\n}\r\n\r\nexport default { signInWithToken, signInEmployee, signInOrganization, SignOut }","import { makeObservable, observable, action } from 'mobx'\r\nimport Employee from '../Services/Employee'\r\nimport SignIn from '../Services/SignIn'\r\n\r\n\r\nclass UserStore {\r\n    rootStore = null\r\n    user = null\r\n    muted = false\r\n    silenced = false\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n        makeObservable(this, {\r\n            rootStore: observable,\r\n            user: observable,\r\n            muted: observable,\r\n            silenced: observable,\r\n            signIn: action,\r\n            checkSignIn: action,\r\n            signOut: action,\r\n            updateUser: action,\r\n            setMuted: action,\r\n            setSilenced: action\r\n        })\r\n    }\r\n\r\n    signIn = async (username, password) => {\r\n        const response = await SignIn.signInEmployee({ username, password })\r\n        this.user = response.user\r\n        console.log('current user:', this.user)\r\n        return response\r\n    }\r\n\r\n    checkSignIn = async () => {\r\n        const response = await SignIn.signInWithToken()\r\n        this.user = response.user\r\n        return response\r\n    }\r\n\r\n    signOut = async () => {\r\n        await SignIn.SignOut()\r\n        this.user = null\r\n    }\r\n\r\n    updateUser = async (userValues) => {\r\n        try {\r\n            const response = await Employee.updateEmployee(userValues)\r\n            this.user = response\r\n            return response\r\n        } catch {\r\n            return null\r\n        }\r\n    }\r\n\r\n    setMuted = (value) => {\r\n        this.muted = value\r\n    }\r\n\r\n    setSilenced = (value) => {\r\n        this.silenced = value\r\n    }\r\n}\r\n\r\nexport default UserStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport rootStore from './Stores/RootStore'\r\n\r\nexport const rootstore = new rootStore()\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","import { makeAutoObservable } from 'mobx'\r\nimport OfficeStore from \"./OfficeStore\"\r\nimport SocketStore from './SocketStore'\r\nimport UserStore from \"./UserStore\"\r\n\r\nclass RootStore {\r\n    officeStore\r\n    userStore\r\n    socketStore\r\n\r\n    constructor() {\r\n        this.officeStore = new OfficeStore(this)\r\n        this.userStore = new UserStore(this)\r\n        this.socketStore = new SocketStore(this)\r\n        makeAutoObservable(this)\r\n    }\r\n}\r\n\r\nexport default RootStore\r\n/*const storeInstance = new RootStore()\r\nexport default storeInstance;*/"],"sourceRoot":""}