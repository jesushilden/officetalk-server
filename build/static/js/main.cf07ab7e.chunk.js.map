{"version":3,"sources":["Views/Office/components/Dots/Dots.js","Views/Login/Login.js","Views/Office/components/Navbar/Navbar.js","Views/Office/components/Chat/Message/Message.js","Views/Office/components/Chat/Chat.js","Views/Office/components/rooms/Room/Room.js","Views/Office/components/rooms/Hallway/Hallway.js","Views/Office/components/Avatar/Avatar.js","Views/Office/components/Furniture/Furniture.js","Views/Office/components/rooms/Rooms.js","Views/Office/components/Loading/Loading.js","Views/Office/components/CoWorkers/CoWorkers.js","Views/Office/components/Settings/Settings.js","Views/Office/Office.js","App.js","Services/Organization.js","Services/Message.js","Stores/OfficeStore.js","Hooks/Mover.js","Services/Socket.js","Stores/SocketStore.js","Services/Employee.js","Services/SignIn.js","Stores/UserStore.js","Stores/MediaStore.js","index.js","Stores/RootStore.js"],"names":["Dots","props","className","white","data-title","Login","userStore","rootstore","socketStore","useState","username","setUsername","password","setPassword","loading","setLoading","loginType","setLoginType","isActive","tab","signIn","a","alert","response","connectToOffice","token","user","organization","navigateTo","console","log","onClick","size","placeholder","value","onChange","event","target","type","style","background","Navbar","observer","officeStore","src","logo","name","users","find","employeeId","_id","roomId","position","room","office","rooms","getCurrentRoom","setTo","muted","setMuted","emitMuted","toggleMic","color","silenced","setSilenced","emitSilenced","toggleVolume","setShowSettings","backgroundImage","avatar","signOut","disconnectSocket","Message","message","author","myMessage","content","Chat","setMessage","sending","setSending","activeChat","setActiveChat","sendMessage","window","marginRight","messages","roomMessages","map","key","sendRoomMessage","Room","first","last","bottomRoom","id","onDoubleClick","document","getElementById","getBoundingClientRect","coordinates","x","clientX","left","y","clientY","top","emitPosition","move","Hallway","e","Avatar","getIcon","employeeInfo","employees","empl","transition","transitionTime","border","getUserAvatar","backgroundColor","Furniture","furniture","height","width","Rooms","roomsCount","length","index","furnitures","furnitureId","Loading","CoWorkers","isOnline","employee","right","show","close","Settings","setBackground","unsaved","setUnsaved","JSON","parse","stringify","setUser","saveing","setSaveing","useEffect","changeValue","property","save","updateUser","margin","cursor","Office","mediaStore","showCoWorkers","setShowCoWorkers","showSettings","fetchOffice","fetchOrganization","peerAudios","peerAudio","playsInline","url","stream","playing","volume","App","page","setPage","checkSignIn","checkLogin","renderPage","services","getOrganization","axios","get","data","sendOfficeMessage","post","OfficeStore","rootStore","direction","Organization","runInAction","setEmployeeStates","addEmployeeState","employeeState","concat","removeEmployeeState","filter","emitRoomMessage","msg","officeClone","unshift","receiveMessage","muteEmployee","usersClone","silenceEmployee","changePosition","receiveRoomMessage","clearRoomChat","this","makeObservable","observable","action","delay","ms","Promise","res","setTimeout","X","Y","roomToHall","hallToRoom","roomToRoom","moveInsideRoom","duration","moveToDoor","endAllConnections","connectToPeers","duration2","positionX","positionY","calcTravelTime","targetRoom","doorElement","doorX","offsetLeft","doorY","offsetTop","oldX","oldY","newX","newY","travelX","Math","abs","travelY","hypot","baseUrl","updateState","put","addRoomMessage","sendSignal","signal","returnSignal","SocketStore","socket","io","connect","auth","on","employeeStates","iceServers","initializeMedia","targetUser","roomMessage","disconnect","myId","state","Socket","emitStartCall","startCall","updateEmployee","signInWithToken","signInEmployee","credentials","signInOrganization","SignOut","UserStore","SignIn","userValues","Employee","MediaStore","peers","navigator","mediaDevices","getUserMedia","audio","video","then","addPeer","peer","usersInRoom","getRoomUsers","forEach","createPeer","Peer","initiator","trickle","config","endPeerConnection","err","myRoom","destroy","audios","makeAutoObservable","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cf07ab7e.chunk.js","sourcesContent":["import './Dots.css'\r\n\r\nconst Dots = (props) => {\r\n    return (\r\n        <div className={`dots ${props.white && 'white'}`}>\r\n            <div className=\"snippet\" data-title=\".dot-hourglass\">\r\n                <div className=\"stage\">\r\n                    <div className=\"dot-flashing\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dots\r\n","import { useState } from 'react';\r\nimport './Login.css';\r\nimport { rootstore } from '../../index'\r\nimport Dots from '../Office/components/Dots/Dots'\r\nimport { AiOutlineUser, AiOutlineShop } from 'react-icons/ai'\r\n\r\nfunction Login(props) {\r\n    const { userStore, socketStore } = rootstore\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [loginType, setLoginType] = useState('user')\r\n\r\n    const isActive = (tab) => {\r\n        if (tab === 'user' && loginType === 'user') {\r\n            return 'user-active'\r\n        }\r\n        if (tab === 'organization' && loginType === 'organization') {\r\n            return 'organization-active'\r\n        }\r\n        return ''\r\n    }\r\n\r\n    const signIn = async () => {\r\n        if (username === '' || password === '') {\r\n            alert('username and password required')\r\n            return\r\n        }\r\n\r\n        try {\r\n            setLoading(true)\r\n            const response = await userStore.signIn(username, password)\r\n            socketStore.connectToOffice(response.token, response.user.organization)\r\n            props.navigateTo('office')\r\n            setLoading(false)\r\n\r\n        } catch (error) {\r\n            setLoading(false)\r\n            setPassword('')\r\n            alert('could not signin')\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login-title\">\r\n                Sign in to OfficeTalk\r\n            </div>\r\n            <div className=\"login-card block-shadow\">\r\n                <div className=\"login-card-tabs\">\r\n                    <div className={`login-card-tab ${isActive('user')}`} onClick={() => setLoginType('user')}>\r\n                        <AiOutlineUser size={20} />\r\n                        <div className=\"login-tab-text\">User</div>\r\n                    </div>\r\n                    <div className={`login-card-tab ${isActive('organization')}`} onClick={() => setLoginType('organization')}>\r\n                        <AiOutlineShop size={20} />\r\n                        <div className=\"login-tab-text\">Organization</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"login-input-row\">\r\n                    <div className=\"login-input-title\">\r\n                    </div>\r\n                    <input\r\n                        placeholder={'Email'}\r\n                        value={username}\r\n                        onChange={(event) => setUsername(event.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"login-input-row\">\r\n                    <div className=\"login-input-title\">\r\n                    </div>\r\n                    <input\r\n                        placeholder={'Password'}\r\n                        value={password}\r\n                        type={'password'}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"login-input-row\">\r\n                    <div className=\"OTButton\" style={{ background: loginType === 'organization' && '#F74040' }} onClick={() => signIn()}>\r\n                        {loading ?\r\n                            <Dots white />\r\n                            :\r\n                            `Sign in`\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import './Navbar.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport { FiSettings, FiMic, FiVolume2, FiMicOff, FiVolumeX } from 'react-icons/fi'\r\n\r\nconst Navbar = observer((props) => {\r\n    const { userStore, socketStore, officeStore } = rootstore\r\n\r\n    const toggleMic = () => {\r\n        const setTo = !userStore.muted\r\n        userStore.setMuted(setTo)\r\n        socketStore.emitMuted(setTo)\r\n    }\r\n\r\n    const toggleVolume = () => {\r\n        const setTo = !userStore.silenced\r\n        userStore.setSilenced(setTo)\r\n        socketStore.emitSilenced(setTo)\r\n    }\r\n\r\n    const signOut = () => {\r\n        userStore.signOut()\r\n        socketStore.disconnectSocket()\r\n        props.navigateTo('login')\r\n    }\r\n\r\n    const getCurrentRoom = () => {\r\n        const user = officeStore.users.find(user => user.employeeId === userStore.user._id)\r\n        if (!user) {\r\n            return 'loading...'\r\n        }\r\n        const roomId = user.position.room\r\n\r\n        if (roomId === -1) {\r\n            return \"Hallway\"\r\n        } else {\r\n            return officeStore.office.rooms.find(room => room._id === roomId).name\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar block-shadow\">\r\n            <div className=\"navbar-logo\">\r\n                <img className=\"navbar-logo-image\" src={officeStore.organization.logo}>\r\n                </img>\r\n                <div className=\"navbar-office-name\">\r\n                    {officeStore.organization.name}\r\n                </div>\r\n            </div>\r\n            <div className=\"navbar-controls\">\r\n                <div className=\"navbar-controls-border\"></div>\r\n                <div className=\"navbar-room\">\r\n                    <div className=\"navbar-room-name\">{getCurrentRoom()}</div>\r\n                    <div className=\"navbar-room-title\">current room</div>\r\n                </div>\r\n                <div className=\"navbar-voice\" onClick={() => toggleMic()} >\r\n                    {!userStore.muted ?\r\n                        <FiMic size={22} className=\"navbar-voice-microphone\" color={'#1CBF73'} />\r\n                        :\r\n                        <FiMicOff size={22} className=\"navbar-voice-microphone\" color={'#F74040'} />\r\n                    }\r\n                    <div className=\"navbar-room-title\">microphone</div>\r\n                </div>\r\n                <div className=\"navbar-voice\" onClick={() => toggleVolume()}>\r\n                    {!userStore.silenced ?\r\n                        <FiVolume2 size={22} className=\"navbar-voice-volume\" color={'#1CBF73'} />\r\n                        :\r\n                        <FiVolumeX size={22} className=\"navbar-voice-volume\" color={'#F74040'} />\r\n                    }\r\n                    <div className=\"navbar-room-title\">volume</div>\r\n                </div>\r\n                <div className=\"navbar-settings\" onClick={() => props.setShowSettings(true)}>\r\n                    <FiSettings size={22} className=\"navbar-settings-cog\" color={'#404145'} />\r\n                    <div className=\"navbar-room-title\">settings</div>\r\n                </div>\r\n                <div className=\"navbar-controls-border\"></div>\r\n            </div>\r\n            <div className=\"navbar-user\">\r\n                {userStore.user.name}\r\n                <div className=\"navbar-user-avatar\" style={{ backgroundImage: `url(${userStore.user.avatar})` }}>\r\n                </div>\r\n                <div className=\"navbar-sign-out\" onClick={() => signOut()}>\r\n                    Sign out\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Navbar","import './Message.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../../index'\r\n\r\nconst Message = observer((props) => {\r\n    const userStore = rootstore.userStore\r\n\r\n    const myMessage = () => {\r\n        if (props.message.author._id === userStore.user._id) {\r\n            return ' my-message'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`message ${myMessage()}`}>\r\n            <div className=\"message-buble\">\r\n                <div className=\"message-author\">\r\n                    {props.message.author.name}\r\n                </div>\r\n                <div className=\"message-content\">\r\n                    {props.message.content}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Message","import { useState } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './Chat.css';\r\nimport Message from './Message/Message'\r\nimport { rootstore } from '../../../../index'\r\nimport Dots from '../Dots/Dots'\r\nimport { AiOutlineSend, AiOutlineInfoCircle } from 'react-icons/ai'\r\n\r\nconst Chat = observer((props) => {\r\n    const [message, setMessage] = useState('')\r\n    const [sending, setSending] = useState(false)\r\n    const [activeChat, setActiveChat] = useState('office')\r\n    const { officeStore, userStore } = rootstore\r\n\r\n    const sendMessage = async () => {\r\n        setSending(true)\r\n        const response = await officeStore.sendMessage(message)\r\n        setSending(false)\r\n        setMessage('')\r\n        if (!response) {\r\n            window.alert('sending message failed')\r\n        }\r\n    }\r\n\r\n    const sendRoomMessage = () => {\r\n        setSending(true)\r\n        officeStore.sendRoomMessage(message)\r\n        setSending(false)\r\n        setMessage('')\r\n    }\r\n\r\n    const getCurrentRoom = () => {\r\n        const user = officeStore.users.find(user => user.employeeId === userStore.user._id)\r\n        if (!user) {\r\n            return 'loading...'\r\n        }\r\n        const roomId = user.position.room\r\n\r\n        if (roomId === -1) {\r\n            return \"Hallway\"\r\n        } else {\r\n            return officeStore.office.rooms.find(room => room._id === roomId).name\r\n        }\r\n    }\r\n\r\n    const messagesToDisplay = () => {\r\n        return activeChat === 'office' ? officeStore.office.messages : officeStore.roomMessages\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat block-shadow\">\r\n            <div className=\"chat-tabs block-shadow\">\r\n                <div className={`chat-tab ${activeChat === 'office' && 'chat-tab-active'}`} onClick={() => setActiveChat('office')}>Office</div>\r\n                <div className={`chat-tab ${activeChat === 'room' && 'chat-tab-active'}`} onClick={() => setActiveChat('room')}>{getCurrentRoom()}</div>\r\n            </div>\r\n            {activeChat === 'room' &&\r\n                <div className=\"chat-messages-warning\">\r\n                    <AiOutlineInfoCircle style={{marginRight: '5px'}} size={18}/>Message history is not saved in rooms.\r\n            </div>}\r\n            <div className=\"chat-messages\">\r\n                {messagesToDisplay().map((message, key) =>\r\n                    <Message key={key} message={message} />\r\n                )}\r\n            </div>\r\n            <div className=\"chat-controls\">\r\n                <div className=\"chat-input-container\">\r\n                    <input\r\n                        value={message}\r\n                        placeholder={'Say something'}\r\n                        onChange={(event) => setMessage(event.target.value)}\r\n                    />\r\n                    <div className=\"chat-send\" onClick={activeChat === 'office' ? sendMessage : sendRoomMessage}>\r\n                        {sending ?\r\n                            <Dots />\r\n                            :\r\n                            <AiOutlineSend size={30} />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Chat","import { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../..'\r\nimport './Room.css'\r\n\r\nconst Room = observer((props) => {\r\n    const { socketStore } = rootstore\r\n\r\n    const move = (event) => {\r\n        const rooms = document.getElementById('rooms').getBoundingClientRect()\r\n        const position = {\r\n            room: props.room._id,\r\n            coordinates: {\r\n                x: event.clientX - rooms.left,\r\n                y: event.clientY - rooms.top\r\n            }\r\n        }\r\n        socketStore.emitPosition(position)\r\n    }\r\n\r\n    return (\r\n        <div className={`room ${props.first && 'first-block'} ${props.last && 'last-block'} ${props.bottomRoom && 'bottom-room'}`} id={`room${props.room._id}`}>\r\n            <div className=\"room-top\">\r\n                {props.room.name}\r\n            </div>\r\n            <div className=\"room-content\" onDoubleClick={(event) => move(event)}>\r\n            </div>\r\n            <div className=\"room-bottom\">\r\n                <div className=\"room-door\" id={`door${props.room._id}`}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Room;","import './Hallway.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../..'\r\n\r\nconst Hallway = observer((props) => {\r\n    const { socketStore } = rootstore\r\n\r\n    const move = (event) => {\r\n        const rooms = document.getElementById('rooms').getBoundingClientRect()\r\n        const position = {\r\n            room: -1,\r\n            coordinates: {\r\n                x: event.clientX - rooms.left,\r\n                y: event.clientY - rooms.top\r\n            }\r\n        }\r\n        socketStore.emitPosition(position)\r\n    }\r\n    return (\r\n        <div className={`hallway ${props.first && 'first-block'} ${props.last && 'last-block'}`} onDoubleClick={(e) => move(e)}>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Hallway","import './Avatar.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport { FiMicOff, FiVolumeX } from 'react-icons/fi'\r\n\r\n\r\nconst Avatar = observer((props) => {\r\n    const officeStore = rootstore.officeStore\r\n    const userStore = rootstore.userStore\r\n\r\n    const getUserAvatar = () => {\r\n        const user = officeStore.organization.employees.find(empl => empl._id === props.user.employeeId)\r\n        if (!user) {\r\n            return 'laoding...'\r\n        } else {\r\n            return user.avatar\r\n        }\r\n    }\r\n\r\n    const getIcon = () => {\r\n        if(props.user.silenced) {\r\n            return <FiVolumeX size={22} className=\"avatar-voice-volume\" color={'#F74040'} />\r\n        }else if (props.user.muted) {\r\n            return <FiMicOff size={22} className=\"avatar-voice-microphone\" color={'#F74040'} />\r\n        }else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const employeeInfo = officeStore.organization.employees.find(empl => empl._id === props.user.employeeId)\r\n\r\n    return (\r\n        <div className=\"avatar\" style={{\r\n            top: props.user.position.coordinates.y,\r\n            left: props.user.position.coordinates.x,\r\n            transition: `all ${props.user.transitionTime}s linear`,\r\n            border: `${props.user.employeeId === userStore.user._id ? '2' : '1'}px solid ${props.user.employeeId === userStore.user._id ? '#1CBF73' : 'black'}`,\r\n            backgroundImage: `url(${getUserAvatar()})`\r\n        }}>\r\n            <div className=\"avatar-shadow\" style={{backgroundColor: getIcon() ? '#00000041': 'transparent'}}>\r\n            {getIcon()}\r\n            </div>\r\n            <div className=\"avatar-info\">\r\n                <div className=\"avatar-info-name\">\r\n                    {employeeInfo.name}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Avatar","import './Furniture.css'\r\nimport { observer } from 'mobx-react'\r\n\r\nconst Furniture = observer((props) => {\r\n\r\n    return (\r\n        <div className={`furniture ${props.furniture.type}`} style={{\r\n            top: props.furniture.position.y,\r\n            left: props.furniture.position.x,\r\n            height: props.furniture.height,\r\n            width: props.furniture.width\r\n        }}>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Furniture","import './Rooms.css'\r\nimport { observer, } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport Room from './Room/Room'\r\nimport Hallway from './Hallway/Hallway'\r\nimport Avatar from '../Avatar/Avatar'\r\nimport Furniture from '../Furniture/Furniture'\r\n\r\nconst Rooms = observer(() => {\r\n    const officeStore = rootstore.officeStore\r\n    const roomsCount = officeStore.office.rooms.length\r\n\r\n    return (\r\n        <div className=\"rooms\" id=\"rooms\">\r\n            <div className=\"rooms-row\">\r\n                {officeStore.office.rooms.map((room, index) => {\r\n                    if (index % 2 === 0) {\r\n                        return (\r\n                            <Room\r\n                                room={room}\r\n                                first={index === 0}\r\n                            />\r\n                        )\r\n                    } return null\r\n                })}\r\n            </div>\r\n            <Hallway/>\r\n            <div className=\"rooms-row\">\r\n                {officeStore.office.rooms.map((room, index) => {\r\n                    if (index % 2 === 1) {\r\n                        return (\r\n                            <Room\r\n                                room={room}\r\n                                bottomRoom\r\n                                first={index === 1}\r\n                            />\r\n\r\n                        )\r\n                    } else return null\r\n                })}\r\n                {roomsCount % 2 === 1 &&\r\n                    <div className=\"room-block-empty\"></div>\r\n                }\r\n            </div>\r\n            <div className=\"furniture-layer\">\r\n                {officeStore.furnitures.map(furniture => <Furniture key={furniture.furnitureId} furniture={furniture} />)}\r\n            </div>\r\n            <div className=\"user-layer\">\r\n                {officeStore.users.map(user => <Avatar key={user.employeeId} user={user} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Rooms","import Dots from '../Dots/Dots';\r\nimport './Loading.css';\r\n\r\nconst Loading = (props) => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <div className=\"loading-text\">Loading Office</div>\r\n            <Dots />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import './CoWorkers.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport { FiChevronsRight } from 'react-icons/fi'\r\n\r\n\r\nconst CoWorkers = observer((props) => {\r\n    const officeStore = rootstore.officeStore\r\n\r\n    const isOnline = (employee) => {\r\n        return officeStore.users.find(user => user.employeeId === employee._id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"coworkers block-shadow\" style={{ right: props.show ? '0px' : '-250px' }}>\r\n            <div className=\"coworkers-header\">\r\n                Co-workers\r\n            </div>\r\n            <div className=\"coworkers-header-back\" onClick={() => props.close()}>\r\n                <FiChevronsRight size={25} />\r\n            </div>\r\n            <div className=\"coworkers-names\">\r\n                {officeStore.organization.employees.map(employee => {\r\n                    return (\r\n                        <div className=\"coworkers-user\">\r\n                            <div className=\"coworkers-user-avatar\" style={{backgroundImage: `url(${employee.avatar})`}}></div>\r\n                            <div className={`coworkers-user-name ${isOnline(employee) && 'user-online'}`}> {employee.name} </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default CoWorkers;","import './Settings.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport { FiX } from 'react-icons/fi'\r\nimport { useEffect, useState } from 'react'\r\nimport Dots from '../Dots/Dots'\r\n\r\nconst Settings = observer((props) => {\r\n    const userStore = rootstore.userStore\r\n    const officeStore = rootstore.officeStore\r\n    const [background, setBackground] = useState('transparent')\r\n    const [unsaved, setUnsaved] = useState(false)\r\n    const [user, setUser] = useState(JSON.parse(JSON.stringify(userStore.user)))\r\n    const [saveing, setSaveing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setBackground('rgba(64, 65, 69, 0.5)')\r\n    }, [])\r\n\r\n    const changeValue = (property, event) => {\r\n        if (!unsaved) {\r\n            setUnsaved(true)\r\n        }\r\n        setUser({ ...user, [property]: event.target.value })\r\n    }\r\n\r\n    const save = async () => {\r\n        if (!unsaved) return\r\n\r\n        setSaveing(true)\r\n        const response = await userStore.updateUser(user)\r\n        setSaveing(false)\r\n\r\n        if (response) {\r\n            setUnsaved(false)\r\n        } else {\r\n            alert('could not save user')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings-background\" style={{ background: background }}>\r\n            <div className=\"settings-modal block-shadow\">\r\n                <div className=\"settings-top-row\">\r\n                    <FiX size={25} style={{ margin: '10px', cursor: 'pointer' }} color={'#404145'} onClick={() => props.setShowSettings(false)} />\r\n                </div>\r\n                <div className=\"settings-content\">\r\n                    <div className=\"settings-content-row\">\r\n                        <div className=\"settings-avatar\" style={{ backgroundImage: `url(${user.avatar})` }}></div>\r\n                    </div>\r\n                    <div className=\"settings-content-row\">\r\n                        <div className=\"settings-input-row\">\r\n                            <div className=\"settings-input-label\">Avatar url</div>\r\n                            <input\r\n                                value={user.avatar}\r\n                                onChange={(event) => changeValue('avatar', event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"settings-content-row\">\r\n                        <div className=\"settings-input-row\">\r\n                            <div className=\"settings-input-label\">Name</div>\r\n                            <input\r\n                                value={user.name}\r\n                                onChange={(event) => changeValue('name', event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"settings-bottom-row\">\r\n                    <div className={`settings-save-button ${unsaved && 'unsaved-changes'}`} onClick={() => save()}>\r\n                        {saveing ?\r\n                            <Dots white />\r\n                            :\r\n                            'Save'\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Settings","import { useEffect, useState } from 'react'\r\nimport './Office.css'\r\nimport { observer } from 'mobx-react'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Chat from './components/Chat/Chat'\r\nimport Rooms from './components/rooms/Rooms'\r\nimport { rootstore } from '../../index'\r\nimport Loading from './components/Loading/Loading'\r\nimport CoWorkers from './components/CoWorkers/CoWorkers'\r\nimport Settings from './components/Settings/Settings'\r\nimport { FiUsers } from 'react-icons/fi'\r\nimport Player from 'react-player'\r\n\r\nconst Office = observer((props) => {\r\n    const { officeStore, userStore, mediaStore } = rootstore\r\n    const [showCoWorkers, setShowCoWorkers] = useState(false)\r\n    const [showSettings, setShowSettings] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const fetchOrganization = async () => {\r\n            await officeStore.fetchOffice(userStore.user.organization)\r\n        }\r\n        fetchOrganization()\r\n    }, [officeStore, userStore])\r\n\r\n    if (!officeStore.office) {\r\n        return <Loading />\r\n    }\r\n\r\n    return (\r\n        <div className=\"office\">\r\n            <Navbar\r\n                navigateTo={props.navigateTo}\r\n                setShowSettings={setShowSettings}\r\n            />\r\n            <div className=\"office-body\">\r\n                <Chat />\r\n                <div className=\"office-body-scrollable\">\r\n                    <Rooms />\r\n                </div>\r\n            </div>\r\n            <div className=\"office-toggle-coworkers\" onClick={() => setShowCoWorkers(!showCoWorkers)}>\r\n                <FiUsers style={{ marginRight: '3px' }} size={18} />\r\n                {`Co-workers (${officeStore.organization.employees.length})`}\r\n            </div>\r\n            <CoWorkers show={showCoWorkers} close={() => setShowCoWorkers(false)} />\r\n            {showSettings && <Settings setShowSettings={setShowSettings} />}\r\n            {mediaStore.peerAudios.map(peerAudio =>\r\n                <Player \r\n                playsInline \r\n                url={peerAudio.stream} \r\n                playing={true} \r\n                style={{ height: '0px' }} \r\n                height={'0px'} \r\n                width={'0px'} \r\n                volume={userStore.silenced ? 0 : 1}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Office","import { useEffect, useState } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from './index'\r\nimport Login from './Views/Login/Login'\r\nimport Office from './Views/Office/Office'\r\nimport './App.css'\r\n\r\nconst App = observer(() => {\r\n  const userStore = rootstore.userStore\r\n  const socketStore = rootstore.socketStore\r\n  const [page, setPage] = useState('login')\r\n\r\n  useEffect(() => {\r\n    const checkLogin = async () => {\r\n      const response = await userStore.checkSignIn()\r\n      response.user && setPage('office')\r\n      socketStore.connectToOffice(response.token, response.user.organization)\r\n    }\r\n\r\n    checkLogin()\r\n  }, [userStore, socketStore])\r\n\r\n  const renderPage = () => {\r\n    switch (page) {\r\n      case 'login':\r\n        return <Login navigateTo={setPage} />\r\n      case 'office':\r\n        return <Office navigateTo={setPage} />\r\n      case 'controlPanel':\r\n        return <Login navigateTo={setPage} />\r\n      default:\r\n        return <Login navigateTo={setPage} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {renderPage()}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default App;\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/organizations'\r\n\r\nconst getOrganization = async (id) => {\r\n    const response = await axios.get(`${baseUrl}/${id}`)\r\n    return response.data\r\n}\r\n\r\nconst services = { getOrganization }\r\nexport default services","import axios from 'axios'\r\nconst baseUrl = '/api/messages'\r\n\r\nconst sendOfficeMessage = async (content) => {\r\n    const response = await axios.post(`${baseUrl}`, content)\r\n    return response.data\r\n}\r\n\r\nconst services = { sendOfficeMessage }\r\nexport default services","import { makeObservable, observable, action, runInAction } from 'mobx'\r\nimport Organization from '../Services/Organization'\r\nimport Message from '../Services/Message'\r\n\r\nclass OfficeStore {\r\n    rootStore = null\r\n    office = null\r\n    organization = null\r\n    roomMessages = []\r\n\r\n    users = []\r\n\r\n    furnitures = [\r\n        {\r\n            type: 'meeting-table',\r\n            height: '150px',\r\n            width: '85px',\r\n            position: {x: 108, y: 85},\r\n            direction: 'right'\r\n        },\r\n        {\r\n            type: 'meeting-chair',\r\n            height: '45px',\r\n            width: '45px',\r\n            position: {x: 198, y: 168},\r\n            direction: 'right'\r\n        },\r\n        {\r\n            type: 'meeting-chair',\r\n            height: '45px',\r\n            width: '45px',\r\n            position: {x: 198, y: 103},\r\n            direction: 'right'\r\n        },\r\n        {\r\n            type: 'meeting-chair',\r\n            height: '45px',\r\n            width: '45px',\r\n            position: {x: 58, y: 168},\r\n            direction: 'right'\r\n        },\r\n        {\r\n            type: 'meeting-chair',\r\n            height: '45px',\r\n            width: '45px',\r\n            position: {x: 58, y: 103},\r\n            direction: 'right'\r\n        },\r\n    ]\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n        makeObservable(this, {\r\n            rootStore: observable,\r\n            office: observable,\r\n            organization: observable,\r\n            users: observable,\r\n            roomMessages: observable,\r\n            furnitures: observable,\r\n            receiveMessage: action,\r\n            changePosition: action,\r\n            sendMessage: action,\r\n            fetchOffice: action,\r\n            setEmployeeStates: action,\r\n            addEmployeeState: action,\r\n            removeEmployeeState: action,\r\n            receiveRoomMessage: action,\r\n            sendRoomMessage: action,\r\n            clearRoomChat: action\r\n        })\r\n    }\r\n\r\n    fetchOffice = async (id) => {\r\n        const organization = await Organization.getOrganization(id)\r\n\r\n        runInAction(() => {\r\n            this.organization = organization\r\n        })\r\n\r\n        runInAction(() => {\r\n            this.office = organization.office\r\n        })\r\n\r\n        console.log('current organization:', this.organization)\r\n        return organization\r\n    }\r\n\r\n    setEmployeeStates = (employees) => {\r\n        runInAction(() => {\r\n            this.users = employees\r\n        })\r\n    }\r\n\r\n    addEmployeeState = (employeeState) => {\r\n        this.users = this.users.concat(employeeState)\r\n    }\r\n\r\n    removeEmployeeState = (employeeState) => {\r\n        this.users = this.users.filter(user => user.employeeId !== employeeState.employeeId)\r\n    }\r\n\r\n    sendRoomMessage = (content) => {\r\n        this.rootStore.socketStore.emitRoomMessage(content)\r\n    }\r\n\r\n    sendMessage = async (content) => {\r\n        try {\r\n            const response = await Message.sendOfficeMessage({ content: content })\r\n            if (response) {\r\n                if (!this.office.messages.find(msg => msg._id === response._id)) {\r\n                    let officeClone = JSON.parse(JSON.stringify(this.office))\r\n                    officeClone.messages.unshift(response)\r\n                    runInAction(() => {\r\n                        this.office = officeClone\r\n                    })\r\n                }\r\n                return response\r\n            }\r\n        } catch {\r\n            return null\r\n        }\r\n    }\r\n\r\n    receiveMessage = (message) => {\r\n        if (!this.office.messages.find(msg => msg._id === message._id)) {\r\n            const officeClone = JSON.parse(JSON.stringify(this.office))\r\n            officeClone.messages.unshift(message)\r\n            runInAction(() => {\r\n                this.office = officeClone\r\n            })\r\n        }\r\n    }\r\n\r\n    muteEmployee = (id, value) => {\r\n        let usersClone = JSON.parse(JSON.stringify(this.users))\r\n        usersClone.find(user => user.employeeId === id).muted = value\r\n        runInAction(() => {\r\n            this.users = usersClone\r\n        })\r\n    }\r\n\r\n    silenceEmployee = (id, value) => {\r\n        let usersClone = JSON.parse(JSON.stringify(this.users))\r\n        usersClone.find(user => user.employeeId === id).silenced = value\r\n        runInAction(() => {\r\n            this.users = usersClone\r\n        })\r\n    }\r\n\r\n    changePosition = (id, position, transitionTime) => {\r\n        let usersClone = JSON.parse(JSON.stringify(this.users))\r\n        usersClone.find(user => user.employeeId === id).position = position\r\n        usersClone.find(user => user.employeeId === id).transitionTime = transitionTime\r\n        runInAction(() => {\r\n            this.users = usersClone\r\n        })\r\n    }\r\n\r\n    receiveRoomMessage = (message) => {\r\n        if (!this.roomMessages.find(msg => msg._id === message._id)) {\r\n            runInAction(() => {\r\n                this.roomMessages = [message].concat(this.roomMessages)\r\n            })\r\n        }\r\n    }\r\n\r\n    clearRoomChat = () => {\r\n        runInAction(() => {\r\n            this.roomMessages = []\r\n        })\r\n    }\r\n}\r\n\r\nexport default OfficeStore","import { rootstore } from '../index'\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nconst move = async (X, Y, roomId, employeeId) => {\r\n    const user = rootstore.officeStore.users.find(user => user.employeeId === employeeId)\r\n\r\n    if (roomId !== user.position.room) {\r\n        if (roomId === -1) {\r\n            await roomToHall(user, X, Y, roomId, employeeId)\r\n        } else if (user.position.room === -1) {\r\n            await hallToRoom(user, X, Y, roomId, employeeId)\r\n        } else {\r\n            await roomToRoom(user, X, Y, roomId)\r\n        }\r\n    } else {\r\n        await moveInsideRoom(employeeId, X, Y, roomId)\r\n    }\r\n}\r\n\r\nconst roomToHall = async (user, X, Y, roomId, employeeId) => {\r\n    const duration = moveToDoor(employeeId, user.position.room)\r\n    await delay(duration * 1000)\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.mediaStore.endAllConnections()\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.officeStore.clearRoomChat()\r\n    moveInsideRoom(employeeId, X, Y, roomId)\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.mediaStore.connectToPeers()\r\n}\r\n\r\nconst hallToRoom = async (user, X, Y, roomId) => {\r\n    const duration = moveToDoor(user.employeeId, roomId)\r\n    await delay(duration * 1000)\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.mediaStore.endAllConnections()\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.officeStore.clearRoomChat()\r\n    moveInsideRoom(user.employeeId, X, Y, roomId)\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.mediaStore.connectToPeers()\r\n}\r\n\r\nconst roomToRoom = async (user, X, Y, roomId) => {\r\n    const duration = moveToDoor(user.employeeId, user.position.room)\r\n    await delay(duration * 1000)\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.mediaStore.endAllConnections()\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.officeStore.clearRoomChat()\r\n    const duration2 = moveToDoor(user.employeeId, roomId)\r\n    await delay(duration2 * 1000)\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.officeStore.clearRoomChat()\r\n    moveInsideRoom(user.employeeId, X, Y, roomId)\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.mediaStore.connectToPeers()\r\n}\r\n\r\nconst moveInsideRoom = (employeeId, X, Y, roomId ) => {\r\n    const user = rootstore.officeStore.users.find(user => user.employeeId === employeeId)\r\n    const positionX = X \r\n    const positionY = Y \r\n    const transitionTime = calcTravelTime(user.position.coordinates.x, user.position.coordinates.y, positionX, positionY)\r\n    rootstore.officeStore.changePosition(employeeId, { room: roomId, coordinates: { x: positionX, y: positionY } }, transitionTime)\r\n    return transitionTime\r\n}\r\n\r\nconst moveToDoor = (employeeId, targetRoom) => {\r\n    const user = rootstore.officeStore.users.find(user => user.employeeId === employeeId)\r\n    const doorElement = document.getElementById(`door${targetRoom}`)\r\n\r\n    const doorX = doorElement.offsetLeft + 30\r\n    const doorY = doorElement.offsetTop\r\n    const transitionTime = calcTravelTime(user.position.coordinates.x, user.position.coordinates.y, doorX, doorY)\r\n    rootstore.officeStore.changePosition(employeeId, { room: user.position.room, coordinates: { x: doorX, y: doorY } }, transitionTime)\r\n    return transitionTime\r\n}\r\n\r\nconst calcTravelTime = (oldX, oldY, newX, newY) => {\r\n    const travelX = Math.abs(oldX - newX)\r\n    const travelY = Math.abs(oldY - newY)\r\n    const TravelLength = Math.hypot(travelX, travelY)\r\n    return TravelLength * 0.01\r\n}\r\n\r\nexport default move","import axios from 'axios'\r\nconst baseUrl = '/api/sockets'\r\n\r\nconst updateState = async (employeeState) => {\r\n    const response = await axios.put(`${baseUrl}/employeeState`, employeeState)\r\n    return response.data\r\n}\r\n\r\nconst addRoomMessage = async (content) => {\r\n    const response = await axios.post(`${baseUrl}/roomMessage`, content)\r\n    return response.data\r\n}\r\n\r\nconst sendSignal = async (employeeId, signal) => {\r\n    const response = await axios.post(`${baseUrl}/sendSignal`, { employeeId, signal })\r\n    return response.data\r\n}\r\n\r\nconst returnSignal = async (employeeId, signal) => {\r\n    const response = await axios.post(`${baseUrl}/returnSignal`, { employeeId, signal })\r\n    return response.data\r\n}\r\n\r\nconst services = { updateState, addRoomMessage, sendSignal, returnSignal }\r\nexport default services","import { makeObservable, observable, action } from 'mobx'\r\nimport { io } from 'socket.io-client'\r\nimport { rootstore } from '..'\r\nimport move from '../Hooks/Mover'\r\nimport Socket from '../Services/Socket'\r\n\r\nclass SocketStore {\r\n    rootStore = null\r\n    socket = null\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n        makeObservable(this, {\r\n            rootStore: observable,\r\n            socket: observable,\r\n            connectToOffice: action,\r\n            disconnectSocket: action,\r\n            emitPosition: action,\r\n            emitMuted: action,\r\n            emitSilenced: action\r\n        })\r\n    }\r\n\r\n    connectToOffice = (token, organization) => {\r\n        this.socket = io.connect(`/`, {\r\n            auth: {\r\n                token\r\n            }\r\n        })\r\n\r\n        this.socket.on('message', (message) => {\r\n            this.rootStore.officeStore.receiveMessage(message)\r\n        })\r\n\r\n        this.socket.on('initialData', ({ employeeStates, iceServers }) => {\r\n            this.rootStore.officeStore.setEmployeeStates(employeeStates)\r\n            this.rootStore.mediaStore.initializeMedia(iceServers)\r\n        })\r\n\r\n        this.socket.on('addEmployeeState', (employeeState) => {\r\n            this.rootStore.officeStore.addEmployeeState(employeeState)\r\n        })\r\n\r\n        this.socket.on('removeEmployeeState', (employeeState) => {\r\n            this.rootStore.officeStore.removeEmployeeState(employeeState)\r\n        })\r\n\r\n        this.socket.on('updateEmployeeState', (employeeState) => {\r\n            const targetUser = rootstore.officeStore.users.find(user => user.employeeId === employeeState.employeeId)\r\n            if (targetUser.muted !== employeeState.muted) {\r\n                rootstore.officeStore.muteEmployee(employeeState.employeeId, employeeState.muted)\r\n            }\r\n            if (targetUser.silenced !== employeeState.silenced) {\r\n                rootstore.officeStore.silenceEmployee(employeeState.employeeId, employeeState.silenced)\r\n            }\r\n            if (targetUser.position !== employeeState.position) {\r\n                move(\r\n                    employeeState.position.coordinates.x,\r\n                    employeeState.position.coordinates.y,\r\n                    employeeState.position.room,\r\n                    employeeState.employeeId\r\n                )\r\n            }\r\n        })\r\n\r\n        this.socket.on('roomMessage', (roomMessage) => {\r\n            this.rootStore.officeStore.receiveRoomMessage(roomMessage)\r\n        })\r\n    }\r\n\r\n    disconnectSocket = () => {\r\n        this.socket.disconnect()\r\n    }\r\n\r\n    emitPosition = (position) => {\r\n        const myId = rootstore.userStore.user._id\r\n        const state = JSON.parse(JSON.stringify(this.rootStore.officeStore.users.find(user => user.employeeId === myId)))\r\n        Socket.updateState({ ...state, position: position })\r\n    }\r\n\r\n    emitMuted = (muted) => {\r\n        const myId = rootstore.userStore.user._id\r\n        const state = JSON.parse(JSON.stringify(this.rootStore.officeStore.users.find(user => user.employeeId === myId)))\r\n        Socket.updateState({ ...state, muted })\r\n    }\r\n\r\n    emitSilenced = (silenced) => {\r\n        const myId = rootstore.userStore.user._id\r\n        const state = JSON.parse(JSON.stringify(this.rootStore.officeStore.users.find(user => user.employeeId === myId)))\r\n        Socket.updateState({ ...state, silenced })\r\n    }\r\n\r\n    emitRoomMessage = (content) => {\r\n        Socket.addRoomMessage({ content })\r\n    }\r\n\r\n    emitStartCall = (data) => {\r\n        Socket.startCall(data)\r\n    }\r\n}\r\n\r\nexport default SocketStore","import axios from 'axios'\r\nconst baseUrl = '/api/employees'\r\n\r\nconst updateEmployee = async (employee) => {\r\n    const response = await axios.put(`${baseUrl}/${employee._id}`, employee)\r\n    return response.data\r\n}\r\n\r\nconst services = { updateEmployee }\r\nexport default services","import axios from 'axios'\r\nconst baseUrl = '/api/signin'\r\n\r\nconst signInWithToken = async () => {\r\n    const response = await axios.post(baseUrl)\r\n    return response.data\r\n}\r\n\r\nconst signInEmployee = async (credentials) => {\r\n    const response = await axios.post(`${baseUrl}/employee`, credentials)\r\n    return response.data\r\n}\r\n\r\nconst signInOrganization = async (credentials) => {\r\n    const response = await axios.post(`${baseUrl}/organization`, credentials)\r\n    return response.data\r\n}\r\n\r\nconst SignOut = async () => {\r\n    const response = await axios.post(`${baseUrl}/signout`)\r\n    return response.data\r\n}\r\n\r\nconst services = { signInWithToken, signInEmployee, signInOrganization, SignOut }\r\nexport default services","import { makeObservable, observable, action, runInAction } from 'mobx'\r\nimport Employee from '../Services/Employee'\r\nimport SignIn from '../Services/SignIn'\r\n\r\n\r\nclass UserStore {\r\n    rootStore = null\r\n    user = null\r\n    muted = false\r\n    silenced = false\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n        makeObservable(this, {\r\n            rootStore: observable,\r\n            user: observable,\r\n            muted: observable,\r\n            silenced: observable,\r\n            signIn: action,\r\n            checkSignIn: action,\r\n            signOut: action,\r\n            updateUser: action,\r\n            setMuted: action,\r\n            setSilenced: action\r\n        })\r\n    }\r\n\r\n    signIn = async (username, password) => {\r\n        const response = await SignIn.signInEmployee({ username, password })\r\n        this.user = response.user\r\n        console.log('current user:', this.user)\r\n        return response\r\n    }\r\n\r\n    checkSignIn = async () => {\r\n        const response = await SignIn.signInWithToken()\r\n        runInAction(() => {\r\n            this.user = response.user\r\n        })\r\n        return response\r\n    }\r\n\r\n    signOut = async () => {\r\n        await SignIn.SignOut()\r\n        this.rootStore.mediaStore.endAllConnections()\r\n        runInAction(() => {\r\n            this.user = null\r\n        })\r\n    }\r\n\r\n    updateUser = async (userValues) => {\r\n        try {\r\n            const response = await Employee.updateEmployee(userValues)\r\n            this.user = response\r\n            return response\r\n        } catch {\r\n            return null\r\n        }\r\n    }\r\n\r\n    setMuted = (value) => {\r\n        this.muted = value\r\n    }\r\n\r\n    setSilenced = (value) => {\r\n        this.silenced = value\r\n    }\r\n}\r\n\r\nexport default UserStore;","import { makeObservable, observable, action, runInAction } from 'mobx'\r\nimport Peer from 'simple-peer'\r\nimport socket from '../Services/Socket'\r\n\r\nclass MediaStore {\r\n    rootStore = null\r\n    stream = null\r\n    peers = []\r\n    peerAudios = []\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n        makeObservable(this, {\r\n            rootStore: observable,\r\n            stream: observable,\r\n            peerAudios: observable,\r\n            peers: observable,\r\n            connectToPeers: action,\r\n            endAllConnections: action,\r\n            initializeMedia: action\r\n        })\r\n    }\r\n\r\n\r\n    initializeMedia = async (iceServers) => {\r\n        await navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(stream => {\r\n            this.stream = stream\r\n\r\n            this.connectToPeers()\r\n\r\n            this.rootStore.socketStore.socket.on('sendSignal', ({ signal, employeeId }) => {\r\n                console.log('sendSignal received')\r\n                this.addPeer(signal, employeeId, iceServers)\r\n            })\r\n\r\n            this.rootStore.socketStore.socket.on('returnSignal', ({ signal, employeeId }) => {\r\n                console.log('returnSignal received')\r\n                const peer = this.peers.find(peer => peer.employeeId === employeeId)\r\n                if (peer) {\r\n                    peer.peer.signal(signal)\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    connectToPeers = async (iceServers) => {\r\n        const usersInRoom = this.getRoomUsers()\r\n\r\n        console.log('The users in the room: ')\r\n        usersInRoom.forEach(user => {\r\n            console.log(user.employeeId)\r\n        })\r\n\r\n        if (usersInRoom.length > 1) {\r\n            usersInRoom.forEach(employee => {\r\n                if (employee.employeeId !== this.rootStore.userStore.user._id) {\r\n                    console.log('createPeer')\r\n                    this.createPeer(employee.employeeId, iceServers)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    addPeer = (signal, employeeId, iceServers) => {\r\n        const peer = new Peer({ initiator: false, trickle: false, stream: this.stream, config: { iceServers } })\r\n        peer.signal(signal)\r\n\r\n        peer.on('signal', signal => {\r\n            console.log('returnSignal sent')\r\n            socket.returnSignal(employeeId, signal)\r\n        })\r\n\r\n        peer.on('stream', stream => {\r\n            console.log('stream received')\r\n            runInAction(() => {\r\n                this.peerAudios = [...this.peerAudios, { stream: stream, employeeId: employeeId }]\r\n            })\r\n        })\r\n\r\n        peer.on('close', () => {\r\n            console.log('connection closed')\r\n            this.endPeerConnection(employeeId)\r\n        })\r\n\r\n        peer.on('error', (err) => {\r\n            console.log('Peer error: ', err)\r\n        })\r\n\r\n        runInAction(() => {\r\n            this.peers = [...this.peers, { peer: peer, employeeId: employeeId }]\r\n        })\r\n    }\r\n\r\n    createPeer = (employeeId, iceServers) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream: this.stream, config: { iceServers } })\r\n\r\n        peer.on('signal', signal => {\r\n            console.log('sendSignal sent')\r\n            socket.sendSignal(employeeId, signal)\r\n        })\r\n\r\n        peer.on('stream', stream => {\r\n            console.log('stream received')\r\n            runInAction(() => {\r\n                this.peerAudios = [...this.peerAudios, { stream: stream, employeeId: employeeId }]\r\n            })\r\n        })\r\n\r\n        peer.on('close', () => {\r\n            console.log('connection closed')\r\n            this.endPeerConnection(employeeId)\r\n        })\r\n\r\n        peer.on('error', (err) => {\r\n            console.log('Peer error: ', err)\r\n        })\r\n\r\n        runInAction(() => {\r\n            this.peers = [...this.peers, { peer: peer, employeeId: employeeId }]\r\n        })\r\n    }\r\n\r\n    getRoomUsers = () => {\r\n        const myId = this.rootStore.userStore.user._id\r\n        const myState = this.rootStore.officeStore.users.find(user => user.employeeId === myId)\r\n        const myRoom = myState.position.room\r\n        const roomUsers = this.rootStore.officeStore.users.filter(user => user.position.room === myRoom)\r\n        return roomUsers\r\n    }\r\n\r\n    endAllConnections = () => {\r\n        console.log('ending all connections')\r\n        this.peers.forEach(peer => peer.peer.destroy())\r\n        runInAction(() => {\r\n            this.peers = []\r\n            this.peerAudios = []\r\n        })\r\n    }\r\n\r\n    endPeerConnection = (employeeId) => {\r\n        const peers = this.peers.filter(user => user.employeeId !== employeeId)\r\n        const audios = this.peerAudios.filter(user => user.employeeId !== employeeId)\r\n\r\n        runInAction(() => {\r\n            this.peers = peers\r\n            this.peerAudios = audios\r\n        })\r\n    }\r\n}\r\n\r\nexport default MediaStore","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport rootStore from './Stores/RootStore'\r\n\r\nexport const rootstore = new rootStore()\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n)","import { makeAutoObservable } from 'mobx'\r\nimport OfficeStore from \"./OfficeStore\"\r\nimport SocketStore from './SocketStore'\r\nimport UserStore from \"./UserStore\"\r\nimport MediaStore from './MediaStore'\r\n\r\nclass RootStore {\r\n    officeStore\r\n    userStore\r\n    socketStore\r\n    mediaStore\r\n\r\n    constructor() {\r\n        this.officeStore = new OfficeStore(this)\r\n        this.userStore = new UserStore(this)\r\n        this.socketStore = new SocketStore(this)\r\n        this.mediaStore = new MediaStore(this)\r\n        makeAutoObservable(this)\r\n    }\r\n}\r\n\r\nexport default RootStore"],"sourceRoot":""}