{"version":3,"sources":["Views/Office/components/Dots/Dots.js","Views/Login/Login.js","Views/Office/components/Navbar/Navbar.js","Views/Office/components/Chat/Message/Message.js","Views/Office/components/Chat/Chat.js","Views/Office/components/rooms/Room/Room.js","Views/Office/components/rooms/Hallway/Hallway.js","Views/Office/components/Avatar/Avatar.js","Views/Office/components/Furniture/Furniture.js","Views/Office/components/rooms/Rooms.js","Views/Office/components/Loading/Loading.js","Views/Office/components/CoWorkers/CoWorkers.js","Views/Office/components/Settings/Slider/Toggler.js","Views/Office/components/Settings/Settings.js","Views/Office/Office.js","Views/ControlPanel/components/Navbar/Navbar.js","Views/ControlPanel/components/Employees/Employees.js","Views/ControlPanel/components/OfficeEditor/Room/RoomModel.js","Views/ControlPanel/components/OfficeEditor/Hallway/HallwayModel.js","Views/ControlPanel/components/OfficeEditor/OfficeEditor.js","Views/ControlPanel/ControlPanel.js","Services/SignIn.js","App.js","Services/Organization.js","Services/Message.js","Stores/OfficeStore.js","Hooks/Mover.js","Services/Socket.js","Stores/SocketStore.js","Services/Employee.js","Stores/UserStore.js","Stores/MediaStore.js","Stores/OrganizationStore.js","index.js","Stores/RootStore.js"],"names":["Dots","props","className","white","data-title","Login","userStore","rootstore","socketStore","organizationStore","useState","username","setUsername","password","setPassword","loading","setLoading","loginType","setLoginType","useEffect","document","addEventListener","handleKey","removeEventListener","event","keyCode","signIn","isActive","tab","a","alert","signInOrganization","signInUser","response","connectToOffice","token","user","organization","navigateTo","console","log","onClick","style","fontSize","color","placeholder","value","onChange","target","type","background","Navbar","observer","officeStore","src","logo","name","users","find","employeeId","_id","roomId","position","room","roomName","rooms","length","slice","getCurrentRoom","setTo","muted","setMuted","emitMuted","toggleMic","size","silenced","setSilenced","emitSilenced","toggleVolume","setShowSettings","backgroundImage","avatar","signOut","disconnectSocket","Message","message","author","myMessage","content","Chat","setMessage","sending","setSending","activeChat","setActiveChat","sendMessage","window","marginRight","messages","roomMessages","map","key","sendRoomMessage","Room","first","last","bottomRoom","id","getElementById","getBoundingClientRect","coordinates","x","clientX","left","y","clientY","top","emitPosition","move","Hallway","e","Avatar","getIcon","employeeInfo","employees","empl","transition","transitionTime","border","getUserAvatar","backgroundColor","Furniture","furniture","height","width","Rooms","roomsCount","index","furnitures","furnitureId","Loading","CoWorkers","isOnline","employee","right","show","close","Toggler","checked","Settings","setBackground","unsaved","setUnsaved","JSON","parse","stringify","setUser","listenForKey","setListenForKey","saveing","setSaveing","registerKey","code","changeValue","property","save","updateUser","margin","cursor","pushToTalk","readOnly","disabled","PTKey","Office","mediaStore","showCoWorkers","setShowCoWorkers","showSettings","PTPressListener","PTActive","PTReleaseListener","PTDeactive","fetchOffice","initializeOffice","peerAudios","peerAudio","playsInline","url","stream","playing","volume","Employees","setName","createEmployee","RoomModel","HallwayModel","OfficeEditor","setOrganization","capacity","addRoom","ControlPanel","baseUrl","services","signInWithToken","axios","post","data","signInEmployee","credentials","SignOut","App","page","setPage","SignIn","checkLogin","renderPage","getOrganization","get","sendOfficeMessage","OfficeStore","rootStore","Organization","runInAction","setEmployeeStates","addEmployeeState","employeeState","concat","removeEmployeeState","filter","emitRoomMessage","msg","officeClone","unshift","receiveMessage","muteEmployee","usersClone","silenceEmployee","changePosition","receiveRoomMessage","clearRoomChat","this","makeObservable","observable","action","delay","ms","Promise","res","setTimeout","X","Y","roomToHall","hallToRoom","roomToRoom","moveInsideRoom","duration","moveToDoor","endAllConnections","connectToPeers","duration2","positionX","positionY","calcTravelTime","targetRoom","doorElement","doorX","offsetLeft","doorY","offsetTop","oldX","oldY","newX","newY","travelX","Math","abs","travelY","hypot","updateState","put","addRoomMessage","sendSignal","signal","returnSignal","SocketStore","socket","io","connect","auth","on","employeeStates","iceServers","initializeMedia","targetUser","roomMessage","disconnect","myId","state","Socket","emitStartCall","startCall","updateEmployee","UserStore","userValues","Employee","removeAudioStreams","addAudioStreams","MediaStore","peers","PTActivated","navigator","mediaDevices","getUserMedia","audio","video","then","addPeer","peer","usersInRoom","getRoomUsers","forEach","createPeer","Peer","initiator","trickle","config","streams","getAudioTracks","enabled","endPeerConnection","err","myRoom","destroy","audios","OrganizationStore","office","makeAutoObservable","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7cfd0aac.chunk.js","sourcesContent":["import './Dots.css'\r\n\r\nconst Dots = (props) => {\r\n    return (\r\n        <div className={`dots ${props.white && 'white'}`}>\r\n            <div className=\"snippet\" data-title=\".dot-hourglass\">\r\n                <div className=\"stage\">\r\n                    <div className=\"dot-flashing\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dots\r\n","import { useEffect, useState } from 'react'\r\nimport './Login.css'\r\nimport { rootstore } from '../../index'\r\nimport Dots from '../Office/components/Dots/Dots'\r\nimport { AiOutlineUser, AiOutlineLock } from 'react-icons/ai'\r\n\r\nfunction Login(props) {\r\n    const { userStore, socketStore, organizationStore } = rootstore\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [loginType, setLoginType] = useState('user')\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKey)\r\n        return () => document.removeEventListener('keydown', handleKey)\r\n    }, [username, password])\r\n\r\n    const handleKey = (event) => {\r\n        if (event.keyCode === 13) {\r\n            signIn()\r\n        }\r\n    }\r\n\r\n    const isActive = (tab) => {\r\n        if (tab === 'user' && loginType === 'user') {\r\n            return 'user-active'\r\n        }\r\n        if (tab === 'organization' && loginType === 'organization') {\r\n            return 'organization-active'\r\n        }\r\n        return ''\r\n    }\r\n\r\n    const signIn = async () => {\r\n        if (username === '' || password === '') {\r\n            alert('username and password required')\r\n            return\r\n        }\r\n\r\n        loginType === 'organization' ? signInOrganization() : signInUser()\r\n    }\r\n\r\n    const signInUser = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const response = await userStore.signIn(username, password)\r\n            socketStore.connectToOffice(response.token, response.user.organization)\r\n            props.navigateTo('office')\r\n            setLoading(false)\r\n\r\n        } catch (error) {\r\n            setLoading(false)\r\n            setPassword('')\r\n            alert('could not signin')\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const signInOrganization = async () => {\r\n        try {\r\n            setLoading(true)\r\n            await organizationStore.signIn(username, password)\r\n            props.navigateTo('controlPanel')\r\n            setLoading(false)\r\n\r\n        } catch (error) {\r\n            setLoading(false)\r\n            setPassword('')\r\n            alert('could not signin')\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login-card block-shadow\">\r\n                <div className=\"login-card-left\">\r\n                </div>\r\n                <div className=\"login-card-right\">\r\n                    <div className=\"login-title\">\r\n                        Sign in to OfficeTalk\r\n                    </div>\r\n                    <div className=\"login-card-tabs\">\r\n                        <div className=\"login-card-tabs-row\">\r\n                            <div className={`login-card-tab ${isActive('user')}`} onClick={() => setLoginType('user')}>\r\n                                <div className=\"login-tab-text\">Employee</div>\r\n                            </div>\r\n                            <div className={`login-card-tab ${isActive('organization')}`} onClick={() => setLoginType('organization')}>\r\n                                <div className=\"login-tab-text\">Organization</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tab-slider-row\">\r\n                            <span className={`tab-slider ${loginType === 'organization' ? 'tab-slider-org' : 'tab-slider-user'}`}></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"login-input-row\">\r\n                        <div className=\"login-input-title\">\r\n                        </div>\r\n                        <div className={`${loginType === 'organization' ? 'login-input-org' : 'login-input'}`}>\r\n                            <AiOutlineUser style={{ fontSize: '22px', color: '#7a7d85' }} />\r\n                            <input\r\n                                placeholder={'Username'}\r\n                                value={username}\r\n                                onChange={(event) => setUsername(event.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"login-input-row\">\r\n                        <div className=\"login-input-title\">\r\n                        </div>\r\n                        <div className={`${loginType === 'organization' ? 'login-input-org' : 'login-input'}`}>\r\n                            <AiOutlineLock style={{ fontSize: '22px', color: '#7a7d85' }} />\r\n                            <input\r\n                                placeholder={'Password'}\r\n                                value={password}\r\n                                type={'password'}\r\n                                onChange={(event) => setPassword(event.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"login-input-row\">\r\n                        <div className=\"OTButton login-button\" style={{ background: loginType === 'organization' && '#0466a3' }} onClick={() => signIn()}>\r\n                            {loading ?\r\n                                <Dots white />\r\n                                :\r\n                                `Sign in`\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import './Navbar.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport { FiSettings, FiMic, FiVolume2, FiMicOff, FiVolumeX } from 'react-icons/fi'\r\n\r\nconst Navbar = observer((props) => {\r\n    const { userStore, socketStore, officeStore } = rootstore\r\n\r\n    const toggleMic = () => {\r\n        const setTo = !userStore.muted\r\n        userStore.setMuted(setTo)\r\n        socketStore.emitMuted(setTo)\r\n    }\r\n\r\n    const toggleVolume = () => {\r\n        const setTo = !userStore.silenced\r\n        userStore.setSilenced(setTo)\r\n        socketStore.emitSilenced(setTo)\r\n    }\r\n\r\n    const signOut = () => {\r\n        userStore.signOut()\r\n        socketStore.disconnectSocket()\r\n        props.navigateTo('login')\r\n    }\r\n\r\n    const getCurrentRoom = () => {\r\n        const user = officeStore.users.find(user => user.employeeId === userStore.user._id)\r\n        if (!user) {\r\n            return 'loading...'\r\n        }\r\n        const roomId = user.position.room\r\n\r\n        if (roomId === -1) {\r\n            return \"Hallway\"\r\n        } else {\r\n            let roomName = officeStore.organization.rooms.find(room => room._id === roomId).name\r\n            if (roomName.length > 20) {\r\n                roomName = roomName.slice(0, 20) + '...'\r\n            }\r\n            return roomName\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar block-shadow\">\r\n            <div className=\"navbar-logo\">\r\n                <img className=\"navbar-logo-image\" src={officeStore.organization.logo}>\r\n                </img>\r\n                <div className=\"navbar-office-name\">\r\n                    {officeStore.organization.name}\r\n                </div>\r\n            </div>\r\n            <div className=\"navbar-controls\">\r\n                <div className=\"navbar-controls-border\"></div>\r\n                <div className=\"navbar-room\">\r\n                    <div className=\"navbar-room-name\">{getCurrentRoom()}</div>\r\n                    <div className=\"navbar-room-title\">current room</div>\r\n                </div>\r\n                <div className=\"navbar-voice\" onClick={() => toggleMic()} >\r\n                    {!userStore.muted ?\r\n                        <FiMic size={22} className=\"navbar-voice-microphone\" color={'#1CBF73'} />\r\n                        :\r\n                        <FiMicOff size={22} className=\"navbar-voice-microphone\" color={'#F74040'} />\r\n                    }\r\n                    <div className=\"navbar-room-title\">microphone</div>\r\n                </div>\r\n                <div className=\"navbar-voice\" onClick={() => toggleVolume()}>\r\n                    {!userStore.silenced ?\r\n                        <FiVolume2 size={22} className=\"navbar-voice-volume\" color={'#1CBF73'} />\r\n                        :\r\n                        <FiVolumeX size={22} className=\"navbar-voice-volume\" color={'#F74040'} />\r\n                    }\r\n                    <div className=\"navbar-room-title\">volume</div>\r\n                </div>\r\n                <div className=\"navbar-settings\" onClick={() => props.setShowSettings(true)}>\r\n                    <FiSettings size={22} className=\"navbar-settings-cog\" color={'#404145'} />\r\n                    <div className=\"navbar-room-title\">settings</div>\r\n                </div>\r\n                <div className=\"navbar-controls-border\"></div>\r\n            </div>\r\n            <div className=\"navbar-user\">\r\n                {userStore.user.name}\r\n                <div className=\"navbar-user-avatar\" style={{ backgroundImage: `url(${userStore.user.avatar})` }}>\r\n                </div>\r\n                <div className=\"navbar-sign-out\" onClick={() => signOut()}>\r\n                    Sign out\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Navbar","import './Message.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../../index'\r\n\r\nconst Message = observer((props) => {\r\n    const userStore = rootstore.userStore\r\n\r\n    const myMessage = () => {\r\n        if (props.message.author._id === userStore.user._id) {\r\n            return ' my-message'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`message ${myMessage()}`}>\r\n            <div className=\"message-buble\">\r\n                <div className=\"message-author\">\r\n                    {props.message.author.name}\r\n                </div>\r\n                <div className=\"message-content\">\r\n                    {props.message.content}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Message","import { useState, useEffect } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './Chat.css';\r\nimport Message from './Message/Message'\r\nimport { rootstore } from '../../../../index'\r\nimport Dots from '../Dots/Dots'\r\nimport { AiOutlineSend, AiOutlineInfoCircle } from 'react-icons/ai'\r\n\r\nconst Chat = observer((props) => {\r\n    const [message, setMessage] = useState('')\r\n    const [sending, setSending] = useState(false)\r\n    const [activeChat, setActiveChat] = useState('office')\r\n    const { officeStore, userStore } = rootstore\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleKey)\r\n        return () => document.removeEventListener('keydown', handleKey)\r\n    }, [message])\r\n\r\n    const handleKey = (event) => {\r\n        if (event.keyCode === 13) {\r\n            sendMessage()\r\n        }\r\n    }\r\n\r\n    const sendMessage = async () => {\r\n        setSending(true)\r\n        const response = await officeStore.sendMessage(message)\r\n        setSending(false)\r\n        setMessage('')\r\n        if (!response) {\r\n            window.alert('sending message failed')\r\n        }\r\n    }\r\n\r\n    const sendRoomMessage = () => {\r\n        setSending(true)\r\n        officeStore.sendRoomMessage(message)\r\n        setSending(false)\r\n        setMessage('')\r\n    }\r\n\r\n    const getCurrentRoom = () => {\r\n        const user = officeStore.users.find(user => user.employeeId === userStore.user._id)\r\n        if (!user) {\r\n            return 'loading...'\r\n        }\r\n        const roomId = user.position.room\r\n\r\n        if (roomId === -1) {\r\n            return \"Hallway\"\r\n        } else {\r\n            return officeStore.organization.rooms.find(room => room._id === roomId).name\r\n        }\r\n    }\r\n\r\n    const messagesToDisplay = () => {\r\n        return activeChat === 'office' ? officeStore.organization.messages : officeStore.roomMessages\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat block-shadow\">\r\n            <div className=\"chat-tabs block-shadow\">\r\n                <div className={`chat-tab ${activeChat === 'office' && 'chat-tab-active'}`} onClick={() => setActiveChat('office')}>Office</div>\r\n                <div className={`chat-tab ${activeChat === 'room' && 'chat-tab-active'}`} onClick={() => setActiveChat('room')}>{getCurrentRoom()}</div>\r\n            </div>\r\n            {activeChat === 'room' &&\r\n                <div className=\"chat-messages-warning\">\r\n                    <AiOutlineInfoCircle style={{marginRight: '5px'}} size={18}/>Message history is not saved in rooms.\r\n            </div>}\r\n            <div className=\"chat-messages\">\r\n                {messagesToDisplay().map((message, key) =>\r\n                    <Message key={key} message={message} />\r\n                )}\r\n            </div>\r\n            <div className=\"chat-controls\">\r\n                <div className=\"chat-input-container\">\r\n                    <input\r\n                        value={message}\r\n                        placeholder={'Say something'}\r\n                        onChange={(event) => setMessage(event.target.value)}\r\n                    />\r\n                    <div className=\"chat-send\" onClick={activeChat === 'office' ? sendMessage : sendRoomMessage}>\r\n                        {sending ?\r\n                            <Dots />\r\n                            :\r\n                            <AiOutlineSend size={25} />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Chat","import { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../..'\r\nimport './Room.css'\r\n\r\nconst Room = observer((props) => {\r\n    const { socketStore } = rootstore\r\n\r\n    const move = (event) => {\r\n        const rooms = document.getElementById('rooms').getBoundingClientRect()\r\n        const position = {\r\n            room: props.room._id,\r\n            coordinates: {\r\n                x: event.clientX - rooms.left,\r\n                y: event.clientY - rooms.top\r\n            }\r\n        }\r\n        socketStore.emitPosition(position)\r\n    }\r\n\r\n    return (\r\n        <div className={`room ${props.first && 'first-block'} ${props.last && 'last-block'} ${props.bottomRoom && 'bottom-room'}`} id={`room${props.room._id}`}>\r\n            <div className=\"room-top\">\r\n                {props.room.name}\r\n            </div>\r\n            <div className=\"room-content\" onClick={(event) => move(event)}>\r\n            </div>\r\n            <div className=\"room-bottom\">\r\n                <div className=\"room-door\" id={`door${props.room._id}`}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Room;","import './Hallway.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../..'\r\n\r\nconst Hallway = observer((props) => {\r\n    const { socketStore } = rootstore\r\n\r\n    const move = (event) => {\r\n        const rooms = document.getElementById('rooms').getBoundingClientRect()\r\n        const position = {\r\n            room: -1,\r\n            coordinates: {\r\n                x: event.clientX - rooms.left,\r\n                y: event.clientY - rooms.top\r\n            }\r\n        }\r\n        socketStore.emitPosition(position)\r\n    }\r\n    return (\r\n        <div className={`hallway ${props.first && 'first-block'} ${props.last && 'last-block'}`} onClick={(e) => move(e)}>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Hallway","import './Avatar.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport { FiMicOff, FiVolumeX } from 'react-icons/fi'\r\n\r\n\r\nconst Avatar = observer((props) => {\r\n    const officeStore = rootstore.officeStore\r\n    const userStore = rootstore.userStore\r\n\r\n    const getUserAvatar = () => {\r\n        const user = officeStore.organization.employees.find(empl => empl._id === props.user.employeeId)\r\n        if (!user) {\r\n            return 'laoding...'\r\n        } else {\r\n            return user.avatar\r\n        }\r\n    }\r\n\r\n    const getIcon = () => {\r\n        if(props.user.silenced) {\r\n            return <FiVolumeX size={22} className=\"avatar-voice-volume\" color={'#F74040'} />\r\n        }else if (props.user.muted) {\r\n            return <FiMicOff size={22} className=\"avatar-voice-microphone\" color={'#F74040'} />\r\n        }else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const employeeInfo = officeStore.organization.employees.find(empl => empl._id === props.user.employeeId)\r\n\r\n    return (\r\n        <div className=\"avatar\" style={{\r\n            top: props.user.position.coordinates.y,\r\n            left: props.user.position.coordinates.x,\r\n            transition: `all ${props.user.transitionTime}s linear`,\r\n            border: `${props.user.employeeId === userStore.user._id ? '2' : '1'}px solid ${props.user.employeeId === userStore.user._id ? '#1CBF73' : 'black'}`,\r\n            backgroundImage: `url(${getUserAvatar()})`\r\n        }}>\r\n            <div className=\"avatar-shadow block-shadow\" style={{backgroundColor: getIcon() ? '#00000041': 'transparent'}}>\r\n            {getIcon()}\r\n            </div>\r\n            <div className=\"avatar-info block-shadow\">\r\n                <div className=\"avatar-info-name\">\r\n                    {employeeInfo.name}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Avatar","import './Furniture.css'\r\nimport { observer } from 'mobx-react'\r\n\r\nconst Furniture = observer((props) => {\r\n\r\n    return (\r\n        <div className={`furniture ${props.furniture.type}`} style={{\r\n            top: props.furniture.position.y,\r\n            left: props.furniture.position.x,\r\n            height: props.furniture.height,\r\n            width: props.furniture.width\r\n        }}>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Furniture","import './Rooms.css'\r\nimport { observer, } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport Room from './Room/Room'\r\nimport Hallway from './Hallway/Hallway'\r\nimport Avatar from '../Avatar/Avatar'\r\nimport Furniture from '../Furniture/Furniture'\r\n\r\nconst Rooms = observer(() => {\r\n    const officeStore = rootstore.officeStore\r\n    const roomsCount = officeStore.organization.rooms.length\r\n\r\n    return (\r\n        <div className=\"rooms\" id=\"rooms\">\r\n            <div className=\"rooms-row\">\r\n                {officeStore.organization.rooms.map((room, index) => {\r\n                    if (index % 2 === 0) {\r\n                        return (\r\n                            <Room\r\n                                room={room}\r\n                                first={index === 0}\r\n                            />\r\n                        )\r\n                    } return null\r\n                })}\r\n            </div>\r\n            <Hallway/>\r\n            <div className=\"rooms-row\">\r\n                {officeStore.organization.rooms.map((room, index) => {\r\n                    if (index % 2 === 1) {\r\n                        return (\r\n                            <Room\r\n                                room={room}\r\n                                bottomRoom\r\n                                first={index === 1}\r\n                            />\r\n\r\n                        )\r\n                    } else return null\r\n                })}\r\n                {roomsCount % 2 === 1 &&\r\n                    <div className=\"room-block-empty\"></div>\r\n                }\r\n            </div>\r\n            <div className=\"furniture-layer\">\r\n                {officeStore.furnitures.map(furniture => <Furniture key={furniture.furnitureId} furniture={furniture} />)}\r\n            </div>\r\n            <div className=\"user-layer\">\r\n                {officeStore.users.map(user => <Avatar key={user.employeeId} user={user} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Rooms","import Dots from '../Dots/Dots';\r\nimport './Loading.css';\r\n\r\nconst Loading = (props) => {\r\n    return (\r\n        <div className=\"loading\">\r\n            <div className=\"loading-text\">Loading Office</div>\r\n            <Dots />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading","import './CoWorkers.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport { FiChevronsRight } from 'react-icons/fi'\r\n\r\n\r\nconst CoWorkers = observer((props) => {\r\n    const officeStore = rootstore.officeStore\r\n\r\n    const isOnline = (employee) => {\r\n        return officeStore.users.find(user => user.employeeId === employee._id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"coworkers\" style={{ right: props.show ? '0px' : '-250px' }}>\r\n            <div className=\"coworkers-header\">\r\n                Co-workers\r\n            </div>\r\n            <div className=\"coworkers-header-back\" onClick={() => props.close()}>\r\n                <FiChevronsRight size={25} />\r\n            </div>\r\n            <div className=\"coworkers-names\">\r\n                {officeStore.organization.employees.map(employee => {\r\n                    return (\r\n                        <div className=\"coworkers-user\">\r\n                            <div className=\"coworkers-user-avatar\" style={{backgroundImage: `url(${employee.avatar})`}}></div>\r\n                            <div className={`coworkers-user-name ${isOnline(employee) && 'user-online'}`}> {employee.name} </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default CoWorkers;","import './Toggler.css'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst Toggler = (props) => {\r\n\r\n    return (\r\n        <div className=\"toggler\">\r\n            <label className=\"switch\">\r\n                <input\r\n                    type={\"checkbox\"}\r\n                    onChange={props.onChange}\r\n                    checked={props.value}\r\n                />\r\n                <span className=\"slider round\"></span>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toggler","import './Settings.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport { FiX } from 'react-icons/fi'\r\nimport { useEffect, useState } from 'react'\r\nimport Dots from '../Dots/Dots'\r\nimport Toggler from './Slider/Toggler'\r\n\r\nconst Settings = observer((props) => {\r\n\r\n    const userStore = rootstore.userStore\r\n    const officeStore = rootstore.officeStore\r\n    const [background, setBackground] = useState('transparent')\r\n    const [unsaved, setUnsaved] = useState(false)\r\n    const [user, setUser] = useState(JSON.parse(JSON.stringify(userStore.user)))\r\n    const [PTKey, setPTKey] = useState(\"0\")\r\n    const [listenForKey, setListenForKey] = useState(false)\r\n    const [saveing, setSaveing] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setBackground('rgba(64, 65, 69, 0.5)')\r\n    }, [])\r\n\r\n    const startListening = () => {\r\n        setListenForKey(true)\r\n        document.addEventListener('keydown', registerKey)\r\n    }\r\n\r\n    const registerKey = (event) => {\r\n        setUser({ ...user, 'PTKey': event.code })\r\n        setListenForKey(false)\r\n        document.removeEventListener('keypress', registerKey)\r\n        if (!unsaved) {\r\n            setUnsaved(true)\r\n        }\r\n    }\r\n\r\n    const changeValue = (property, event) => {\r\n        if (!unsaved) {\r\n            setUnsaved(true)\r\n        }\r\n        setUser({ ...user, [property]: event.target.value })\r\n    }\r\n\r\n    const changePushToTalk = () => {\r\n        if (!unsaved) {\r\n            setUnsaved(true)\r\n        }\r\n        setUser({ ...user, 'pushToTalk': !user.pushToTalk })\r\n        console.log(user)\r\n    }\r\n\r\n    const save = async () => {\r\n        if (!unsaved) return\r\n\r\n        setSaveing(true)\r\n        const response = await userStore.updateUser(user)\r\n        setSaveing(false)\r\n\r\n        if (response) {\r\n            setUnsaved(false)\r\n        } else {\r\n            alert('could not save user')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"settings-background\" style={{ background: background }}>\r\n            <div className=\"settings-modal block-shadow\">\r\n                <div className=\"settings-top-row\">\r\n                    <FiX size={25} style={{ margin: '10px', cursor: 'pointer' }} color={'#404145'} onClick={() => props.setShowSettings(false)} />\r\n                </div>\r\n                <div className=\"settings-content\">\r\n                    <div className=\"settings-content-row\">\r\n                        <div className=\"settings-avatar\" style={{ backgroundImage: `url(${user.avatar})` }}></div>\r\n                        <div className=\"settings-Heading\">{user.name}</div>\r\n                    </div>\r\n                    <div className=\"settings-content-row\">\r\n                        <div className=\"settings-input-row\">\r\n                            <div className=\"settings-input-label\">Avatar url</div>\r\n                            <input\r\n                                value={user.avatar}\r\n                                onChange={(event) => changeValue('avatar', event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"settings-content-row\">\r\n                        <div className=\"settings-input-row\">\r\n                            <div className=\"settings-input-label\">Name</div>\r\n                            <input\r\n                                value={user.name}\r\n                                onChange={(event) => changeValue('name', event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"settings-content-row\">\r\n                        <div className=\"settings-input-row\">\r\n                            <div className=\"settings-input-label\">Push to talk</div>\r\n                            <div className=\"PT-row\">\r\n                                <Toggler\r\n                                    value={user.pushToTalk}\r\n                                    onChange={() => changePushToTalk()}\r\n                                />\r\n                                <div className={`change-button ${!user.pushToTalk && 'change-button-disabled'}`} onClick={() => startListening()}>change</div>\r\n                                <input\r\n                                    readOnly\r\n                                    disabled={!user.pushToTalk}\r\n                                    value={!listenForKey ? user.PTKey : 'press any key'}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"settings-bottom-row\">\r\n                    <div className={`settings-save-button ${unsaved && 'unsaved-changes'}`} onClick={() => save()}>\r\n                        {saveing ?\r\n                            <Dots white />\r\n                            :\r\n                            'Save'\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Settings","import { useEffect, useState } from 'react'\r\nimport './Office.css'\r\nimport { observer } from 'mobx-react'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Chat from './components/Chat/Chat'\r\nimport Rooms from './components/rooms/Rooms'\r\nimport { rootstore } from '../../index'\r\nimport Loading from './components/Loading/Loading'\r\nimport CoWorkers from './components/CoWorkers/CoWorkers'\r\nimport Settings from './components/Settings/Settings'\r\nimport { FiUsers } from 'react-icons/fi'\r\nimport Player from 'react-player'\r\n\r\nconst Office = observer((props) => {\r\n    const { officeStore, userStore, mediaStore } = rootstore\r\n    const [showCoWorkers, setShowCoWorkers] = useState(false)\r\n    const [showSettings, setShowSettings] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const initializeOffice = async () => {\r\n            await officeStore.fetchOffice(userStore.user.organization)\r\n            if (userStore.user.pushToTalk) {\r\n                mediaStore.PTDeactive()\r\n            }\r\n        }\r\n        const PTPressListener = (event) => {\r\n            if (event.code == userStore.user.PTKey) {\r\n                mediaStore.PTActive()\r\n            }\r\n        }\r\n\r\n        const PTReleaseListener = (event) => {\r\n            if (event.code == userStore.user.PTKey) {\r\n                mediaStore.PTDeactive()\r\n            }\r\n        }\r\n\r\n        initializeOffice()\r\n        document.addEventListener('keydown', PTPressListener)\r\n        document.addEventListener('keyup', PTReleaseListener)\r\n\r\n        return function cleanup () {\r\n            document.removeEventListener('keydown', PTPressListener)\r\n            document.removeEventListener('keyup', PTReleaseListener)\r\n        }\r\n    }, [officeStore, userStore])\r\n\r\n    if (!officeStore.organization) {\r\n        return <Loading />\r\n    }\r\n\r\n    return (\r\n        <div className=\"office\">\r\n            <Navbar\r\n                navigateTo={props.navigateTo}\r\n                setShowSettings={setShowSettings}\r\n            />\r\n            <div className=\"office-body\">\r\n                <Chat />\r\n                <div className=\"office-body-scrollable\">\r\n                    <Rooms />\r\n                </div>\r\n            </div>\r\n            <div className=\"office-toggle-coworkers block-shadow\" onClick={() => setShowCoWorkers(!showCoWorkers)}>\r\n                <FiUsers style={{ marginRight: '3px' }} size={18} />\r\n                {`Co-workers`}\r\n            </div>\r\n            <CoWorkers show={showCoWorkers} close={() => setShowCoWorkers(false)} />\r\n            {showSettings && <Settings setShowSettings={setShowSettings} />}\r\n            {mediaStore.peerAudios.map(peerAudio =>\r\n                <Player\r\n                    playsInline\r\n                    url={peerAudio.stream}\r\n                    playing={true}\r\n                    style={{ height: '0px' }}\r\n                    height={'0px'}\r\n                    width={'0px'}\r\n                    volume={userStore.silenced ? 0 : 1}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Office","import './Navbar.css'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\n\r\nconst Navbar = observer((props) => {\r\n    const { organizationStore } = rootstore\r\n\r\n    const signOut = () => {\r\n        organizationStore.signOut()\r\n        props.navigateTo('login')\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar block-shadow\">\r\n            <div className=\"navbar-logo\">\r\n                <img className=\"navbar-logo-image\" src={organizationStore.organization.logo}>\r\n                </img>\r\n                <div className=\"navbar-office-name\">\r\n                    {organizationStore.organization.name}\r\n                </div>\r\n            </div>\r\n            <div className=\"navbar-user\">\r\n                <div className=\"navbar-sign-out\" onClick={() => signOut()}>\r\n                    Sign out\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Navbar","import { useState } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './Employees.css';\r\nimport { rootstore } from '../../../../index'\r\n\r\nconst Employees = observer((props) => {\r\n    const { organizationStore } = rootstore\r\n    const [name, setName] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const createEmployee = async () => {\r\n        await organizationStore.createEmployee(\r\n            {\r\n                name: name,\r\n                username: username,\r\n                password: password\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"employees block-shadow\">\r\n            <div className=\"employee-list\">\r\n                {organizationStore.organization.employees.map(employee =>\r\n                    <div className=\"coworkers-user\">\r\n                        <div className=\"coworkers-user-avatar\" style={{ backgroundImage: `url(${employee.avatar})` }}></div>\r\n                        <div className={`coworkers-user-name`}> {employee} </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"employee-controls\">\r\n                <div className=\"login-input-row\">\r\n                    <input\r\n                        placeholder={'Full Name'}\r\n                        value={name}\r\n                        onChange={(event) => setName(event.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"login-input-row\">\r\n                    <input\r\n                        placeholder={'Username'}\r\n                        value={username}\r\n                        onChange={(event) => setUsername(event.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"login-input-row\">\r\n                    <input\r\n                        placeholder={'Password'}\r\n                        value={password}\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"OTButton\" onClick={() => createEmployee()}>Create Employee</div>\r\n            </div>\r\n        </div >\r\n    )\r\n})\r\n\r\nexport default Employees","import { observer } from 'mobx-react'\r\nimport './RoomModel.css'\r\nimport { FiEdit2, FiTrash } from 'react-icons/fi'\r\n\r\nconst RoomModel = observer((props) => {\r\n\r\n    return (\r\n        <div className={`room ${props.first && 'first-block'} ${props.last && 'last-block'} ${props.bottomRoom && 'bottom-room'}`} id={`room${props.room._id}`}>\r\n            <div className=\"room-top\">\r\n                {props.room.name}\r\n            </div>\r\n            <div className=\"room-content\">\r\n                <div className=\"room-options\">\r\n                    <div className=\"room-option\">\r\n                        <FiEdit2 style={{\"fontSize\": \"30px\", \"color\": \"#1CBF73\"}}/>\r\n                        Edit\r\n                    </div>\r\n                    <div className=\"room-option\">\r\n                        <FiTrash style={{\"fontSize\": \"30px\", \"color\": \"#F74040\"}}/>\r\n                        Delete\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"room-bottom\">\r\n                <div className=\"room-door\" id={`door${props.room._id}`}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default RoomModel","import './HallwayModel.css'\r\nimport { observer } from 'mobx-react'\r\n\r\nconst HallwayModel = observer((props) => {\r\n\r\n    return (\r\n        <div className={`hallway ${props.first && 'first-block'} ${props.last && 'last-block'}`}>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default HallwayModel","import './OfficeEditor.css'\r\nimport { useState } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from '../../../../index'\r\nimport RoomModel from './Room/RoomModel'\r\nimport HallwayModel from './Hallway/HallwayModel'\r\n\r\nconst OfficeEditor = observer((props) => {\r\n    const { organizationStore } = rootstore\r\n    const [organization, setOrganization] = useState(JSON.parse(JSON.stringify(organizationStore.organization)))\r\n\r\n    const addRoom = () => {\r\n        const rooms = [ ...organization.rooms, { name: \"new room\", capacity: 10 }]\r\n        setOrganization({ ...organization, rooms: rooms })\r\n    }\r\n\r\n    return (\r\n        <div className=\"office-editor\">\r\n            <div className=\"add-room block-shadow\" onClick={() => addRoom()}>Add Room</div>\r\n            <div className=\"rooms\" id=\"rooms\">\r\n                <div className=\"rooms-row\">\r\n                    {organization.rooms.map((room, index) => {\r\n                        if (index % 2 === 0) {\r\n                            return (\r\n                                <RoomModel\r\n                                    room={room}\r\n                                    first={index === 0}\r\n                                />\r\n                            )\r\n                        } return null\r\n                    })}\r\n                </div>\r\n                <HallwayModel />\r\n                <div className=\"rooms-row\">\r\n                    {organization.rooms.map((room, index) => {\r\n                        if (index % 2 === 1) {\r\n                            return (\r\n                                <RoomModel\r\n                                    room={room}\r\n                                    bottomRoom\r\n                                    first={index === 1}\r\n                                />\r\n\r\n                            )\r\n                        } else return null\r\n                    })}\r\n                    {organization.rooms.length % 2 === 1 &&\r\n                        <div className=\"room-block-empty\"></div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default OfficeEditor","import './ControlPanel.css'\r\nimport { observer } from 'mobx-react'\r\nimport Navbar from './components/Navbar/Navbar'\r\nimport Employees from './components/Employees/Employees'\r\nimport OfficeEditor from './components/OfficeEditor/OfficeEditor'\r\n\r\nconst ControlPanel = observer((props) => {\r\n    return (\r\n        <div className=\"controlPanel\">\r\n            <Navbar \r\n                navigateTo={props.navigateTo}\r\n            />\r\n            <div className=\"controlPanel-body\">\r\n                <Employees />\r\n                <OfficeEditor />\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ControlPanel","import axios from 'axios'\r\nconst baseUrl = '/api/signin'\r\n\r\nconst signInWithToken = async () => {\r\n    const response = await axios.post(baseUrl)\r\n    return response.data\r\n}\r\n\r\nconst signInEmployee = async (credentials) => {\r\n    const response = await axios.post(`${baseUrl}/employee`, credentials)\r\n    return response.data\r\n}\r\n\r\nconst signInOrganization = async (credentials) => {\r\n    const response = await axios.post(`${baseUrl}/organization`, credentials)\r\n    return response.data\r\n}\r\n\r\nconst SignOut = async () => {\r\n    const response = await axios.post(`${baseUrl}/signout`)\r\n    return response.data\r\n}\r\n\r\nconst services = { signInWithToken, signInEmployee, signInOrganization, SignOut }\r\nexport default services","import { useEffect, useState } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport { rootstore } from './index'\r\nimport Login from './Views/Login/Login'\r\nimport Office from './Views/Office/Office'\r\nimport ControlPanel from './Views/ControlPanel/ControlPanel'\r\nimport SignIn from './Services/SignIn'\r\nimport './App.css'\r\n\r\nconst App = observer(() => {\r\n  const { userStore, organizationStore } = rootstore\r\n  const socketStore = rootstore.socketStore\r\n  const [page, setPage] = useState('login')\r\n\r\n  useEffect(() => {\r\n    const checkLogin = async () => {\r\n      try {\r\n        const response = await SignIn.signInWithToken()\r\n        if (response.user.type === 'employee') {\r\n          userStore.setUser(response.user)\r\n          setPage('office')\r\n          socketStore.connectToOffice(response.token, response.user.organization)\r\n        } else {\r\n          organizationStore.setOrganization(response.user)\r\n          setPage('controlPanel')\r\n        }\r\n      } catch (e) { }\r\n    }\r\n\r\n    checkLogin()\r\n  }, [userStore, socketStore])\r\n\r\n  const renderPage = () => {\r\n    switch (page) {\r\n      case 'login':\r\n        return <Login navigateTo={setPage} />\r\n      case 'office':\r\n        return <Office navigateTo={setPage} />\r\n      case 'controlPanel':\r\n        return <ControlPanel navigateTo={setPage} />\r\n      default:\r\n        return <Login navigateTo={setPage} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {renderPage()}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default App;\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/organizations'\r\n\r\nconst getOrganization = async (id) => {\r\n    const response = await axios.get(`${baseUrl}/${id}`)\r\n    return response.data\r\n}\r\n\r\nconst services = { getOrganization }\r\nexport default services","import axios from 'axios'\r\nconst baseUrl = '/api/messages'\r\n\r\nconst sendOfficeMessage = async (content) => {\r\n    const response = await axios.post(`${baseUrl}`, content)\r\n    return response.data\r\n}\r\n\r\nconst services = { sendOfficeMessage }\r\nexport default services","import { makeObservable, observable, action, runInAction } from 'mobx'\r\nimport Organization from '../Services/Organization'\r\nimport Message from '../Services/Message'\r\n\r\nclass OfficeStore {\r\n    rootStore = null\r\n    organization = null\r\n    roomMessages = []\r\n\r\n    users = []\r\n\r\n    furnitures=[]\r\n    /*furnitures = [\r\n        {\r\n            type: 'meeting-table',\r\n            height: '150px',\r\n            width: '85px',\r\n            position: {x: 108, y: 85},\r\n            direction: 'right'\r\n        },\r\n        {\r\n            type: 'meeting-chair',\r\n            height: '45px',\r\n            width: '45px',\r\n            position: {x: 198, y: 168},\r\n            direction: 'right'\r\n        },\r\n        {\r\n            type: 'meeting-chair',\r\n            height: '45px',\r\n            width: '45px',\r\n            position: {x: 198, y: 103},\r\n            direction: 'right'\r\n        },\r\n        {\r\n            type: 'meeting-chair',\r\n            height: '45px',\r\n            width: '45px',\r\n            position: {x: 58, y: 168},\r\n            direction: 'right'\r\n        },\r\n        {\r\n            type: 'meeting-chair',\r\n            height: '45px',\r\n            width: '45px',\r\n            position: {x: 58, y: 103},\r\n            direction: 'right'\r\n        },\r\n    ]*/\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n        makeObservable(this, {\r\n            rootStore: observable,\r\n            organization: observable,\r\n            users: observable,\r\n            roomMessages: observable,\r\n            furnitures: observable,\r\n            receiveMessage: action,\r\n            changePosition: action,\r\n            sendMessage: action,\r\n            fetchOffice: action,\r\n            setEmployeeStates: action,\r\n            addEmployeeState: action,\r\n            removeEmployeeState: action,\r\n            receiveRoomMessage: action,\r\n            sendRoomMessage: action,\r\n            clearRoomChat: action\r\n        })\r\n    }\r\n\r\n    fetchOffice = async (id) => {\r\n        const organization = await Organization.getOrganization(id)\r\n\r\n        runInAction(() => {\r\n            this.organization = organization\r\n        })\r\n\r\n        console.log('current organization:', this.organization)\r\n        return organization\r\n    }\r\n    \r\n    setEmployeeStates = (employees) => {\r\n        runInAction(() => {\r\n            this.users = employees\r\n        })\r\n    }\r\n\r\n    addEmployeeState = (employeeState) => {\r\n        this.users = this.users.concat(employeeState)\r\n    }\r\n\r\n    removeEmployeeState = (employeeState) => {\r\n        this.users = this.users.filter(user => user.employeeId !== employeeState.employeeId)\r\n    }\r\n\r\n    sendRoomMessage = (content) => {\r\n        this.rootStore.socketStore.emitRoomMessage(content)\r\n    }\r\n\r\n    sendMessage = async (content) => {\r\n        try {\r\n            const response = await Message.sendOfficeMessage({ content: content })\r\n            if (response) {\r\n                if (!this.organization.messages.find(msg => msg._id === response._id)) {\r\n                    let officeClone = JSON.parse(JSON.stringify(this.organization))\r\n                    officeClone.messages.unshift(response)\r\n                    runInAction(() => {\r\n                        this.organization = officeClone\r\n                    })\r\n                }\r\n                return response\r\n            }\r\n        } catch {\r\n            return null\r\n        }\r\n    }\r\n\r\n    receiveMessage = (message) => {\r\n        if (!this.organization.messages.find(msg => msg._id === message._id)) {\r\n            const officeClone = JSON.parse(JSON.stringify(this.organization))\r\n            officeClone.messages.unshift(message)\r\n            runInAction(() => {\r\n                this.organization = officeClone\r\n            })\r\n        }\r\n    }\r\n\r\n    muteEmployee = (id, value) => {\r\n        let usersClone = JSON.parse(JSON.stringify(this.users))\r\n        usersClone.find(user => user.employeeId === id).muted = value\r\n        runInAction(() => {\r\n            this.users = usersClone\r\n        })\r\n    }\r\n\r\n    silenceEmployee = (id, value) => {\r\n        let usersClone = JSON.parse(JSON.stringify(this.users))\r\n        usersClone.find(user => user.employeeId === id).silenced = value\r\n        runInAction(() => {\r\n            this.users = usersClone\r\n        })\r\n    }\r\n\r\n    changePosition = (id, position, transitionTime) => {\r\n        let usersClone = JSON.parse(JSON.stringify(this.users))\r\n        usersClone.find(user => user.employeeId === id).position = position\r\n        usersClone.find(user => user.employeeId === id).transitionTime = transitionTime\r\n        runInAction(() => {\r\n            this.users = usersClone\r\n        })\r\n    }\r\n\r\n    receiveRoomMessage = (message) => {\r\n        if (!this.roomMessages.find(msg => msg._id === message._id)) {\r\n            runInAction(() => {\r\n                this.roomMessages = [message].concat(this.roomMessages)\r\n            })\r\n        }\r\n    }\r\n\r\n    clearRoomChat = () => {\r\n        runInAction(() => {\r\n            this.roomMessages = []\r\n        })\r\n    }\r\n}\r\n\r\nexport default OfficeStore","import { rootstore } from '../index'\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nconst move = async (X, Y, roomId, employeeId) => {\r\n    const user = rootstore.officeStore.users.find(user => user.employeeId === employeeId)\r\n\r\n    if (roomId !== user.position.room) {\r\n        if (roomId === -1) {\r\n            await roomToHall(user, X, Y, roomId, employeeId)\r\n        } else if (user.position.room === -1) {\r\n            await hallToRoom(user, X, Y, roomId, employeeId)\r\n        } else {\r\n            await roomToRoom(user, X, Y, roomId)\r\n        }\r\n    } else {\r\n        await moveInsideRoom(employeeId, X, Y, roomId)\r\n    }\r\n}\r\n\r\nconst roomToHall = async (user, X, Y, roomId, employeeId) => {\r\n    const duration = moveToDoor(employeeId, user.position.room)\r\n    await delay(duration * 1000)\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.mediaStore.endAllConnections()\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.officeStore.clearRoomChat()\r\n    moveInsideRoom(employeeId, X, Y, roomId)\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.mediaStore.connectToPeers()\r\n}\r\n\r\nconst hallToRoom = async (user, X, Y, roomId) => {\r\n    const duration = moveToDoor(user.employeeId, roomId)\r\n    await delay(duration * 1000)\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.mediaStore.endAllConnections()\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.officeStore.clearRoomChat()\r\n    moveInsideRoom(user.employeeId, X, Y, roomId)\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.mediaStore.connectToPeers()\r\n}\r\n\r\nconst roomToRoom = async (user, X, Y, roomId) => {\r\n    const duration = moveToDoor(user.employeeId, user.position.room)\r\n    await delay(duration * 1000)\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.mediaStore.endAllConnections()\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.officeStore.clearRoomChat()\r\n    const duration2 = moveToDoor(user.employeeId, roomId)\r\n    await delay(duration2 * 1000)\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.officeStore.clearRoomChat()\r\n    moveInsideRoom(user.employeeId, X, Y, roomId)\r\n    if(user.employeeId === rootstore.userStore.user._id) rootstore.mediaStore.connectToPeers()\r\n}\r\n\r\nconst moveInsideRoom = (employeeId, X, Y, roomId ) => {\r\n    const user = rootstore.officeStore.users.find(user => user.employeeId === employeeId)\r\n    const positionX = X \r\n    const positionY = Y \r\n    const transitionTime = calcTravelTime(user.position.coordinates.x, user.position.coordinates.y, positionX, positionY)\r\n    rootstore.officeStore.changePosition(employeeId, { room: roomId, coordinates: { x: positionX, y: positionY } }, transitionTime)\r\n    return transitionTime\r\n}\r\n\r\nconst moveToDoor = (employeeId, targetRoom) => {\r\n    const user = rootstore.officeStore.users.find(user => user.employeeId === employeeId)\r\n    const doorElement = document.getElementById(`door${targetRoom}`)\r\n\r\n    const doorX = doorElement.offsetLeft + 30\r\n    const doorY = doorElement.offsetTop\r\n    const transitionTime = calcTravelTime(user.position.coordinates.x, user.position.coordinates.y, doorX, doorY)\r\n    rootstore.officeStore.changePosition(employeeId, { room: user.position.room, coordinates: { x: doorX, y: doorY } }, transitionTime)\r\n    return transitionTime\r\n}\r\n\r\nconst calcTravelTime = (oldX, oldY, newX, newY) => {\r\n    const travelX = Math.abs(oldX - newX)\r\n    const travelY = Math.abs(oldY - newY)\r\n    const TravelLength = Math.hypot(travelX, travelY)\r\n    return TravelLength * 0.01\r\n}\r\n\r\nexport default move","import axios from 'axios'\r\nconst baseUrl = '/api/sockets'\r\n\r\nconst updateState = async (employeeState) => {\r\n    const response = await axios.put(`${baseUrl}/employeeState`, employeeState)\r\n    return response.data\r\n}\r\n\r\nconst addRoomMessage = async (content) => {\r\n    const response = await axios.post(`${baseUrl}/roomMessage`, content)\r\n    return response.data\r\n}\r\n\r\nconst sendSignal = async (employeeId, signal) => {\r\n    const response = await axios.post(`${baseUrl}/sendSignal`, { employeeId, signal })\r\n    return response.data\r\n}\r\n\r\nconst returnSignal = async (employeeId, signal) => {\r\n    const response = await axios.post(`${baseUrl}/returnSignal`, { employeeId, signal })\r\n    return response.data\r\n}\r\n\r\nconst services = { updateState, addRoomMessage, sendSignal, returnSignal }\r\nexport default services","import { makeObservable, observable, action } from 'mobx'\r\nimport { io } from 'socket.io-client'\r\nimport { rootstore } from '..'\r\nimport move from '../Hooks/Mover'\r\nimport Socket from '../Services/Socket'\r\n\r\nclass SocketStore {\r\n    rootStore = null\r\n    socket = null\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n        makeObservable(this, {\r\n            rootStore: observable,\r\n            socket: observable,\r\n            connectToOffice: action,\r\n            disconnectSocket: action,\r\n            emitPosition: action,\r\n            emitMuted: action,\r\n            emitSilenced: action\r\n        })\r\n    }\r\n\r\n    connectToOffice = (token, organization) => {\r\n        this.socket = io.connect(`/`, {\r\n            auth: {\r\n                token\r\n            }\r\n        })\r\n\r\n        this.socket.on('message', (message) => {\r\n            this.rootStore.officeStore.receiveMessage(message)\r\n        })\r\n\r\n        this.socket.on('initialData', ({ employeeStates, iceServers }) => {\r\n            this.rootStore.officeStore.setEmployeeStates(employeeStates)\r\n            this.rootStore.mediaStore.initializeMedia(iceServers)\r\n        })\r\n\r\n        this.socket.on('addEmployeeState', (employeeState) => {\r\n            this.rootStore.officeStore.addEmployeeState(employeeState)\r\n        })\r\n\r\n        this.socket.on('removeEmployeeState', (employeeState) => {\r\n            this.rootStore.officeStore.removeEmployeeState(employeeState)\r\n        })\r\n\r\n        this.socket.on('updateEmployeeState', (employeeState) => {\r\n            const targetUser = rootstore.officeStore.users.find(user => user.employeeId === employeeState.employeeId)\r\n            \r\n            if(!targetUser){\r\n                return\r\n            }\r\n            \r\n            if (targetUser.muted !== employeeState.muted) {\r\n                rootstore.officeStore.muteEmployee(employeeState.employeeId, employeeState.muted)\r\n            }\r\n            if (targetUser.silenced !== employeeState.silenced) {\r\n                rootstore.officeStore.silenceEmployee(employeeState.employeeId, employeeState.silenced)\r\n            }\r\n            if (targetUser.position !== employeeState.position) {\r\n                move(\r\n                    employeeState.position.coordinates.x,\r\n                    employeeState.position.coordinates.y,\r\n                    employeeState.position.room,\r\n                    employeeState.employeeId\r\n                )\r\n            }\r\n        })\r\n\r\n        this.socket.on('roomMessage', (roomMessage) => {\r\n            this.rootStore.officeStore.receiveRoomMessage(roomMessage)\r\n        })\r\n    }\r\n\r\n    disconnectSocket = () => {\r\n        this.socket.disconnect()\r\n    }\r\n\r\n    emitPosition = (position) => {\r\n        const myId = rootstore.userStore.user._id\r\n        const state = JSON.parse(JSON.stringify(this.rootStore.officeStore.users.find(user => user.employeeId === myId)))\r\n        Socket.updateState({ ...state, position: position })\r\n    }\r\n\r\n    emitMuted = (muted) => {\r\n        const myId = rootstore.userStore.user._id\r\n        const state = JSON.parse(JSON.stringify(this.rootStore.officeStore.users.find(user => user.employeeId === myId)))\r\n        Socket.updateState({ ...state, muted })\r\n    }\r\n\r\n    emitSilenced = (silenced) => {\r\n        const myId = rootstore.userStore.user._id\r\n        const state = JSON.parse(JSON.stringify(this.rootStore.officeStore.users.find(user => user.employeeId === myId)))\r\n        Socket.updateState({ ...state, silenced })\r\n    }\r\n\r\n    emitRoomMessage = (content) => {\r\n        Socket.addRoomMessage({ content })\r\n    }\r\n\r\n    emitStartCall = (data) => {\r\n        Socket.startCall(data)\r\n    }\r\n}\r\n\r\nexport default SocketStore","import axios from 'axios'\r\nconst baseUrl = '/api/employees'\r\n\r\nconst updateEmployee = async (employee) => {\r\n    const response = await axios.put(`${baseUrl}/${employee._id}`, employee)\r\n    return response.data\r\n}\r\n\r\nconst createEmployee = async (id, employee) => {\r\n    const response = await axios.post(`${baseUrl}/`, employee)\r\n    return response.data\r\n}\r\n\r\nconst services = { updateEmployee, createEmployee }\r\nexport default services","import { makeObservable, observable, action, runInAction } from 'mobx'\r\nimport Employee from '../Services/Employee'\r\nimport SignIn from '../Services/SignIn'\r\n\r\n\r\nclass UserStore {\r\n    rootStore = null\r\n    user = null\r\n    muted = false\r\n    silenced = false\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n        makeObservable(this, {\r\n            rootStore: observable,\r\n            user: observable,\r\n            muted: observable,\r\n            silenced: observable,\r\n            signIn: action,\r\n            setUser: action,\r\n            signOut: action,\r\n            updateUser: action,\r\n            setMuted: action,\r\n            setSilenced: action\r\n        })\r\n    }\r\n\r\n    signIn = async (username, password) => {\r\n        const response = await SignIn.signInEmployee({ username, password })\r\n        this.user = response.user\r\n        console.log('current user:', this.user)\r\n        return response\r\n    }\r\n\r\n    setUser = (user) => {\r\n        runInAction(() => {\r\n            this.user = user\r\n        })\r\n    }\r\n\r\n    signOut = async () => {\r\n        await SignIn.SignOut()\r\n        this.rootStore.mediaStore.endAllConnections()\r\n        runInAction(() => {\r\n            this.user = null\r\n        })\r\n    }\r\n\r\n    updateUser = async (userValues) => {\r\n        try {\r\n            const response = await Employee.updateEmployee(userValues)\r\n            this.user = response\r\n            return response\r\n        } catch {\r\n            return null\r\n        }\r\n    }\r\n\r\n    setMuted = (value) => {\r\n        this.muted = value\r\n        if(value){\r\n            this.rootStore.mediaStore.removeAudioStreams()\r\n        } else {\r\n            this.rootStore.mediaStore.addAudioStreams()\r\n        }\r\n    }\r\n\r\n    setSilenced = (value) => {\r\n        this.silenced = value\r\n    }\r\n}\r\n\r\nexport default UserStore;","import { makeObservable, observable, action, runInAction } from 'mobx'\r\nimport Peer from 'simple-peer'\r\nimport socket from '../Services/Socket'\r\n\r\nclass MediaStore {\r\n    rootStore = null\r\n    stream = null\r\n    peers = []\r\n    peerAudios = []\r\n    iceServers = null\r\n    PTActivated = true\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n        makeObservable(this, {\r\n            rootStore: observable,\r\n            stream: observable,\r\n            peerAudios: observable,\r\n            peers: observable,\r\n            iceServers: observable,\r\n            connectToPeers: action,\r\n            endAllConnections: action,\r\n            initializeMedia: action,\r\n            removeAudioStreams: action,\r\n            addAudioStreams: action,\r\n            PTActive: action,\r\n            PTDeactive: action\r\n        })\r\n    }\r\n\r\n\r\n    initializeMedia = async (iceServers) => {\r\n        this.iceServers = iceServers\r\n        await navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(stream => {\r\n            this.stream = stream\r\n\r\n            this.connectToPeers()\r\n\r\n            this.rootStore.socketStore.socket.on('sendSignal', ({ signal, employeeId }) => {\r\n                console.log('sendSignal received')\r\n                this.addPeer(signal, employeeId)\r\n            })\r\n\r\n            this.rootStore.socketStore.socket.on('returnSignal', ({ signal, employeeId }) => {\r\n                console.log('returnSignal received')\r\n                const peer = this.peers.find(peer => peer.employeeId === employeeId)\r\n                if (peer) {\r\n                    peer.peer.signal(signal)\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    connectToPeers = async () => {\r\n        const usersInRoom = this.getRoomUsers()\r\n\r\n        console.log('The users in the room: ')\r\n        usersInRoom.forEach(user => {\r\n            console.log(user.employeeId)\r\n        })\r\n\r\n        if (usersInRoom.length > 1) {\r\n            usersInRoom.forEach(employee => {\r\n                if (employee.employeeId !== this.rootStore.userStore.user._id) {\r\n                    console.log('createPeer')\r\n                    this.createPeer(employee.employeeId, this.iceServers)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    addPeer = (signal, employeeId) => {\r\n        const peer = new Peer({ initiator: false, trickle: false, stream: this.stream, config: { iceServers: this.iceServers } })\r\n        peer.signal(signal)\r\n\r\n        if (this.rootStore.userStore.muted) {\r\n            peer.streams[0].getAudioTracks()[0].enabled = false\r\n        } else if (this.rootStore.userStore.user.pushToTalk && !this.PTActivated) {\r\n            peer.streams[0].getAudioTracks()[0].enabled = false\r\n        }\r\n\r\n        peer.on('signal', signal => {\r\n            console.log('returnSignal sent')\r\n            socket.returnSignal(employeeId, signal)\r\n        })\r\n\r\n        peer.on('stream', stream => {\r\n            console.log('stream received')\r\n            runInAction(() => {\r\n                this.peerAudios = [...this.peerAudios, { stream: stream, employeeId: employeeId }]\r\n            })\r\n        })\r\n\r\n        peer.on('close', () => {\r\n            console.log('connection closed')\r\n            this.endPeerConnection(employeeId)\r\n        })\r\n\r\n        peer.on('error', (err) => {\r\n            console.log('Peer error: ', err)\r\n        })\r\n\r\n        runInAction(() => {\r\n            this.peers = [...this.peers, { peer: peer, employeeId: employeeId }]\r\n        })\r\n    }\r\n\r\n    createPeer = (employeeId) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream: this.stream, config: { iceServers: this.iceServers } })\r\n\r\n        if (this.rootStore.userStore.muted) {\r\n            peer.streams[0].getAudioTracks()[0].enabled = false\r\n        } else if (this.rootStore.userStore.user.pushToTalk && !this.PTActivated) {\r\n            peer.streams[0].getAudioTracks()[0].enabled = false\r\n        }\r\n\r\n        peer.on('signal', signal => {\r\n            console.log('sendSignal sent')\r\n            socket.sendSignal(employeeId, signal)\r\n        })\r\n\r\n        peer.on('stream', stream => {\r\n            console.log('stream received')\r\n            runInAction(() => {\r\n                this.peerAudios = [...this.peerAudios, { stream: stream, employeeId: employeeId }]\r\n            })\r\n        })\r\n\r\n        peer.on('close', () => {\r\n            console.log('connection closed')\r\n            this.endPeerConnection(employeeId)\r\n        })\r\n\r\n        peer.on('error', (err) => {\r\n            console.log('Peer error: ', err)\r\n        })\r\n\r\n        runInAction(() => {\r\n            this.peers = [...this.peers, { peer: peer, employeeId: employeeId }]\r\n        })\r\n    }\r\n\r\n    getRoomUsers = () => {\r\n        const myId = this.rootStore.userStore.user._id\r\n        const myState = this.rootStore.officeStore.users.find(user => user.employeeId === myId)\r\n        const myRoom = myState.position.room\r\n        const roomUsers = this.rootStore.officeStore.users.filter(user => user.position.room === myRoom)\r\n        return roomUsers\r\n    }\r\n\r\n    endAllConnections = () => {\r\n        console.log('ending all connections')\r\n        this.peers.forEach(peer => peer.peer.destroy())\r\n        runInAction(() => {\r\n            this.peers = []\r\n            this.peerAudios = []\r\n        })\r\n    }\r\n\r\n    endPeerConnection = (employeeId) => {\r\n        const peers = this.peers.filter(user => user.employeeId !== employeeId)\r\n        const audios = this.peerAudios.filter(user => user.employeeId !== employeeId)\r\n\r\n        runInAction(() => {\r\n            this.peers = peers\r\n            this.peerAudios = audios\r\n        })\r\n    }\r\n\r\n    removeAudioStreams = () => {\r\n        this.peers.forEach(peer => console.log(peer.peer.streams[0].getAudioTracks()[0]))\r\n        this.peers.forEach(peer => peer.peer.streams[0].getAudioTracks()[0].enabled = false)\r\n    }\r\n\r\n    addAudioStreams = () => {\r\n        if (this.PTActivated) {\r\n            this.peers.forEach(peer => peer.peer.streams[0].getAudioTracks()[0].enabled = true)\r\n        }\r\n    }\r\n\r\n    PTActive = () => {\r\n        if (this.rootStore.userStore.muted || this.PTActivated) {\r\n            return\r\n        }\r\n\r\n        console.log(\"PT activated\")\r\n        this.peers.forEach(peer => peer.peer.streams[0].getAudioTracks()[0].enabled = true)\r\n        this.PTActivated = true\r\n    }\r\n\r\n    PTDeactive = () => {\r\n        if (this.rootStore.userStore.muted) {\r\n            return\r\n        }\r\n        \r\n        console.log(\"PT deactivated\")\r\n        this.peers.forEach(peer => peer.peer.streams[0].getAudioTracks()[0].enabled = false)\r\n        this.PTActivated = false\r\n    }\r\n}\r\n\r\nexport default MediaStore","import { makeObservable, observable, action, runInAction } from 'mobx'\r\nimport SignIn from '../Services/SignIn'\r\nimport Employee from '../Services/Employee'\r\n\r\nclass OrganizationStore {\r\n    rootStore = null\r\n    organization = null\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore\r\n        makeObservable(this, {\r\n            rootStore: observable,\r\n            organization: observable,\r\n            signIn: action,\r\n            setOrganization: action,\r\n            signOut: action,\r\n            createEmployee: action\r\n        })\r\n    }\r\n\r\n    signIn = async (username, password) => {\r\n        const response = await SignIn.signInOrganization({ username, password })\r\n\r\n        runInAction(() => {\r\n            this.organization = response.user\r\n            if (response.user.office) {\r\n                this.office = response.user.office\r\n            }\r\n        })\r\n\r\n        console.log('current organization:', this.organization)\r\n        return response\r\n    }\r\n\r\n    setOrganization = (organization) => {\r\n        runInAction(() => {\r\n            this.organization = organization\r\n        })\r\n    }\r\n\r\n    signOut = async () => {\r\n        await SignIn.SignOut()\r\n        runInAction(() => {\r\n            this.organization = null\r\n        })\r\n    }\r\n\r\n    createEmployee = async (employee) => {\r\n        const response = await Employee.createEmployee(this.organization._id, employee)\r\n        runInAction(() => {\r\n            console.log('RESPONSE: ', response)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default OrganizationStore","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport rootStore from './Stores/RootStore'\r\n\r\nexport const rootstore = new rootStore()\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n)","import { makeAutoObservable } from 'mobx'\r\nimport OfficeStore from \"./OfficeStore\"\r\nimport SocketStore from './SocketStore'\r\nimport UserStore from \"./UserStore\"\r\nimport MediaStore from './MediaStore'\r\nimport OrganizationStore from './OrganizationStore'\r\n\r\nclass RootStore {\r\n    officeStore\r\n    userStore\r\n    socketStore\r\n    mediaStore\r\n    organizationStore\r\n\r\n    constructor() {\r\n        this.officeStore = new OfficeStore(this)\r\n        this.userStore = new UserStore(this)\r\n        this.socketStore = new SocketStore(this)\r\n        this.mediaStore = new MediaStore(this)\r\n        this.organizationStore = new OrganizationStore(this)\r\n        makeAutoObservable(this)\r\n    }\r\n}\r\n\r\nexport default RootStore"],"sourceRoot":""}