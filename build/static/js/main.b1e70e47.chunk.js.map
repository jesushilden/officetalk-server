{"version":3,"sources":["Views/Office/components/Dots/Dots.js","Views/Login/Login.js","Views/Office/components/Navbar/Navbar.js","Views/Office/components/Chat/Message/Message.js","Views/Office/components/Chat/Chat.js","Views/Office/components/rooms/Room/Room.js","Views/Office/components/rooms/Hallway/Hallway.js","Views/Office/components/Avatar/Avatar.js","Views/Office/components/rooms/Rooms.js","Views/Office/components/Loading/Loading.js","Views/Office/components/CoWorkers/CoWorkers.js","Views/Office/components/Settings/Settings.js","Views/Office/Office.js","App.js","Services/Organization.js","Services/Message.js","Stores/OfficeStore.js","Services/Employee.js","Services/SignIn.js","Stores/UserStore.js","index.js","Stores/RootStore.js"],"names":["Dots","props","className","white","data-title","Login","userStore","rootstore","useState","username","setUsername","password","setPassword","loading","setLoading","loginType","setLoginType","isActive","tab","signIn","a","alert","response","connectSocket","token","user","organization","navigateTo","console","log","onClick","size","placeholder","value","onChange","event","target","type","style","background","Navbar","observer","officeStore","src","logo","name","users","find","userId","_id","roomId","position","room","office","rooms","getCurrentRoom","setMuted","muted","color","silenced","setSilenced","setShowSettings","backgroundImage","avatar","signOut","disconnectSocket","Message","message","author","myMessage","content","Chat","setMessage","sending","setSending","activeChat","setActiveChat","sendMessage","window","messages","map","key","Room","first","last","bottomRoom","id","onDoubleClick","move","Hallway","Avatar","top","coordinates","y","left","x","transition","transitionTime","border","employees","empl","getUserAvatar","Rooms","roomsCount","length","delay","ms","Promise","res","setTimeout","document","getElementById","roomToHall","hallToRoom","roomToRoom","moveInsideRoom","duration","moveToDoor","duration2","positionX","clientX","offsetLeft","positionY","clientY","offsetTop","calcTravelTime","changePosition","targetRoom","doorElement","doorX","doorY","oldX","oldY","newX","newY","travelX","Math","abs","travelY","hypot","index","Loading","CoWorkers","isOnline","employee","right","show","close","Settings","setBackground","unsaved","setUnsaved","JSON","parse","stringify","setUser","saveing","setSaveing","useEffect","changeValue","property","save","updateUser","margin","cursor","Office","showCoWorkers","setShowCoWorkers","showSettings","fetchOffice","fetchOrganization","marginRight","App","page","setPage","socket","useRef","checkSignIn","checkLogin","current","io","connect","auth","on","receiveMessage","setEmployeeStates","disconnect","renderPage","getOrganization","axios","get","data","sendOfficeMessage","post","OfficeStore","rootStore","Organization","msg","officeClone","unshift","usersClone","this","makeObservable","observable","action","updateEmployee","put","baseUrl","signInWithToken","signInEmployee","credentials","signInOrganization","SignOut","UserStore","SignIn","userValues","Employee","makeAutoObservable","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b1e70e47.chunk.js","sourcesContent":["import './Dots.css'\n\nconst Dots = (props) => {\n    return (\n        <div className={`dots ${props.white && 'white'}`}>\n            <div className=\"snippet\" data-title=\".dot-hourglass\">\n                <div className=\"stage\">\n                    <div className=\"dot-flashing\"></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dots\n","import { useState } from 'react';\nimport './Login.css';\nimport { rootstore } from '../../index'\nimport Dots from '../Office/components/Dots/Dots'\nimport { AiOutlineUser, AiOutlineShop } from 'react-icons/ai'\n\nfunction Login(props) {\n    const userStore = rootstore.userStore\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [loginType, setLoginType] = useState('user')\n\n    const isActive = (tab) => {\n        if (tab === 'user' && loginType === 'user') {\n            return 'user-active'\n        }\n        if (tab === 'organization' && loginType === 'organization') {\n            return 'organization-active'\n        }\n        return ''\n    }\n\n    const signIn = async () => {\n        if (username === '' || password === '') {\n            alert('username and password required')\n            return\n        }\n\n        try {\n            setLoading(true)\n            const response = await userStore.signIn(username, password)\n            props.connectSocket(response.token, response.user.organization)\n            props.navigateTo('office')\n            setLoading(false)\n\n        } catch (error) {\n            setLoading(false)\n            setPassword('')\n            alert('could not signin')\n            console.log(error)\n        }\n    }\n\n    return (\n        <div className=\"login\">\n            <div className=\"login-title\">\n                Sign in to OfficeTalk\n            </div>\n            <div className=\"login-card block-shadow\">\n                <div className=\"login-card-tabs\">\n                    <div className={`login-card-tab ${isActive('user')}`} onClick={() => setLoginType('user')}>\n                        <AiOutlineUser size={20} />\n                        <div className=\"login-tab-text\">User</div>\n                    </div>\n                    <div className={`login-card-tab ${isActive('organization')}`} onClick={() => setLoginType('organization')}>\n                        <AiOutlineShop size={20} />\n                        <div className=\"login-tab-text\">Organization</div>\n                    </div>\n                </div>\n                <div className=\"login-input-row\">\n                    <div className=\"login-input-title\">\n                    </div>\n                    <input\n                        placeholder={'Email'}\n                        value={username}\n                        onChange={(event) => setUsername(event.target.value)}\n                    />\n                </div>\n                <div className=\"login-input-row\">\n                    <div className=\"login-input-title\">\n                    </div>\n                    <input\n                        placeholder={'Password'}\n                        value={password}\n                        type={'password'}\n                        onChange={(event) => setPassword(event.target.value)}\n                    />\n                </div>\n                <div className=\"login-input-row\">\n                    <div className=\"OTButton\" style={{ background: loginType === 'organization' && '#F74040' }} onClick={() => signIn()}>\n                        {loading ?\n                            <Dots white />\n                            :\n                            `Sign in`\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","import './Navbar.css'\nimport { observer } from 'mobx-react'\nimport { rootstore } from '../../../../index'\nimport { FiSettings, FiMic, FiVolume2, FiMicOff, FiVolumeX } from 'react-icons/fi'\n\nconst Navbar = observer((props) => {\n    const userStore = rootstore.userStore\n    const officeStore = rootstore.officeStore\n\n    const toggleMic = () => {\n        userStore.setMuted(!userStore.muted)\n    }\n\n    const toggleVolume = () => {\n        if (!userStore.silenced) {\n            userStore.setSilenced(true)\n            userStore.setMuted(true)\n        } else {\n            userStore.setSilenced(false)\n        }\n    }\n\n    const signOut = () => {\n        userStore.signOut()\n        props.disconnectSocket()\n        props.navigateTo('login')\n    }\n\n    const getCurrentRoom = () => {\n        const user = officeStore.users.find(user => user.userId === userStore.user._id)\n        if(!user){\n            return 'loading...'\n        }\n        const roomId = user.position.room\n\n        if (roomId === -1) {\n            return \"Hallway\"\n        } else {\n            return officeStore.office.rooms.find(room => room._id === roomId).name\n        }\n    }\n\n    return (\n        <div className=\"navbar block-shadow\">\n            <div className=\"navbar-logo\">\n                <img className=\"navbar-logo-image\" src={officeStore.organization.logo}>\n                </img>\n                <div className=\"navbar-office-name\">\n                    {officeStore.organization.name}\n                </div>\n            </div>\n            <div className=\"navbar-controls\">\n                <div className=\"navbar-controls-border\"></div>\n                <div className=\"navbar-room\">\n                    <div className=\"navbar-room-name\">{getCurrentRoom()}</div>\n                    <div className=\"navbar-room-title\">current room</div>\n                </div>\n                <div className=\"navbar-voice\" onClick={() => toggleMic()} >\n                    {!userStore.muted ?\n                        <FiMic size={22} className=\"navbar-voice-microphone\" color={'#1CBF73'} />\n                        :\n                        <FiMicOff size={22} className=\"navbar-voice-microphone\" color={'#F74040'} />\n                    }\n                    <div className=\"navbar-room-title\">microphone</div>\n                </div>\n                <div className=\"navbar-voice\" onClick={() => toggleVolume()}>\n                    {!userStore.silenced ?\n                        <FiVolume2 size={22} className=\"navbar-voice-volume\" color={'#1CBF73'} />\n                        :\n                        <FiVolumeX size={22} className=\"navbar-voice-volume\" color={'#F74040'} />\n                    }\n                    <div className=\"navbar-room-title\">volume</div>\n                </div>\n                <div className=\"navbar-settings\" onClick={() => props.setShowSettings(true)}>\n                    <FiSettings size={22} className=\"navbar-settings-cog\" color={'#404145'} />\n                    <div className=\"navbar-room-title\">settings</div>\n                </div>\n                <div className=\"navbar-controls-border\"></div>\n            </div>\n            <div className=\"navbar-user\">\n                {userStore.user.name}\n                <div className=\"navbar-user-avatar\" style={{ backgroundImage: `url(${userStore.user.avatar})` }}>\n                </div>\n                <div className=\"navbar-sign-out\" onClick={() => signOut()}>\n                    Sign out\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default Navbar","import './Message.css'\nimport { observer } from 'mobx-react'\nimport { rootstore } from '../../../../../index'\n\nconst Message = observer((props) => {\n    const userStore = rootstore.userStore\n\n    const myMessage = () => {\n        if (props.message.author._id === userStore.user._id) {\n            return ' my-message'\n        }\n    }\n\n    return (\n        <div className={`message ${myMessage()}`}>\n            <div className=\"message-buble\">\n                <div className=\"message-author\">\n                    {props.message.author.name}\n                </div>\n                <div className=\"message-content\">\n                    {props.message.content}\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default Message","import { useState } from 'react'\nimport { observer } from 'mobx-react'\nimport './Chat.css';\nimport Message from './Message/Message'\nimport { rootstore } from '../../../../index'\nimport Dots from '../Dots/Dots'\nimport { AiOutlineSend } from 'react-icons/ai'\n\nconst Chat = observer((props) => {\n    const [message, setMessage] = useState('')\n    const [sending, setSending] = useState(false)\n    const [activeChat, setActiveChat] = useState('office')\n    const officeStore = rootstore.officeStore\n    const userStore = rootstore.userStore\n\n    const sendMessage = async () => {\n        setSending(true)\n        const response = await officeStore.sendMessage(message)\n        setSending(false)\n        setMessage('')\n        if (!response) {\n            window.alert('sending message failed')\n        }\n    }\n\n    const getCurrentRoom = () => {\n        const user = officeStore.users.find(user => user.userId === userStore.user._id)\n        if(!user){\n            return 'loading...'\n        }\n        const roomId = user.position.room\n\n        if (roomId === -1) {\n            return \"Hallway\"\n        } else {\n            return officeStore.office.rooms.find(room => room._id === roomId).name\n        }\n    }\n\n    return (\n        <div className=\"chat block-shadow\">\n            <div className=\"chat-tabs block-shadow\">\n                <div className={`chat-tab ${activeChat === 'office' && 'chat-tab-active'}`} onClick={() => setActiveChat('office')}>Office</div>\n                <div className={`chat-tab ${activeChat === 'room' && 'chat-tab-active'}`} onClick={() => setActiveChat('room')}>{getCurrentRoom()}</div>\n            </div>\n            <div className=\"chat-messages\">\n                {rootstore.officeStore.office.messages.map((message, key) =>\n                    <Message key={key} message={message} />\n                )}\n            </div>\n            <div className=\"chat-controls\">\n                <div className=\"chat-input-container\">\n                    <input\n                        value={message}\n                        placeholder={'Say something'}\n                        onChange={(event) => setMessage(event.target.value)}\n                    />\n                    <div className=\"chat-send\" onClick={sendMessage}>\n                        {sending ?\n                            <Dots />\n                            :\n                            <AiOutlineSend size={30}/>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default Chat","import { observer } from 'mobx-react'\nimport { rootstore } from '../../../../..';\nimport './Room.css';\n\nconst Room = observer((props) => {\n    const userStore = rootstore.userStore\n    return (\n        <div className={`room ${props.first && 'first-block'} ${props.last && 'last-block'} ${props.bottomRoom && 'bottom-room'}`} id={`room${props.room._id}`}>\n            <div className=\"room-top\">\n                {props.room.name}\n            </div>\n            <div className=\"room-content\" onDoubleClick={(event) => props.move(event, props.room._id, userStore.user._id)}>\n            </div>\n            <div className=\"room-bottom\">\n                <div className=\"room-door\" id={`door${props.room._id}`}></div>\n            </div>\n        </div>\n    )\n})\n\nexport default Room;","import './Hallway.css'\nimport { observer } from 'mobx-react'\nimport { rootstore } from '../../../../..'\nconst Hallway = observer((props) => {\n    const userStore = rootstore.userStore\n    return (\n        <div className={`hallway ${props.first && 'first-block'} ${props.last && 'last-block'}`} onDoubleClick={(event) => props.move(event, -1, userStore.user._id)}>\n        </div>\n    );\n})\n\nexport default Hallway","import './Avatar.css'\nimport { observer } from 'mobx-react'\nimport { rootstore } from '../../../../index'\n\nconst Avatar = observer((props) => {\n    const officeStore = rootstore.officeStore\n    const userStore = rootstore.userStore\n\n    const getUserAvatar = () => {\n        const user = officeStore.organization.employees.find(empl => empl._id === props.user.userId)\n        if (!user) {\n            return 'laoding...'\n        } else {\n            return user.avatar\n        }\n    }\n\n    return (\n        <div className=\"avatar\" style={{\n            top: props.user.position.coordinates.y,\n            left: props.user.position.coordinates.x,\n            transition: `all ${props.user.transitionTime}s ease-in-out`,\n            border: `2px solid ${props.user.userId === userStore.user._id ? '#1CBF73' : 'black'}`,\n            backgroundImage: `url(${getUserAvatar()})`\n        }}>\n        </div>\n    )\n})\n\nexport default Avatar","import './Rooms.css'\nimport { observer } from 'mobx-react';\nimport { rootstore } from '../../../../index'\nimport Room from './Room/Room'\nimport Hallway from './Hallway/Hallway'\nimport Avatar from '../Avatar/Avatar'\n\nconst Rooms = observer(() => {\n    const officeStore = rootstore.officeStore\n    const roomsCount = officeStore.office.rooms.length\n\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n\n    const move = (event, roomId, userId) => {\n        const rooms = document.getElementById('rooms')\n        const user = officeStore.users.find(user => user.userId === userId)\n\n        if (roomId !== user.position.room) {\n            if (roomId === -1) {\n                roomToHall(userId, rooms, event, roomId, user)\n            } else if (user.position.room === -1) {\n                hallToRoom(user, rooms, event, roomId, userId)\n            } else {\n                roomToRoom(rooms, event, roomId, user)\n            }\n        } else {\n            moveInsideRoom(userId, event, roomId)\n        }\n    }\n\n    const roomToHall = async (userId, rooms, event, roomId, user) => {\n        const duration = moveToDoor(userId, rooms, user.position.room)\n        await delay(duration * 1000)\n        moveInsideRoom(userId, event, roomId)\n    }\n\n    const hallToRoom = async (user, rooms, event, roomId) => {\n        const duration = moveToDoor(user.userId, rooms, roomId)\n        await delay(duration * 1000)\n        moveInsideRoom(user.userId, event, roomId)\n    }\n\n    const roomToRoom = async (rooms, event, roomId, user) => {\n        const duration = moveToDoor(user.userId, rooms, user.position.room)\n        await delay(duration * 1000)\n        const duration2 = moveToDoor(user.userId, rooms, roomId)\n        await delay(duration2 * 1000)\n        moveInsideRoom(user.userId, event, roomId)\n    }\n\n    const moveInsideRoom = (userId, event, roomId) => {\n        const user = officeStore.users.find(user => user.userId  === userId)\n        const rooms = document.getElementById('rooms')\n        const positionX = event.clientX - rooms.offsetLeft\n        const positionY = event.clientY - rooms.offsetTop\n        const transitionTime = calcTravelTime(user.position.coordinates.x, user.position.coordinates.y, positionX, positionY)\n        officeStore.changePosition(userId, { room: roomId , coordinates: { x: positionX, y: positionY } }, transitionTime)\n        return transitionTime\n    }\n\n    const moveToDoor = (userId, rooms, targetRoom) => {\n        const user = officeStore.users.find(user => user.userId  === userId)\n        const doorElement = document.getElementById(`door${targetRoom}`)\n\n        //const doorX = doorElement.offsetLeft - rooms.offsetLeft + 30\n        const doorX = doorElement.offsetLeft + 30\n        //const doorY = doorElement.offsetTop - rooms.offsetTop\n        const doorY = doorElement.offsetTop\n        const transitionTime = calcTravelTime(user.position.coordinates.x, user.position.coordinates.y, doorX, doorY)\n        officeStore.changePosition(userId, { room: user.position.room, coordinates: { x: doorX, y: doorY } }, transitionTime)\n        return transitionTime\n    }\n\n    const calcTravelTime = (oldX, oldY, newX, newY) => {\n        const travelX = Math.abs(oldX - newX)\n        const travelY = Math.abs(oldY - newY)\n        const TravelLength = Math.hypot(travelX,travelY)\n        return TravelLength * 0.01\n    }\n\n    return (\n        <div className=\"rooms\" id=\"rooms\">\n            <div className=\"rooms-row\">\n                {officeStore.office.rooms.map((room, index) => {\n                    if (index % 2 === 0) {\n                        return (\n                            <Room\n                                room={room}\n                                first={index === 0}\n                                move={move}\n                            />\n                        )\n                    } return null\n                })}\n            </div>\n            <Hallway move={move} />\n            <div className=\"rooms-row\">\n                {officeStore.office.rooms.map((room, index) => {\n                    if (index % 2 === 1) {\n                        return (\n                            <Room\n                                room={room}\n                                bottomRoom\n                                first={index === 1}\n                                move={move}\n                            />\n\n                        )\n                    } else return null\n                })}\n                {roomsCount % 2 === 1 &&\n                    <div className=\"room-block-empty\"></div>\n                }\n            </div>\n            <div className=\"user-layer\">\n                {officeStore.users.map(user => <Avatar key={user._id} user={user} />)}\n            </div>\n        </div>\n    )\n})\n\nexport default Rooms","import Dots from '../Dots/Dots';\nimport './Loading.css';\n\nconst Loading = (props) => {\n    return (\n        <div className=\"loading\">\n            <div className=\"loading-text\">Loading Office</div>\n            <Dots />\n        </div>\n    )\n}\n\nexport default Loading","import './CoWorkers.css'\nimport { observer } from 'mobx-react'\nimport { rootstore } from '../../../../index'\nimport { FiChevronsRight } from 'react-icons/fi'\n\n\nconst CoWorkers = observer((props) => {\n    const officeStore = rootstore.officeStore\n\n    const isOnline = (employee) => {\n        return officeStore.users.find(user => user._id === employee._id)\n    }\n\n    return (\n        <div className=\"coworkers block-shadow\" style={{ right: props.show ? '0px' : '-250px' }}>\n            <div className=\"coworkers-header\">\n                Co-workers\n            </div>\n            <div className=\"coworkers-header-back\" onClick={() => props.close()}>\n                <FiChevronsRight size={25} />\n            </div>\n            <div className=\"coworkers-names\">\n                {officeStore.organization.employees.map(employee => {\n                    return (\n                        <div className=\"coworkers-user\">\n                            <div className=\"coworkers-user-avatar\" style={{backgroundImage: `url(${employee.avatar})`}}></div>\n                            <div className={`coworkers-user-name ${isOnline(employee) && 'user-online'}`}> {employee.name} </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n})\n\nexport default CoWorkers;","import './Settings.css'\nimport { observer } from 'mobx-react'\nimport { rootstore } from '../../../../index'\nimport { FiX } from 'react-icons/fi'\nimport { useEffect, useState } from 'react'\nimport Dots from '../Dots/Dots'\n\nconst Settings = observer((props) => {\n    const userStore = rootstore.userStore\n    const officeStore = rootstore.officeStore\n    const [background, setBackground] = useState('transparent')\n    const [unsaved, setUnsaved] = useState(false)\n    const [user, setUser] = useState(JSON.parse(JSON.stringify(userStore.user)))\n    const [saveing, setSaveing] = useState(false)\n\n    useEffect(() => {\n        setBackground('rgba(64, 65, 69, 0.5)')\n    }, [])\n\n    const changeValue = (property, event) => {\n        if (!unsaved) {\n            setUnsaved(true)\n        }\n        setUser({ ...user, [property]: event.target.value })\n    }\n\n    const save = async () => {\n        if (!unsaved) return\n\n        setSaveing(true)\n        const response = await userStore.updateUser(user)\n        setSaveing(false)\n\n        if (response) {\n            setUnsaved(false)\n        } else {\n            alert('could not save user')\n        }\n    }\n\n    return (\n        <div className=\"settings-background\" style={{ background: background }}>\n            <div className=\"settings-modal block-shadow\">\n                <div className=\"settings-top-row\">\n                    <FiX size={25} style={{ margin: '10px', cursor: 'pointer' }} color={'#404145'} onClick={() => props.setShowSettings(false)} />\n                </div>\n                <div className=\"settings-content\">\n                    <div className=\"settings-content-row\">\n                        <div className=\"settings-avatar\" style={{ backgroundImage: `url(${user.avatar})` }}></div>\n                    </div>\n                    <div className=\"settings-content-row\">\n                        <div className=\"settings-input-row\">\n                            <div className=\"settings-input-label\">Avatar url</div>\n                            <input\n                                value={user.avatar}\n                                onChange={(event) => changeValue('avatar', event)}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"settings-content-row\">\n                        <div className=\"settings-input-row\">\n                            <div className=\"settings-input-label\">Name</div>\n                            <input\n                                value={user.name}\n                                onChange={(event) => changeValue('name', event)}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"settings-bottom-row\">\n                    <div className={`settings-save-button ${unsaved && 'unsaved-changes'}`} onClick={() => save()}>\n                        {saveing ?\n                            <Dots white />\n                            :\n                            'Save'\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default Settings","import { useEffect, useState } from 'react'\nimport './Office.css'\nimport { observer } from 'mobx-react'\nimport { isObservable} from 'mobx'\nimport Navbar from './components/Navbar/Navbar'\nimport Chat from './components/Chat/Chat'\nimport Rooms from './components/rooms/Rooms'\nimport { rootstore } from '../../index'\nimport Loading from './components/Loading/Loading'\nimport CoWorkers from './components/CoWorkers/CoWorkers'\nimport Settings from './components/Settings/Settings'\nimport { FiUsers } from 'react-icons/fi'\n\nconst Office = observer((props) => {\n    const officeStore = rootstore.officeStore\n    const userStore = rootstore.userStore\n    const [showCoWorkers, setShowCoWorkers] = useState(false)\n    const [showSettings, setShowSettings] = useState(false)\n\n    useEffect(() => {\n        const fetchOrganization = async () => {\n            await officeStore.fetchOffice(userStore.user.organization)\n        }\n\n        fetchOrganization()\n    }, [officeStore, userStore])\n\n    if (!officeStore.office) {\n        return <Loading />\n    }\n\n    return (\n        <div className=\"office\">\n            <Navbar\n                navigateTo={props.navigateTo}\n                disconnectSocket={props.disconnectSocket}\n                setShowSettings={setShowSettings}\n            />\n            <div className=\"office-body\">\n                <Chat />\n                <div className=\"office-body-scrollable\">\n                    <Rooms />\n                </div>\n            </div>\n            <div className=\"office-toggle-coworkers\" onClick={() => setShowCoWorkers(!showCoWorkers)}>\n                <FiUsers style={{marginRight: '3px'}} size={18}/>\n                {`Co-workers (${officeStore.organization.employees.length})`}\n            </div>\n            <CoWorkers show={showCoWorkers} close={() => setShowCoWorkers(false)}/>\n            {showSettings && <Settings setShowSettings={setShowSettings} />}\n        </div>\n    )\n})\n\nexport default Office","import { useEffect, useState, useRef } from 'react'\nimport { observer } from 'mobx-react'\nimport { rootstore } from './index'\nimport { io } from 'socket.io-client'\nimport Login from './Views/Login/Login'\nimport Office from './Views/Office/Office'\nimport './App.css'\n\nconst App = observer(() => {\n  const userStore = rootstore.userStore\n  const officeStore = rootstore.officeStore\n  const [page, setPage] = useState('login')\n\n  const socket = useRef()\n\n  useEffect(() => {\n    const checkLogin = async () => {\n      const response = await userStore.checkSignIn()\n      response.user && setPage('office')\n      connectSocket(response.token, response.user.organization)\n    }\n\n    checkLogin()\n  }, [userStore])\n\n  const connectSocket = (token, organization) => {\n    socket.current = io.connect(`/${organization}`, {\n      auth: {\n        token\n      }\n    })\n\n    socket.current.on('message', (message) => {\n      officeStore.receiveMessage(message)\n    })\n\n    socket.current.on('employees', (employees) => {\n      officeStore.setEmployeeStates(employees)\n    })\n\n  }\n\n  const disconnectSocket = () => {\n    socket.current.disconnect()\n  }\n\n  const renderPage = () => {\n    switch (page) {\n      case 'login':\n        return <Login navigateTo={setPage} connectSocket={connectSocket} />\n      case 'office':\n        return <Office navigateTo={setPage} disconnectSocket={disconnectSocket} />\n      case 'controlPanel':\n        return <Login navigateTo={setPage} />\n      default:\n        return <Login navigateTo={setPage} />\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {renderPage()}\n    </div>\n  )\n})\n\nexport default App;\n","import axios from 'axios'\nconst baseUrl = '/api/organizations'\n\nconst getOrganization = async (id) => {\n    const response = await axios.get(`${baseUrl}/${id}`)\n    return response.data\n}\n\nexport default { getOrganization }","import axios from 'axios'\nconst baseUrl = '/api/messages'\n\nconst sendOfficeMessage = async (content) => {\n    const response = await axios.post(`${baseUrl}`, content)\n    return response.data\n}\n\nexport default { sendOfficeMessage }","import { makeObservable, observable, action } from 'mobx'\nimport Organization from '../Services/Organization'\nimport Message from '../Services/Message'\n\nclass OfficeStore {\n    rootStore = null\n    office = null\n    organization = null\n\n    users = [{\n        id: \"600fddd784a2d221e466a3f9\",\n        name: 'Axel Baumgartner',\n        position: { room: -1, coordinates: { x: 5, y: 360 } },\n        transitionTime: 2\n    },\n    {\n        id: \"600fdd8584a2d221e466a3f8\",\n        name: \"600fddd784a2d221e466a3f9\",\n        position: { room: -1, coordinates: { x: 5, y: 360 } },\n        transitionTime: 2\n    }]\n\n    constructor(rootStore) {\n        this.rootStore = rootStore\n        makeObservable(this, {\n            rootStore: observable,\n            office: observable,\n            organization: observable,\n            users: observable,\n            receiveMessage: action,\n            changePosition: action,\n            sendMessage: action,\n            fetchOffice: action,\n            setEmployeeStates: action\n        })\n    }\n\n    fetchOffice = async (id) => {\n        const organization = await Organization.getOrganization(id)\n        this.organization = organization\n        this.office = organization.office\n        console.log('current organization:', this.organization)\n        return organization\n    }\n\n    setEmployeeStates = (employees) => {\n        console.log(employees)\n        this.users = employees\n    }\n\n    sendMessage = async (content) => {\n        try {\n            const response = await Message.sendOfficeMessage({ content: content })\n            if (response) {\n                if (!this.office.messages.find(msg => msg._id === response._id)) {\n                    let officeClone = JSON.parse(JSON.stringify(this.office))\n                    officeClone.messages.unshift(response)\n                    this.office = officeClone\n                }\n                return response\n            }\n        } catch {\n            return null\n        }\n    }\n\n    receiveMessage = (message) => {\n        if (!this.office.messages.find(msg => msg._id === message._id)) {\n            const officeClone = JSON.parse(JSON.stringify(this.office))\n            officeClone.messages.unshift(message)\n            this.office = officeClone\n        }\n    }\n\n    changePosition = (id, position, transitionTime) => {\n        let usersClone = JSON.parse(JSON.stringify(this.users))\n        usersClone.find(user => user.userId === id).position = position\n        usersClone.find(user => user.userId === id).transitionTime = transitionTime\n        this.users = usersClone\n    }\n}\n\nexport default OfficeStore","import axios from 'axios'\nconst baseUrl = '/api/employees'\n\nconst updateEmployee = async (employee) => {\n    const response = await axios.put(`${baseUrl}/${employee._id}`, employee)\n    return response.data\n}\n\nexport default { updateEmployee }","import axios from 'axios'\nconst baseUrl = '/api/signin'\n\nconst signInWithToken = async () => {\n    const response = await axios.post(baseUrl)\n    return response.data\n}\n\nconst signInEmployee = async (credentials) => {\n    const response = await axios.post(`${baseUrl}/employee`, credentials)\n    return response.data\n}\n\nconst signInOrganization = async (credentials) => {\n    const response = await axios.post(`${baseUrl}/organization`, credentials)\n    return response.data\n}\n\nconst SignOut = async () => {\n    const response = await axios.post(`${baseUrl}/signout`)\n    return response.data\n}\n\nexport default { signInWithToken, signInEmployee, signInOrganization, SignOut }","import { makeObservable, observable, action } from 'mobx'\nimport Employee from '../Services/Employee'\nimport SignIn from '../Services/SignIn'\n\n\nclass UserStore {\n    rootStore = null\n    user = null\n    muted = false\n    silenced = false\n\n    constructor(rootStore) {\n        this.rootStore = rootStore\n        makeObservable(this, {\n            rootStore: observable,\n            user: observable,\n            muted: observable,\n            silenced: observable,\n            signIn: action,\n            checkSignIn: action,\n            signOut: action,\n            updateUser: action,\n            setMuted: action,\n            setSilenced: action\n        })\n    }\n\n    signIn = async (username, password) => {\n        const response = await SignIn.signInEmployee({ username, password })\n        this.user = response.user\n        console.log('current user:', this.user)\n        return response\n    }\n\n    checkSignIn = async () => {\n        const response = await SignIn.signInWithToken()\n        this.user = response.user\n        return response\n    }\n\n    signOut = async () => {\n        await SignIn.SignOut()\n        this.user = null\n    }\n\n    updateUser = async (userValues) => {\n        try {\n            const response = await Employee.updateEmployee(userValues)\n            this.user = response\n            return response\n        } catch {\n            return null\n        }\n    }\n\n    setMuted = (value) => {\n        this.muted = value\n    }\n\n    setSilenced = (value) => {\n        this.silenced = value\n    }\n}\n\nexport default UserStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport rootStore from './Stores/RootStore'\n\nexport const rootstore = new rootStore()\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);","import { makeAutoObservable } from 'mobx'\nimport OfficeStore from \"./OfficeStore\"\nimport UserStore from \"./UserStore\"\n\nclass RootStore {\n    officeStore\n    userStore\n\n    constructor() {\n        this.officeStore = new OfficeStore(this)\n        this.userStore = new UserStore(this)\n        makeAutoObservable(this)\n    }\n}\n\nexport default RootStore\n/*const storeInstance = new RootStore()\nexport default storeInstance;*/"],"sourceRoot":""}